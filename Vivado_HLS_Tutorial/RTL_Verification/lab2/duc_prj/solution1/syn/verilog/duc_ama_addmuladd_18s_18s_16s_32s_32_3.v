// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ==============================================================


`timescale 1 ns / 1 ps

  module duc_ama_addmuladd_18s_18s_16s_32s_32_3_DSP48_1(clk, rst, ce, a, b, c, d, p);
input clk;
input rst;
input ce;
input signed [18 - 1 : 0] a; 
input signed [18 - 1 : 0] b; 
input signed [16 - 1 : 0] c; 
input signed [32 - 1 : 0] d; 
output signed [32 - 1 : 0] p; 


reg signed [19 - 1 : 0] ad_reg; 
reg signed [16 - 1 : 0] c_reg; 
reg signed [35 - 1 : 0] m_reg; 

always @ (posedge clk) begin
    if (rst) begin
        ad_reg <= 0;
        c_reg <= 0;
        m_reg <= 0;
    end else
    if (ce) begin
        ad_reg <= $signed ( a) + $signed (b);
        c_reg <= c;
        m_reg <= $signed (ad_reg) * $signed (c_reg);
    end
end

assign p =  $signed (m_reg) + $signed (d);

endmodule

`timescale 1 ns / 1 ps
module duc_ama_addmuladd_18s_18s_16s_32s_32_3(
    clk,
    reset,
    ce,
    din0,
    din1,
    din2,
    din3,
    dout);

parameter ID = 32'd1;
parameter NUM_STAGE = 32'd1;
parameter din0_WIDTH = 32'd1;
parameter din1_WIDTH = 32'd1;
parameter din2_WIDTH = 32'd1;
parameter din3_WIDTH = 32'd1;
parameter dout_WIDTH = 32'd1;
input clk;
input reset;
input ce;
input[din0_WIDTH - 1:0] din0;
input[din1_WIDTH - 1:0] din1;
input[din2_WIDTH - 1:0] din2;
input[din3_WIDTH - 1:0] din3;
output[dout_WIDTH - 1:0] dout;



duc_ama_addmuladd_18s_18s_16s_32s_32_3_DSP48_1 duc_ama_addmuladd_18s_18s_16s_32s_32_3_DSP48_1_U(
    .clk( clk ),
    .rst( reset ),
    .ce( ce ),
    .a( din0 ),
    .b( din1 ),
    .c( din2 ),
    .d( din3 ),
    .p( dout ));

endmodule

