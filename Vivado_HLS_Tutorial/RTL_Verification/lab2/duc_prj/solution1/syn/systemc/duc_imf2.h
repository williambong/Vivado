// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _duc_imf2_HH_
#define _duc_imf2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "duc_mac_muladd_18s_18s_38ns_38_4.h"
#include "duc_imf2_c_1.h"
#include "duc_imf2_shift_reg_p_1.h"

namespace ap_rtl {

struct duc_imf2 : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<18> > x;
    sc_out< sc_lv<18> > ap_return;


    // Module declarations
    duc_imf2(sc_module_name name);
    SC_HAS_PROCESS(duc_imf2);

    ~duc_imf2();

    sc_trace_file* mVcdFile;

    duc_imf2_c_1* c_1_U;
    duc_imf2_shift_reg_p_1* shift_reg_p_1_U;
    duc_mac_muladd_18s_18s_38ns_38_4<1,4,18,18,38,38>* duc_mac_muladd_18s_18s_38ns_38_4_U0;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_25;
    sc_signal< sc_lv<4> > i_3;
    sc_signal< sc_lv<18> > in_2;
    sc_signal< sc_lv<4> > c_1_address0;
    sc_signal< sc_logic > c_1_ce0;
    sc_signal< sc_lv<18> > c_1_q0;
    sc_signal< sc_lv<1> > init_3;
    sc_signal< sc_lv<1> > ch_2;
    sc_signal< sc_lv<5> > shift_reg_p_1_address0;
    sc_signal< sc_logic > shift_reg_p_1_ce0;
    sc_signal< sc_logic > shift_reg_p_1_we0;
    sc_signal< sc_lv<38> > shift_reg_p_1_d0;
    sc_signal< sc_lv<38> > shift_reg_p_1_q0;
    sc_signal< sc_lv<2> > cnt;
    sc_signal< sc_lv<4> > i_3_load_reg_257;
    sc_signal< sc_lv<4> > inc_fu_100_p2;
    sc_signal< sc_lv<4> > inc_reg_267;
    sc_signal< sc_lv<18> > c_1_load_reg_278;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_73;
    sc_signal< sc_lv<1> > ch_2_load_reg_283;
    sc_signal< sc_lv<1> > sel_tmp1_fu_127_p2;
    sc_signal< sc_lv<1> > sel_tmp1_reg_294;
    sc_signal< sc_lv<1> > sel_tmp2_fu_132_p2;
    sc_signal< sc_lv<1> > sel_tmp2_reg_300;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_90;
    sc_signal< sc_lv<38> > shift_reg_p_1_load_reg_310;
    sc_signal< sc_lv<1> > sel_tmp5_fu_155_p2;
    sc_signal< sc_lv<1> > sel_tmp5_reg_315;
    sc_signal< sc_lv<38> > s_assign_fu_172_p3;
    sc_signal< sc_lv<38> > s_assign_reg_330;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_106;
    sc_signal< sc_lv<38> > grp_fu_250_p3;
    sc_signal< sc_lv<38> > sum_reg_335;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_115;
    sc_signal< sc_lv<64> > tmp_s_fu_106_p1;
    sc_signal< sc_lv<64> > tmp_15_fu_122_p1;
    sc_signal< sc_lv<64> > tmp_17_fu_185_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_126;
    sc_signal< sc_lv<4> > inc_3_fu_238_p3;
    sc_signal< sc_lv<1> > tmp_fu_88_p2;
    sc_signal< sc_lv<1> > tmp_21_fu_194_p2;
    sc_signal< sc_lv<1> > tmp_22_fu_206_p2;
    sc_signal< sc_lv<2> > tmp_23_fu_217_p2;
    sc_signal< sc_lv<5> > tmp_14_fu_115_p3;
    sc_signal< sc_lv<1> > sel_tmp4_fu_151_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_145_p2;
    sc_signal< sc_lv<1> > tmp_20_fu_168_p2;
    sc_signal< sc_lv<5> > tmp_16_fu_179_p3;
    sc_signal< sc_lv<18> > grp_fu_250_p0;
    sc_signal< sc_lv<18> > grp_fu_250_p1;
    sc_signal< sc_lv<38> > grp_fu_250_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_218;
    sc_signal< sc_logic > grp_fu_250_ce;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_st5_fsm_4;
    static const sc_lv<7> ap_ST_st6_fsm_5;
    static const sc_lv<7> ap_ST_st7_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<38> ap_const_lv38_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_4;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_106();
    void thread_ap_sig_bdd_115();
    void thread_ap_sig_bdd_126();
    void thread_ap_sig_bdd_218();
    void thread_ap_sig_bdd_25();
    void thread_ap_sig_bdd_73();
    void thread_ap_sig_bdd_90();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_c_1_address0();
    void thread_c_1_ce0();
    void thread_grp_fu_250_ce();
    void thread_grp_fu_250_p0();
    void thread_grp_fu_250_p1();
    void thread_grp_fu_250_p2();
    void thread_inc_3_fu_238_p3();
    void thread_inc_fu_100_p2();
    void thread_s_assign_fu_172_p3();
    void thread_sel_tmp1_fu_127_p2();
    void thread_sel_tmp2_fu_132_p2();
    void thread_sel_tmp3_fu_145_p2();
    void thread_sel_tmp4_fu_151_p2();
    void thread_sel_tmp5_fu_155_p2();
    void thread_shift_reg_p_1_address0();
    void thread_shift_reg_p_1_ce0();
    void thread_shift_reg_p_1_d0();
    void thread_shift_reg_p_1_we0();
    void thread_tmp_14_fu_115_p3();
    void thread_tmp_15_fu_122_p1();
    void thread_tmp_16_fu_179_p3();
    void thread_tmp_17_fu_185_p1();
    void thread_tmp_20_fu_168_p2();
    void thread_tmp_21_fu_194_p2();
    void thread_tmp_22_fu_206_p2();
    void thread_tmp_23_fu_217_p2();
    void thread_tmp_fu_88_p2();
    void thread_tmp_s_fu_106_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
