// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "duc_imf3.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic duc_imf3::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic duc_imf3::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> duc_imf3::ap_ST_st1_fsm_0 = "1";
const sc_lv<8> duc_imf3::ap_ST_st2_fsm_1 = "10";
const sc_lv<8> duc_imf3::ap_ST_st3_fsm_2 = "100";
const sc_lv<8> duc_imf3::ap_ST_st4_fsm_3 = "1000";
const sc_lv<8> duc_imf3::ap_ST_st5_fsm_4 = "10000";
const sc_lv<8> duc_imf3::ap_ST_st6_fsm_5 = "100000";
const sc_lv<8> duc_imf3::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<8> duc_imf3::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<32> duc_imf3::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> duc_imf3::ap_const_lv1_1 = "1";
const sc_lv<6> duc_imf3::ap_const_lv6_0 = "000000";
const sc_lv<32> duc_imf3::ap_const_lv32_1 = "1";
const sc_lv<32> duc_imf3::ap_const_lv32_2 = "10";
const sc_lv<32> duc_imf3::ap_const_lv32_3 = "11";
const sc_lv<1> duc_imf3::ap_const_lv1_0 = "0";
const sc_lv<32> duc_imf3::ap_const_lv32_4 = "100";
const sc_lv<32> duc_imf3::ap_const_lv32_5 = "101";
const sc_lv<32> duc_imf3::ap_const_lv32_6 = "110";
const sc_lv<32> duc_imf3::ap_const_lv32_7 = "111";
const sc_lv<6> duc_imf3::ap_const_lv6_1 = "1";
const sc_lv<6> duc_imf3::ap_const_lv6_5 = "101";
const sc_lv<17> duc_imf3::ap_const_lv17_0 = "00000000000000000";
const sc_lv<38> duc_imf3::ap_const_lv38_0 = "00000000000000000000000000000000000000";
const sc_lv<35> duc_imf3::ap_const_lv35_0 = "00000000000000000000000000000000000";
const sc_lv<32> duc_imf3::ap_const_lv32_11 = "10001";
const sc_lv<32> duc_imf3::ap_const_lv32_22 = "100010";
const sc_lv<6> duc_imf3::ap_const_lv6_F = "1111";

duc_imf3::duc_imf3(sc_module_name name) : sc_module(name), mVcdFile(0) {
    c_1_0_U = new duc_imf3_c_1_0("c_1_0_U");
    c_1_0_U->clk(ap_clk);
    c_1_0_U->reset(ap_rst);
    c_1_0_U->address0(c_1_0_address0);
    c_1_0_U->ce0(c_1_0_ce0);
    c_1_0_U->q0(c_1_0_q0);
    shift_reg_p0_U = new duc_imf3_shift_reg_p0("shift_reg_p0_U");
    shift_reg_p0_U->clk(ap_clk);
    shift_reg_p0_U->reset(ap_rst);
    shift_reg_p0_U->address0(shift_reg_p0_address0);
    shift_reg_p0_U->ce0(shift_reg_p0_ce0);
    shift_reg_p0_U->we0(shift_reg_p0_we0);
    shift_reg_p0_U->d0(shift_reg_p0_d0);
    shift_reg_p0_U->q0(shift_reg_p0_q0);
    c_1_1_U = new duc_imf3_c_1_1("c_1_1_U");
    c_1_1_U->clk(ap_clk);
    c_1_1_U->reset(ap_rst);
    c_1_1_U->address0(c_1_1_address0);
    c_1_1_U->ce0(c_1_1_ce0);
    c_1_1_U->q0(c_1_1_q0);
    shift_reg_p1_U = new duc_imf3_shift_reg_p0("shift_reg_p1_U");
    shift_reg_p1_U->clk(ap_clk);
    shift_reg_p1_U->reset(ap_rst);
    shift_reg_p1_U->address0(shift_reg_p1_address0);
    shift_reg_p1_U->ce0(shift_reg_p1_ce0);
    shift_reg_p1_U->we0(shift_reg_p1_we0);
    shift_reg_p1_U->d0(shift_reg_p1_d0);
    shift_reg_p1_U->q0(shift_reg_p1_q0);
    duc_mac_muladd_18s_18s_38ns_38_4_U4 = new duc_mac_muladd_18s_18s_38ns_38_4<1,4,18,18,38,38>("duc_mac_muladd_18s_18s_38ns_38_4_U4");
    duc_mac_muladd_18s_18s_38ns_38_4_U4->clk(ap_clk);
    duc_mac_muladd_18s_18s_38ns_38_4_U4->reset(ap_rst);
    duc_mac_muladd_18s_18s_38ns_38_4_U4->din0(grp_fu_337_p0);
    duc_mac_muladd_18s_18s_38ns_38_4_U4->din1(grp_fu_337_p1);
    duc_mac_muladd_18s_18s_38ns_38_4_U4->din2(grp_fu_337_p2);
    duc_mac_muladd_18s_18s_38ns_38_4_U4->ce(grp_fu_337_ce);
    duc_mac_muladd_18s_18s_38ns_38_4_U4->dout(grp_fu_337_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc1_fu_249_p2);
    sensitive << ( tmp_16_reg_452 );
    sensitive << ( tmp_26_i6_fu_246_p1 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_ap_return);
    sensitive << ( tmp_reg_353 );
    sensitive << ( tmp_12_reg_467 );
    sensitive << ( tmp_11_reg_477 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_ap_sig_bdd_103);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_120);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_141);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_154);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_167);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_186);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_86);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_26 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_86 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_103 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_120 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_bdd_141 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_bdd_154 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_bdd_167 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_bdd_186 );

    SC_METHOD(thread_c_1_0_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_s_fu_157_p1 );

    SC_METHOD(thread_c_1_0_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_c_1_1_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_s_fu_157_p1 );

    SC_METHOD(thread_c_1_1_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ch_4_fu_166_p3);
    sensitive << ( j );

    SC_METHOD(thread_grp_fu_337_ce);

    SC_METHOD(thread_grp_fu_337_p0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( d_assign_reg_122 );

    SC_METHOD(thread_grp_fu_337_p1);
    sensitive << ( c_1_0_load_reg_395 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_grp_fu_337_p2);
    sensitive << ( tmp_15_reg_447 );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );

    SC_METHOD(thread_inc_2_fu_325_p3);
    sensitive << ( inc_reg_368 );
    sensitive << ( tmp_14_reg_415 );

    SC_METHOD(thread_inc_fu_152_p2);
    sensitive << ( i_2_load_reg_345 );

    SC_METHOD(thread_m_1_fu_240_p3);
    sensitive << ( c_1_1_load_reg_405 );
    sensitive << ( mt_reg_442 );

    SC_METHOD(thread_mt_fu_211_p2);
    sensitive << ( p_shl_fu_203_p3 );
    sensitive << ( tmp_i_cast_fu_199_p1 );

    SC_METHOD(thread_or_cond5_fu_295_p2);
    sensitive << ( tmp_14_reg_415 );
    sensitive << ( tmp_17_fu_290_p2 );

    SC_METHOD(thread_or_cond_fu_221_p2);
    sensitive << ( init_2 );
    sensitive << ( tmp_14_reg_415 );

    SC_METHOD(thread_p_shl_fu_203_p3);
    sensitive << ( d_assign_reg_122 );

    SC_METHOD(thread_shift_reg_p0_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_8_fu_181_p1 );
    sensitive << ( tmp_10_fu_279_p1 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_shift_reg_p0_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_shift_reg_p0_d0);
    sensitive << ( acc0_reg_472 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_shift_reg_p0_we0);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_shift_reg_p1_address0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_8_fu_181_p1 );
    sensitive << ( tmp_10_fu_279_p1 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_shift_reg_p1_ce0);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_shift_reg_p1_d0);
    sensitive << ( acc1_reg_462 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_shift_reg_p1_we0);
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_tmp_10_fu_279_p1);
    sensitive << ( tmp_9_fu_273_p3 );

    SC_METHOD(thread_tmp_14_fu_187_p2);
    sensitive << ( i_2_load_reg_345 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_tmp_15_fu_226_p3);
    sensitive << ( shift_reg_p0_load_reg_422 );
    sensitive << ( or_cond_fu_221_p2 );

    SC_METHOD(thread_tmp_16_fu_233_p3);
    sensitive << ( shift_reg_p1_load_reg_437 );
    sensitive << ( or_cond_fu_221_p2 );

    SC_METHOD(thread_tmp_17_fu_290_p2);
    sensitive << ( p_Val2_s_reg_384 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );

    SC_METHOD(thread_tmp_18_fu_306_p2);
    sensitive << ( p_Val2_s_reg_384 );

    SC_METHOD(thread_tmp_19_fu_311_p3);
    sensitive << ( tmp_17_fu_290_p2 );
    sensitive << ( tmp_18_fu_306_p2 );

    SC_METHOD(thread_tmp_26_i6_fu_246_p1);
    sensitive << ( m_1_reg_457 );

    SC_METHOD(thread_tmp_7_fu_174_p3);
    sensitive << ( inc_reg_368 );
    sensitive << ( ch_4_fu_166_p3 );

    SC_METHOD(thread_tmp_8_fu_181_p1);
    sensitive << ( tmp_7_fu_174_p3 );

    SC_METHOD(thread_tmp_9_fu_273_p3);
    sensitive << ( i_2_load_reg_345 );
    sensitive << ( ch_4_reg_390 );

    SC_METHOD(thread_tmp_fu_136_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( i_2 );

    SC_METHOD(thread_tmp_i_cast_fu_199_p1);
    sensitive << ( d_assign_reg_122 );

    SC_METHOD(thread_tmp_s_fu_157_p1);
    sensitive << ( i_2_load_reg_345 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    ap_CS_fsm = "00000001";
    i_2 = "000000";
    in_1 = "000000000000000000";
    j = "000000";
    init_2 = "1";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "duc_imf3_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_26, "ap_sig_bdd_26");
    sc_trace(mVcdFile, i_2, "i_2");
    sc_trace(mVcdFile, in_1, "in_1");
    sc_trace(mVcdFile, j, "j");
    sc_trace(mVcdFile, c_1_0_address0, "c_1_0_address0");
    sc_trace(mVcdFile, c_1_0_ce0, "c_1_0_ce0");
    sc_trace(mVcdFile, c_1_0_q0, "c_1_0_q0");
    sc_trace(mVcdFile, init_2, "init_2");
    sc_trace(mVcdFile, shift_reg_p0_address0, "shift_reg_p0_address0");
    sc_trace(mVcdFile, shift_reg_p0_ce0, "shift_reg_p0_ce0");
    sc_trace(mVcdFile, shift_reg_p0_we0, "shift_reg_p0_we0");
    sc_trace(mVcdFile, shift_reg_p0_d0, "shift_reg_p0_d0");
    sc_trace(mVcdFile, shift_reg_p0_q0, "shift_reg_p0_q0");
    sc_trace(mVcdFile, c_1_1_address0, "c_1_1_address0");
    sc_trace(mVcdFile, c_1_1_ce0, "c_1_1_ce0");
    sc_trace(mVcdFile, c_1_1_q0, "c_1_1_q0");
    sc_trace(mVcdFile, shift_reg_p1_address0, "shift_reg_p1_address0");
    sc_trace(mVcdFile, shift_reg_p1_ce0, "shift_reg_p1_ce0");
    sc_trace(mVcdFile, shift_reg_p1_we0, "shift_reg_p1_we0");
    sc_trace(mVcdFile, shift_reg_p1_d0, "shift_reg_p1_d0");
    sc_trace(mVcdFile, shift_reg_p1_q0, "shift_reg_p1_q0");
    sc_trace(mVcdFile, i_2_load_reg_345, "i_2_load_reg_345");
    sc_trace(mVcdFile, tmp_fu_136_p2, "tmp_fu_136_p2");
    sc_trace(mVcdFile, tmp_reg_353, "tmp_reg_353");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_86, "ap_sig_bdd_86");
    sc_trace(mVcdFile, inc_fu_152_p2, "inc_fu_152_p2");
    sc_trace(mVcdFile, inc_reg_368, "inc_reg_368");
    sc_trace(mVcdFile, p_Val2_s_reg_384, "p_Val2_s_reg_384");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_103, "ap_sig_bdd_103");
    sc_trace(mVcdFile, ch_4_fu_166_p3, "ch_4_fu_166_p3");
    sc_trace(mVcdFile, ch_4_reg_390, "ch_4_reg_390");
    sc_trace(mVcdFile, c_1_0_load_reg_395, "c_1_0_load_reg_395");
    sc_trace(mVcdFile, c_1_1_load_reg_405, "c_1_1_load_reg_405");
    sc_trace(mVcdFile, tmp_14_fu_187_p2, "tmp_14_fu_187_p2");
    sc_trace(mVcdFile, tmp_14_reg_415, "tmp_14_reg_415");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_120, "ap_sig_bdd_120");
    sc_trace(mVcdFile, shift_reg_p0_load_reg_422, "shift_reg_p0_load_reg_422");
    sc_trace(mVcdFile, shift_reg_p1_load_reg_437, "shift_reg_p1_load_reg_437");
    sc_trace(mVcdFile, mt_fu_211_p2, "mt_fu_211_p2");
    sc_trace(mVcdFile, mt_reg_442, "mt_reg_442");
    sc_trace(mVcdFile, tmp_15_fu_226_p3, "tmp_15_fu_226_p3");
    sc_trace(mVcdFile, tmp_15_reg_447, "tmp_15_reg_447");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_bdd_141, "ap_sig_bdd_141");
    sc_trace(mVcdFile, tmp_16_fu_233_p3, "tmp_16_fu_233_p3");
    sc_trace(mVcdFile, tmp_16_reg_452, "tmp_16_reg_452");
    sc_trace(mVcdFile, m_1_fu_240_p3, "m_1_fu_240_p3");
    sc_trace(mVcdFile, m_1_reg_457, "m_1_reg_457");
    sc_trace(mVcdFile, acc1_fu_249_p2, "acc1_fu_249_p2");
    sc_trace(mVcdFile, acc1_reg_462, "acc1_reg_462");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_bdd_154, "ap_sig_bdd_154");
    sc_trace(mVcdFile, tmp_12_reg_467, "tmp_12_reg_467");
    sc_trace(mVcdFile, grp_fu_337_p3, "grp_fu_337_p3");
    sc_trace(mVcdFile, acc0_reg_472, "acc0_reg_472");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_bdd_167, "ap_sig_bdd_167");
    sc_trace(mVcdFile, tmp_11_reg_477, "tmp_11_reg_477");
    sc_trace(mVcdFile, d_assign_reg_122, "d_assign_reg_122");
    sc_trace(mVcdFile, tmp_s_fu_157_p1, "tmp_s_fu_157_p1");
    sc_trace(mVcdFile, tmp_8_fu_181_p1, "tmp_8_fu_181_p1");
    sc_trace(mVcdFile, tmp_10_fu_279_p1, "tmp_10_fu_279_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_bdd_186, "ap_sig_bdd_186");
    sc_trace(mVcdFile, inc_2_fu_325_p3, "inc_2_fu_325_p3");
    sc_trace(mVcdFile, tmp_19_fu_311_p3, "tmp_19_fu_311_p3");
    sc_trace(mVcdFile, or_cond5_fu_295_p2, "or_cond5_fu_295_p2");
    sc_trace(mVcdFile, tmp_7_fu_174_p3, "tmp_7_fu_174_p3");
    sc_trace(mVcdFile, p_shl_fu_203_p3, "p_shl_fu_203_p3");
    sc_trace(mVcdFile, tmp_i_cast_fu_199_p1, "tmp_i_cast_fu_199_p1");
    sc_trace(mVcdFile, or_cond_fu_221_p2, "or_cond_fu_221_p2");
    sc_trace(mVcdFile, tmp_26_i6_fu_246_p1, "tmp_26_i6_fu_246_p1");
    sc_trace(mVcdFile, tmp_9_fu_273_p3, "tmp_9_fu_273_p3");
    sc_trace(mVcdFile, tmp_17_fu_290_p2, "tmp_17_fu_290_p2");
    sc_trace(mVcdFile, tmp_18_fu_306_p2, "tmp_18_fu_306_p2");
    sc_trace(mVcdFile, grp_fu_337_p0, "grp_fu_337_p0");
    sc_trace(mVcdFile, grp_fu_337_p1, "grp_fu_337_p1");
    sc_trace(mVcdFile, grp_fu_337_p2, "grp_fu_337_p2");
    sc_trace(mVcdFile, grp_fu_337_ce, "grp_fu_337_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

duc_imf3::~duc_imf3() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete c_1_0_U;
    delete shift_reg_p0_U;
    delete c_1_1_U;
    delete shift_reg_p1_U;
    delete duc_mac_muladd_18s_18s_38ns_38_4_U4;
}

void duc_imf3::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        if (esl_seteq<1,1,1>(tmp_reg_353.read(), ap_const_lv1_0)) {
            d_assign_reg_122 = in_1.read();
        } else if (!esl_seteq<1,1,1>(tmp_reg_353.read(), ap_const_lv1_0)) {
            d_assign_reg_122 = x.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        acc0_reg_472 = grp_fu_337_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        acc1_reg_462 = acc1_fu_249_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        c_1_0_load_reg_395 = c_1_0_q0.read();
        c_1_1_load_reg_405 = c_1_1_q0.read();
        ch_4_reg_390 = j.read().range(3, 3);
        p_Val2_s_reg_384 = j.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        i_2 = inc_2_fu_325_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_2_load_reg_345 = i_2.read();
        tmp_reg_353 = tmp_fu_136_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_reg_353.read(), ap_const_lv1_0))) {
        in_1 = x.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        inc_reg_368 = inc_fu_152_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, or_cond5_fu_295_p2.read()))) {
        init_2 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) && !esl_seteq<1,1,1>(tmp_14_reg_415.read(), ap_const_lv1_0))) {
        j = tmp_19_fu_311_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        m_1_reg_457 = m_1_fu_240_p3.read();
        tmp_15_reg_447 = tmp_15_fu_226_p3.read();
        tmp_16_reg_452 = tmp_16_fu_233_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && !esl_seteq<1,1,1>(c_1_1_load_reg_405.read(), ap_const_lv1_0))) {
        mt_reg_442 = mt_fu_211_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        shift_reg_p0_load_reg_422 = shift_reg_p0_q0.read();
        shift_reg_p1_load_reg_437 = shift_reg_p1_q0.read();
        tmp_14_reg_415 = tmp_14_fu_187_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && !esl_seteq<1,1,1>(tmp_reg_353.read(), ap_const_lv1_0))) {
        tmp_11_reg_477 = grp_fu_337_p3.read().range(34, 17);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && esl_seteq<1,1,1>(tmp_reg_353.read(), ap_const_lv1_0))) {
        tmp_12_reg_467 = acc1_fu_249_p2.read().range(34, 17);
    }
}

void duc_imf3::thread_acc1_fu_249_p2() {
    acc1_fu_249_p2 = (!tmp_16_reg_452.read().is_01() || !tmp_26_i6_fu_246_p1.read().is_01())? sc_lv<38>(): (sc_biguint<38>(tmp_16_reg_452.read()) + sc_bigint<38>(tmp_26_i6_fu_246_p1.read()));
}

void duc_imf3::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void duc_imf3::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void duc_imf3::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void duc_imf3::thread_ap_return() {
    ap_return = (!tmp_reg_353.read()[0].is_01())? sc_lv<18>(): ((tmp_reg_353.read()[0].to_bool())? tmp_11_reg_477.read(): tmp_12_reg_467.read());
}

void duc_imf3::thread_ap_sig_bdd_103() {
    ap_sig_bdd_103 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void duc_imf3::thread_ap_sig_bdd_120() {
    ap_sig_bdd_120 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void duc_imf3::thread_ap_sig_bdd_141() {
    ap_sig_bdd_141 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void duc_imf3::thread_ap_sig_bdd_154() {
    ap_sig_bdd_154 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void duc_imf3::thread_ap_sig_bdd_167() {
    ap_sig_bdd_167 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void duc_imf3::thread_ap_sig_bdd_186() {
    ap_sig_bdd_186 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void duc_imf3::thread_ap_sig_bdd_26() {
    ap_sig_bdd_26 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void duc_imf3::thread_ap_sig_bdd_86() {
    ap_sig_bdd_86 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void duc_imf3::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_26.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void duc_imf3::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_86.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void duc_imf3::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_103.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void duc_imf3::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_120.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void duc_imf3::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_bdd_141.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void duc_imf3::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_bdd_154.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void duc_imf3::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_bdd_167.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void duc_imf3::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_bdd_186.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void duc_imf3::thread_c_1_0_address0() {
    c_1_0_address0 =  (sc_lv<3>) (tmp_s_fu_157_p1.read());
}

void duc_imf3::thread_c_1_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        c_1_0_ce0 = ap_const_logic_1;
    } else {
        c_1_0_ce0 = ap_const_logic_0;
    }
}

void duc_imf3::thread_c_1_1_address0() {
    c_1_1_address0 =  (sc_lv<3>) (tmp_s_fu_157_p1.read());
}

void duc_imf3::thread_c_1_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        c_1_1_ce0 = ap_const_logic_1;
    } else {
        c_1_1_ce0 = ap_const_logic_0;
    }
}

void duc_imf3::thread_ch_4_fu_166_p3() {
    ch_4_fu_166_p3 = j.read().range(3, 3);
}

void duc_imf3::thread_grp_fu_337_ce() {
    grp_fu_337_ce = ap_const_logic_1;
}

void duc_imf3::thread_grp_fu_337_p0() {
    grp_fu_337_p0 = d_assign_reg_122.read();
}

void duc_imf3::thread_grp_fu_337_p1() {
    grp_fu_337_p1 = c_1_0_load_reg_395.read();
}

void duc_imf3::thread_grp_fu_337_p2() {
    grp_fu_337_p2 = tmp_15_reg_447.read();
}

void duc_imf3::thread_inc_2_fu_325_p3() {
    inc_2_fu_325_p3 = (!tmp_14_reg_415.read()[0].is_01())? sc_lv<6>(): ((tmp_14_reg_415.read()[0].to_bool())? ap_const_lv6_0: inc_reg_368.read());
}

void duc_imf3::thread_inc_fu_152_p2() {
    inc_fu_152_p2 = (!i_2_load_reg_345.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_2_load_reg_345.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void duc_imf3::thread_m_1_fu_240_p3() {
    m_1_fu_240_p3 = (!c_1_1_load_reg_405.read()[0].is_01())? sc_lv<35>(): ((c_1_1_load_reg_405.read()[0].to_bool())? mt_reg_442.read(): ap_const_lv35_0);
}

void duc_imf3::thread_mt_fu_211_p2() {
    mt_fu_211_p2 = (!p_shl_fu_203_p3.read().is_01() || !tmp_i_cast_fu_199_p1.read().is_01())? sc_lv<35>(): (sc_biguint<35>(p_shl_fu_203_p3.read()) - sc_bigint<35>(tmp_i_cast_fu_199_p1.read()));
}

void duc_imf3::thread_or_cond5_fu_295_p2() {
    or_cond5_fu_295_p2 = (tmp_14_reg_415.read() & tmp_17_fu_290_p2.read());
}

void duc_imf3::thread_or_cond_fu_221_p2() {
    or_cond_fu_221_p2 = (init_2.read() | tmp_14_reg_415.read());
}

void duc_imf3::thread_p_shl_fu_203_p3() {
    p_shl_fu_203_p3 = esl_concat<18,17>(d_assign_reg_122.read(), ap_const_lv17_0);
}

void duc_imf3::thread_shift_reg_p0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        shift_reg_p0_address0 =  (sc_lv<4>) (tmp_10_fu_279_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        shift_reg_p0_address0 =  (sc_lv<4>) (tmp_8_fu_181_p1.read());
    } else {
        shift_reg_p0_address0 = "XXXX";
    }
}

void duc_imf3::thread_shift_reg_p0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        shift_reg_p0_ce0 = ap_const_logic_1;
    } else {
        shift_reg_p0_ce0 = ap_const_logic_0;
    }
}

void duc_imf3::thread_shift_reg_p0_d0() {
    shift_reg_p0_d0 = acc0_reg_472.read();
}

void duc_imf3::thread_shift_reg_p0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        shift_reg_p0_we0 = ap_const_logic_1;
    } else {
        shift_reg_p0_we0 = ap_const_logic_0;
    }
}

void duc_imf3::thread_shift_reg_p1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        shift_reg_p1_address0 =  (sc_lv<4>) (tmp_10_fu_279_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        shift_reg_p1_address0 =  (sc_lv<4>) (tmp_8_fu_181_p1.read());
    } else {
        shift_reg_p1_address0 = "XXXX";
    }
}

void duc_imf3::thread_shift_reg_p1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        shift_reg_p1_ce0 = ap_const_logic_1;
    } else {
        shift_reg_p1_ce0 = ap_const_logic_0;
    }
}

void duc_imf3::thread_shift_reg_p1_d0() {
    shift_reg_p1_d0 = acc1_reg_462.read();
}

void duc_imf3::thread_shift_reg_p1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()))) {
        shift_reg_p1_we0 = ap_const_logic_1;
    } else {
        shift_reg_p1_we0 = ap_const_logic_0;
    }
}

void duc_imf3::thread_tmp_10_fu_279_p1() {
    tmp_10_fu_279_p1 = esl_zext<64,7>(tmp_9_fu_273_p3.read());
}

void duc_imf3::thread_tmp_14_fu_187_p2() {
    tmp_14_fu_187_p2 = (!i_2_load_reg_345.read().is_01() || !ap_const_lv6_5.is_01())? sc_lv<1>(): sc_lv<1>(i_2_load_reg_345.read() == ap_const_lv6_5);
}

void duc_imf3::thread_tmp_15_fu_226_p3() {
    tmp_15_fu_226_p3 = (!or_cond_fu_221_p2.read()[0].is_01())? sc_lv<38>(): ((or_cond_fu_221_p2.read()[0].to_bool())? ap_const_lv38_0: shift_reg_p0_load_reg_422.read());
}

void duc_imf3::thread_tmp_16_fu_233_p3() {
    tmp_16_fu_233_p3 = (!or_cond_fu_221_p2.read()[0].is_01())? sc_lv<38>(): ((or_cond_fu_221_p2.read()[0].to_bool())? ap_const_lv38_0: shift_reg_p1_load_reg_437.read());
}

void duc_imf3::thread_tmp_17_fu_290_p2() {
    tmp_17_fu_290_p2 = (!p_Val2_s_reg_384.read().is_01() || !ap_const_lv6_F.is_01())? sc_lv<1>(): sc_lv<1>(p_Val2_s_reg_384.read() == ap_const_lv6_F);
}

void duc_imf3::thread_tmp_18_fu_306_p2() {
    tmp_18_fu_306_p2 = (!p_Val2_s_reg_384.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(p_Val2_s_reg_384.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void duc_imf3::thread_tmp_19_fu_311_p3() {
    tmp_19_fu_311_p3 = (!tmp_17_fu_290_p2.read()[0].is_01())? sc_lv<6>(): ((tmp_17_fu_290_p2.read()[0].to_bool())? ap_const_lv6_0: tmp_18_fu_306_p2.read());
}

void duc_imf3::thread_tmp_26_i6_fu_246_p1() {
    tmp_26_i6_fu_246_p1 = esl_sext<38,35>(m_1_reg_457.read());
}

void duc_imf3::thread_tmp_7_fu_174_p3() {
    tmp_7_fu_174_p3 = esl_concat<6,1>(inc_reg_368.read(), ch_4_fu_166_p3.read());
}

void duc_imf3::thread_tmp_8_fu_181_p1() {
    tmp_8_fu_181_p1 = esl_zext<64,7>(tmp_7_fu_174_p3.read());
}

void duc_imf3::thread_tmp_9_fu_273_p3() {
    tmp_9_fu_273_p3 = esl_concat<6,1>(i_2_load_reg_345.read(), ch_4_reg_390.read());
}

void duc_imf3::thread_tmp_fu_136_p2() {
    tmp_fu_136_p2 = (!i_2.read().is_01() || !ap_const_lv6_0.is_01())? sc_lv<1>(): sc_lv<1>(i_2.read() == ap_const_lv6_0);
}

void duc_imf3::thread_tmp_i_cast_fu_199_p1() {
    tmp_i_cast_fu_199_p1 = esl_sext<35,18>(d_assign_reg_122.read());
}

void duc_imf3::thread_tmp_s_fu_157_p1() {
    tmp_s_fu_157_p1 = esl_zext<64,6>(i_2_load_reg_345.read());
}

void duc_imf3::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

