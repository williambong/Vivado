

================================================================
== Vivado HLS Report for 'duc_mixer'
================================================================
* Date:           Mon Aug 10 08:45:15 2015

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        duc_prj
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   2.71|      2.71|        0.34|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    9|    1|    9|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+--------+
|       Name      | BRAM_18K| DSP48E|   FF   |   LUT  |
+-----------------+---------+-------+--------+--------+
|Expression       |        -|      -|       -|       -|
|FIFO             |        -|      -|       -|       -|
|Instance         |        -|      -|       -|       -|
|Memory           |        -|      -|       -|       -|
|Multiplexer      |        -|      -|       -|       -|
|Register         |        -|      -|       -|       -|
+-----------------+---------+-------+--------+--------+
|Total            |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+
|Available        |      650|    600|  202800|  101400|
+-----------------+---------+-------+--------+--------+
|Utilization (%)  |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 10
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / (!brmerge_demorgan & valid_in)
	10  / (brmerge_demorgan) | (!valid_in)
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: Din_read [1/1] 0.00ns
:0  %Din_read = call i18 @_ssdm_op_Read.ap_auto.i18(i18 %Din) nounwind

ST_1: freq_read [1/1] 0.00ns
:1  %freq_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %freq) nounwind

ST_1: i_4_load [1/1] 0.00ns
:2  %i_4_load = load i3* @i_4, align 1

ST_1: inc [1/1] 0.48ns
:3  %inc = add i3 %i_4_load, 1

ST_1: tmp_15 [1/1] 0.00ns
:4  %tmp_15 = call i2 @_ssdm_op_PartSelect.i2.i3.i32.i32(i3 %i_4_load, i32 1, i32 2)

ST_1: valid_in [1/1] 0.85ns
:5  %valid_in = icmp eq i2 %tmp_15, 0

ST_1: init_4_load [1/1] 0.00ns
:6  %init_4_load = load i1* @init_4, align 1

ST_1: freq_dds [1/1] 0.84ns
:7  %freq_dds = select i1 %init_4_load, i16 0, i16 %freq_read

ST_1: ch_3_load [1/1] 0.00ns
:8  %ch_3_load = load i1* @ch_3, align 1

ST_1: brmerge_demorgan [1/1] 0.84ns
:9  %brmerge_demorgan = and i1 %ch_3_load, %valid_in

ST_1: index_load [1/1] 0.00ns
:10  %index_load = load i4* @index, align 1

ST_1: stg_22 [1/1] 0.00ns
:11  br i1 %brmerge_demorgan, label %1, label %2

ST_1: stg_23 [1/1] 0.00ns
:0  br i1 %valid_in, label %3, label %._crit_edge

ST_1: acc_load [1/1] 0.00ns
:0  %acc_load = load i16* @acc, align 2

ST_1: acc_assign_i [1/1] 1.46ns
:1  %acc_assign_i = add i16 %acc_load, %freq_dds

ST_1: stg_26 [1/1] 0.00ns
:2  store i16 %acc_assign_i, i16* @acc, align 2

ST_1: phase1 [1/1] 0.00ns
:3  %phase1 = call i5 @_ssdm_op_PartSelect.i5.i16.i32.i32(i16 %acc_assign_i, i32 11, i32 15)

ST_1: tmp [1/1] 0.00ns
:0  %tmp = zext i4 %index_load to i64

ST_1: DI_cache_addr [1/1] 0.00ns
:1  %DI_cache_addr = getelementptr inbounds [16 x i18]* @DI_cache, i64 0, i64 %tmp

ST_1: stg_30 [1/1] 2.39ns
:2  store i18 %Din_read, i18* %DI_cache_addr, align 4

ST_1: stg_31 [1/1] 0.00ns
:3  br label %5


 <State 2>: 1.34ns
ST_2: phase2 [1/1] 1.34ns
:7  %phase2 = sub i5 8, %phase1


 <State 3>: 2.39ns
ST_3: tmp_i [1/1] 0.00ns
:4  %tmp_i = zext i5 %phase1 to i64

ST_3: dds_table_addr [1/1] 0.00ns
:5  %dds_table_addr = getelementptr inbounds [32 x i16]* @dds_table, i64 0, i64 %tmp_i

ST_3: sine [2/2] 2.39ns
:6  %sine = load i16* %dds_table_addr, align 2

ST_3: tmp_53_i [1/1] 0.00ns
:8  %tmp_53_i = zext i5 %phase2 to i64

ST_3: dds_table_addr_1 [1/1] 0.00ns
:9  %dds_table_addr_1 = getelementptr inbounds [32 x i16]* @dds_table, i64 0, i64 %tmp_53_i

ST_3: cosine [2/2] 2.39ns
:10  %cosine = load i16* %dds_table_addr_1, align 2


 <State 4>: 2.39ns
ST_4: sine [1/2] 2.39ns
:6  %sine = load i16* %dds_table_addr, align 2

ST_4: cosine [1/2] 2.39ns
:10  %cosine = load i16* %dds_table_addr_1, align 2


 <State 5>: 2.71ns
ST_5: tmp_s [1/1] 0.00ns
:11  %tmp_s = zext i4 %index_load to i64

ST_5: DI_cache_addr_1 [1/1] 0.00ns
:12  %DI_cache_addr_1 = getelementptr inbounds [16 x i18]* @DI_cache, i64 0, i64 %tmp_s

ST_5: Din_re [2/2] 2.39ns
:13  %Din_re = load i18* %DI_cache_addr_1, align 4

ST_5: tmp_i3_cast [1/1] 0.00ns
:14  %tmp_i3_cast = sext i16 %sine to i17

ST_5: tmp_i4_cast [1/1] 0.00ns
:15  %tmp_i4_cast = sext i16 %cosine to i17

ST_5: tmp_8 [1/1] 1.62ns
:16  %tmp_8 = sub i17 %tmp_i3_cast, %tmp_i4_cast

ST_5: tmp_i_i [1/1] 0.00ns
:17  %tmp_i_i = sext i18 %Din_read to i32

ST_5: tmp_i_i_15 [1/1] 0.00ns
:18  %tmp_i_i_15 = sext i17 %tmp_8 to i32

ST_5: tmp_2 [4/4] 1.09ns
:19  %tmp_2 = mul i32 %tmp_i_i_15, %tmp_i_i


 <State 6>: 2.39ns
ST_6: Din_re [1/2] 2.39ns
:13  %Din_re = load i18* %DI_cache_addr_1, align 4

ST_6: tmp_2 [3/4] 1.09ns
:19  %tmp_2 = mul i32 %tmp_i_i_15, %tmp_i_i


 <State 7>: 2.71ns
ST_7: tmp_2 [2/4] 1.09ns
:19  %tmp_2 = mul i32 %tmp_i_i_15, %tmp_i_i

ST_7: tmp_i5 [1/1] 0.00ns
:20  %tmp_i5 = sext i18 %Din_re to i19

ST_7: tmp_i6 [1/1] 0.00ns
:21  %tmp_i6 = sext i18 %Din_read to i19

ST_7: tmp_9 [1/1] 1.62ns
:22  %tmp_9 = sub i19 %tmp_i5, %tmp_i6

ST_7: tmp_i_i8_cast [1/1] 0.00ns
:23  %tmp_i_i8_cast = sext i16 %sine to i32

ST_7: tmp_i_i9_cast [1/1] 0.00ns
:24  %tmp_i_i9_cast = sext i19 %tmp_9 to i32

ST_7: m [3/3] 1.09ns
:25  %m = mul i32 %tmp_i_i9_cast, %tmp_i_i8_cast

ST_7: tmp_5 [1/1] 1.62ns
:29  %tmp_5 = add i19 %tmp_i6, %tmp_i5

ST_7: tmp_i_i1_cast [1/1] 0.00ns
:30  %tmp_i_i1_cast = sext i16 %cosine to i32

ST_7: tmp_i_i1_cast_16 [1/1] 0.00ns
:31  %tmp_i_i1_cast_16 = sext i19 %tmp_5 to i32

ST_7: m_i_i [3/3] 1.09ns
:32  %m_i_i = mul i32 %tmp_i_i1_cast_16, %tmp_i_i1_cast


 <State 8>: 1.09ns
ST_8: tmp_2 [1/4] 0.00ns
:19  %tmp_2 = mul i32 %tmp_i_i_15, %tmp_i_i

ST_8: m [2/3] 1.09ns
:25  %m = mul i32 %tmp_i_i9_cast, %tmp_i_i8_cast

ST_8: m_i_i [2/3] 1.09ns
:32  %m_i_i = mul i32 %tmp_i_i1_cast_16, %tmp_i_i1_cast


 <State 9>: 2.71ns
ST_9: m [1/3] 0.00ns
:25  %m = mul i32 %tmp_i_i9_cast, %tmp_i_i8_cast

ST_9: tmp_3 [1/1] 2.71ns
:26  %tmp_3 = add i32 %m, %tmp_2

ST_9: m_i_i [1/3] 0.00ns
:32  %m_i_i = mul i32 %tmp_i_i1_cast_16, %tmp_i_i1_cast

ST_9: tmp_6 [1/1] 2.71ns
:33  %tmp_6 = add i32 %m_i_i, %tmp_2


 <State 10>: 1.88ns
ST_10: tmp_4 [1/1] 0.00ns
:27  %tmp_4 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_3, i32 14, i32 31)

ST_10: stg_71 [1/1] 0.00ns
:28  call void @_ssdm_op_Write.ap_auto.i18P(i18* %Dout_I, i18 %tmp_4) nounwind

ST_10: tmp_7 [1/1] 0.00ns
:34  %tmp_7 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %tmp_6, i32 14, i32 31)

ST_10: stg_73 [1/1] 0.00ns
:35  call void @_ssdm_op_Write.ap_auto.i18P(i18* %Dout_Q, i18 %tmp_7) nounwind

ST_10: tmp_10 [1/1] 1.24ns
:36  %tmp_10 = icmp eq i4 %index_load, -1

ST_10: stg_75 [1/1] 0.00ns
:37  br i1 %tmp_10, label %4, label %._crit_edge2

ST_10: stg_76 [1/1] 0.00ns
:0  store i1 false, i1* @init_4, align 1

ST_10: stg_77 [1/1] 0.00ns
:1  br label %._crit_edge2

ST_10: stg_78 [1/1] 0.00ns
._crit_edge2:0  br label %._crit_edge

ST_10: stg_79 [1/1] 0.00ns
._crit_edge:0  br label %5

ST_10: tmp_11 [1/1] 1.24ns
:0  %tmp_11 = icmp eq i4 %index_load, -1

ST_10: stg_81 [1/1] 0.00ns
:1  br i1 %tmp_11, label %6, label %._crit_edge3

ST_10: tmp_12 [1/1] 0.84ns
:0  %tmp_12 = xor i1 %ch_3_load, true

ST_10: stg_83 [1/1] 0.00ns
:1  store i1 %tmp_12, i1* @ch_3, align 1

ST_10: stg_84 [1/1] 0.00ns
:2  br label %._crit_edge3

ST_10: stg_85 [1/1] 0.00ns
._crit_edge3:0  br i1 %valid_in, label %7, label %._crit_edge4

ST_10: tmp_13 [1/1] 0.48ns
:0  %tmp_13 = add i4 %index_load, 1

ST_10: stg_87 [1/1] 0.00ns
:1  store i4 %tmp_13, i4* @index, align 1

ST_10: stg_88 [1/1] 0.00ns
:2  br label %._crit_edge4

ST_10: tmp_14 [1/1] 1.04ns
._crit_edge4:0  %tmp_14 = icmp eq i3 %i_4_load, -3

ST_10: inc_5 [1/1] 0.84ns
._crit_edge4:1  %inc_5 = select i1 %tmp_14, i3 0, i3 %inc

ST_10: stg_91 [1/1] 0.00ns
._crit_edge4:2  store i3 %inc_5, i3* @i_4, align 1

ST_10: stg_92 [1/1] 0.00ns
._crit_edge4:3  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
