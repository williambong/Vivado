// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "matrixmul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrixmul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrixmul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> matrixmul::ap_ST_st1_fsm_0 = "1";
const sc_lv<3> matrixmul::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<3> matrixmul::ap_ST_st6_fsm_2 = "100";
const sc_lv<32> matrixmul::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> matrixmul::ap_const_lv1_1 = "1";
const sc_lv<32> matrixmul::ap_const_lv32_1 = "1";
const sc_lv<1> matrixmul::ap_const_lv1_0 = "0";
const sc_lv<4> matrixmul::ap_const_lv4_0 = "0000";
const sc_lv<2> matrixmul::ap_const_lv2_0 = "00";
const sc_lv<4> matrixmul::ap_const_lv4_9 = "1001";
const sc_lv<4> matrixmul::ap_const_lv4_1 = "1";
const sc_lv<2> matrixmul::ap_const_lv2_3 = "11";
const sc_lv<2> matrixmul::ap_const_lv2_1 = "1";
const sc_lv<32> matrixmul::ap_const_lv32_8 = "1000";
const sc_lv<32> matrixmul::ap_const_lv32_F = "1111";
const sc_lv<32> matrixmul::ap_const_lv32_10 = "10000";
const sc_lv<32> matrixmul::ap_const_lv32_17 = "10111";
const sc_lv<32> matrixmul::ap_const_lv32_2 = "10";

matrixmul::matrixmul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    matrixmul_mux_3to1_sel2_8_1_U0 = new matrixmul_mux_3to1_sel2_8_1<1,1,8,8,8,2,8>("matrixmul_mux_3to1_sel2_8_1_U0");
    matrixmul_mux_3to1_sel2_8_1_U0->din1(tmp_1_fu_507_p1);
    matrixmul_mux_3to1_sel2_8_1_U0->din2(tmp_1_fu_507_p2);
    matrixmul_mux_3to1_sel2_8_1_U0->din3(tmp_1_fu_507_p3);
    matrixmul_mux_3to1_sel2_8_1_U0->din4(tmp_1_fu_507_p4);
    matrixmul_mux_3to1_sel2_8_1_U0->dout(tmp_1_fu_507_p5);
    matrixmul_mux_3to1_sel2_8_1_U1 = new matrixmul_mux_3to1_sel2_8_1<1,1,8,8,8,2,8>("matrixmul_mux_3to1_sel2_8_1_U1");
    matrixmul_mux_3to1_sel2_8_1_U1->din1(tmp_7_fu_522_p1);
    matrixmul_mux_3to1_sel2_8_1_U1->din2(tmp_7_fu_522_p2);
    matrixmul_mux_3to1_sel2_8_1_U1->din3(tmp_7_fu_522_p3);
    matrixmul_mux_3to1_sel2_8_1_U1->din4(tmp_7_fu_522_p4);
    matrixmul_mux_3to1_sel2_8_1_U1->dout(tmp_7_fu_522_p5);
    matrixmul_mux_3to1_sel2_8_1_U2 = new matrixmul_mux_3to1_sel2_8_1<1,1,8,8,8,2,8>("matrixmul_mux_3to1_sel2_8_1_U2");
    matrixmul_mux_3to1_sel2_8_1_U2->din1(tmp_8_fu_547_p1);
    matrixmul_mux_3to1_sel2_8_1_U2->din2(tmp_8_fu_547_p2);
    matrixmul_mux_3to1_sel2_8_1_U2->din3(tmp_8_fu_547_p3);
    matrixmul_mux_3to1_sel2_8_1_U2->din4(tmp_8_fu_547_p4);
    matrixmul_mux_3to1_sel2_8_1_U2->dout(tmp_8_fu_547_p5);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U3 = new matrixmul_mac_muladd_8s_8s_16s_16_1<1,1,8,8,16,16>("matrixmul_mac_muladd_8s_8s_16s_16_1_U3");
    matrixmul_mac_muladd_8s_8s_16s_16_1_U3->din0(grp_fu_572_p0);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U3->din1(grp_fu_572_p1);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U3->din2(grp_fu_572_p2);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U3->dout(grp_fu_572_p3);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U4 = new matrixmul_mac_muladd_8s_8s_16s_16_1<1,1,8,8,16,16>("matrixmul_mac_muladd_8s_8s_16s_16_1_U4");
    matrixmul_mac_muladd_8s_8s_16s_16_1_U4->din0(grp_fu_580_p0);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U4->din1(grp_fu_580_p1);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U4->din2(grp_fu_580_p2);
    matrixmul_mac_muladd_8s_8s_16s_16_1_U4->dout(grp_fu_580_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_read);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( ap_sig_bdd_67 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_77 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_a_row_0_1_fu_224_p1);
    sensitive << ( a_dout );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_2 );

    SC_METHOD(thread_ap_sig_bdd_19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_412);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_67);
    sensitive << ( a_empty_n );
    sensitive << ( b_empty_n );
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( tmp_reg_691 );

    SC_METHOD(thread_ap_sig_bdd_77);
    sensitive << ( res_full_n );
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_bdd_51 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_19 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_2);
    sensitive << ( ap_sig_bdd_412 );

    SC_METHOD(thread_b_copy_0_2_2_fu_302_p3);
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( b_copy_0_2_1_fu_86 );
    sensitive << ( b_copy_0_2_fu_294_p3 );

    SC_METHOD(thread_b_copy_0_2_4_fu_309_p3);
    sensitive << ( b_copy_0_2_6_fu_82 );
    sensitive << ( sel_tmp_fu_289_p2 );
    sensitive << ( b_copy_0_2_9_fu_285_p1 );

    SC_METHOD(thread_b_copy_0_2_5_fu_317_p3);
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( b_copy_0_2_6_fu_82 );
    sensitive << ( b_copy_0_2_4_fu_309_p3 );

    SC_METHOD(thread_b_copy_0_2_7_fu_324_p3);
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( b_copy_0_2_3_fu_78 );
    sensitive << ( b_copy_0_2_9_fu_285_p1 );

    SC_METHOD(thread_b_copy_0_2_9_fu_285_p1);
    sensitive << ( b_dout );

    SC_METHOD(thread_b_copy_0_2_fu_294_p3);
    sensitive << ( b_copy_0_2_1_fu_86 );
    sensitive << ( sel_tmp_fu_289_p2 );
    sensitive << ( b_copy_0_2_9_fu_285_p1 );

    SC_METHOD(thread_b_copy_1_2_2_fu_349_p3);
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( b_copy_1_2_1_fu_98 );
    sensitive << ( b_copy_1_2_fu_341_p3 );

    SC_METHOD(thread_b_copy_1_2_4_fu_356_p3);
    sensitive << ( b_copy_1_2_6_fu_94 );
    sensitive << ( sel_tmp_fu_289_p2 );
    sensitive << ( b_copy_1_2_9_fu_331_p4 );

    SC_METHOD(thread_b_copy_1_2_5_fu_364_p3);
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( b_copy_1_2_6_fu_94 );
    sensitive << ( b_copy_1_2_4_fu_356_p3 );

    SC_METHOD(thread_b_copy_1_2_7_fu_371_p3);
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( b_copy_1_2_3_fu_90 );
    sensitive << ( b_copy_1_2_9_fu_331_p4 );

    SC_METHOD(thread_b_copy_1_2_9_fu_331_p4);
    sensitive << ( b_dout );

    SC_METHOD(thread_b_copy_1_2_fu_341_p3);
    sensitive << ( b_copy_1_2_1_fu_98 );
    sensitive << ( sel_tmp_fu_289_p2 );
    sensitive << ( b_copy_1_2_9_fu_331_p4 );

    SC_METHOD(thread_b_copy_2_2_2_fu_396_p3);
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( b_copy_2_2_1_fu_110 );
    sensitive << ( b_copy_2_2_fu_388_p3 );

    SC_METHOD(thread_b_copy_2_2_4_fu_403_p3);
    sensitive << ( b_copy_2_2_6_fu_106 );
    sensitive << ( sel_tmp_fu_289_p2 );
    sensitive << ( b_copy_2_2_9_fu_378_p4 );

    SC_METHOD(thread_b_copy_2_2_5_fu_411_p3);
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( b_copy_2_2_6_fu_106 );
    sensitive << ( b_copy_2_2_4_fu_403_p3 );

    SC_METHOD(thread_b_copy_2_2_7_fu_418_p3);
    sensitive << ( tmp_3_reg_695 );
    sensitive << ( b_copy_2_2_3_fu_102 );
    sensitive << ( b_copy_2_2_9_fu_378_p4 );

    SC_METHOD(thread_b_copy_2_2_9_fu_378_p4);
    sensitive << ( b_dout );

    SC_METHOD(thread_b_copy_2_2_fu_388_p3);
    sensitive << ( b_copy_2_2_1_fu_110 );
    sensitive << ( sel_tmp_fu_289_p2 );
    sensitive << ( b_copy_2_2_9_fu_378_p4 );

    SC_METHOD(thread_b_read);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( tmp_reg_691 );
    sensitive << ( ap_sig_bdd_67 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_77 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_exitcond_flatten_fu_166_p2);
    sensitive << ( indvar_flatten_reg_133 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_67 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_77 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_exitcond_fu_178_p2);
    sensitive << ( j_reg_155 );
    sensitive << ( exitcond_flatten_fu_166_p2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_67 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_77 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_grp_fu_572_p0);
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( a_row_0_fu_66 );

    SC_METHOD(thread_grp_fu_572_p1);
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( tmp_1_reg_718 );

    SC_METHOD(thread_grp_fu_572_p2);
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( tmp9_reg_723 );

    SC_METHOD(thread_grp_fu_580_p0);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it1 );
    sensitive << ( a_row_2_1_fu_74 );

    SC_METHOD(thread_grp_fu_580_p1);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it1 );
    sensitive << ( tmp_8_fu_547_p5 );

    SC_METHOD(thread_grp_fu_580_p2);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it1 );
    sensitive << ( tmp_10_1_fu_537_p0 );
    sensitive << ( tmp_10_1_fu_537_p1 );

    SC_METHOD(thread_i_mid2_fu_198_p3);
    sensitive << ( i_phi_fu_148_p4 );
    sensitive << ( exitcond_fu_178_p2 );
    sensitive << ( i_s_fu_192_p2 );

    SC_METHOD(thread_i_phi_fu_148_p4);
    sensitive << ( i_reg_144 );
    sensitive << ( exitcond_flatten_reg_669 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( i_mid2_reg_686 );

    SC_METHOD(thread_i_s_fu_192_p2);
    sensitive << ( i_phi_fu_148_p4 );

    SC_METHOD(thread_indvar_flatten_next_fu_172_p2);
    sensitive << ( indvar_flatten_reg_133 );

    SC_METHOD(thread_j_1_fu_218_p2);
    sensitive << ( j_mid2_fu_184_p3 );

    SC_METHOD(thread_j_mid2_fu_184_p3);
    sensitive << ( j_reg_155 );
    sensitive << ( exitcond_fu_178_p2 );

    SC_METHOD(thread_res_din);
    sensitive << ( ap_sig_bdd_67 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2 );
    sensitive << ( ap_sig_bdd_77 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( grp_fu_572_p3 );

    SC_METHOD(thread_res_write);
    sensitive << ( ap_sig_bdd_67 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2 );
    sensitive << ( ap_sig_bdd_77 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_METHOD(thread_sel_tmp_fu_289_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( tmp_reg_691 );
    sensitive << ( ap_sig_bdd_67 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_77 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( j_mid2_reg_678 );

    SC_METHOD(thread_tmp_10_1_fu_537_p0);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( a_row_1_1_fu_70 );

    SC_METHOD(thread_tmp_10_1_fu_537_p1);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( tmp_7_fu_522_p5 );

    SC_METHOD(thread_tmp_1_fu_507_p1);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( b_copy_0_2_3_fu_78 );

    SC_METHOD(thread_tmp_1_fu_507_p2);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( b_copy_0_2_6_fu_82 );

    SC_METHOD(thread_tmp_1_fu_507_p3);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( b_copy_0_2_1_fu_86 );

    SC_METHOD(thread_tmp_1_fu_507_p4);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_j_mid2_reg_678_pp0_it1 );

    SC_METHOD(thread_tmp_3_fu_212_p2);
    sensitive << ( exitcond_flatten_fu_166_p2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_67 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_77 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( j_mid2_fu_184_p3 );

    SC_METHOD(thread_tmp_7_fu_522_p1);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( b_copy_1_2_3_fu_90 );

    SC_METHOD(thread_tmp_7_fu_522_p2);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( b_copy_1_2_6_fu_94 );

    SC_METHOD(thread_tmp_7_fu_522_p3);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( b_copy_1_2_1_fu_98 );

    SC_METHOD(thread_tmp_7_fu_522_p4);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_j_mid2_reg_678_pp0_it1 );

    SC_METHOD(thread_tmp_8_fu_547_p1);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( b_copy_2_2_3_fu_102 );

    SC_METHOD(thread_tmp_8_fu_547_p2);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( b_copy_2_2_6_fu_106 );

    SC_METHOD(thread_tmp_8_fu_547_p3);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( b_copy_2_2_1_fu_110 );

    SC_METHOD(thread_tmp_8_fu_547_p4);
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_reg_ppstg_j_mid2_reg_678_pp0_it1 );

    SC_METHOD(thread_tmp_fu_206_p2);
    sensitive << ( exitcond_flatten_fu_166_p2 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_67 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_bdd_77 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );
    sensitive << ( i_mid2_fu_198_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_flatten_fu_166_p2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_bdd_67 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it2 );
    sensitive << ( ap_sig_bdd_77 );
    sensitive << ( ap_reg_ppiten_pp0_it3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it2 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it3 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrixmul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_dout, "(port)a_dout");
    sc_trace(mVcdFile, a_empty_n, "(port)a_empty_n");
    sc_trace(mVcdFile, a_read, "(port)a_read");
    sc_trace(mVcdFile, b_dout, "(port)b_dout");
    sc_trace(mVcdFile, b_empty_n, "(port)b_empty_n");
    sc_trace(mVcdFile, b_read, "(port)b_read");
    sc_trace(mVcdFile, res_din, "(port)res_din");
    sc_trace(mVcdFile, res_full_n, "(port)res_full_n");
    sc_trace(mVcdFile, res_write, "(port)res_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_19, "ap_sig_bdd_19");
    sc_trace(mVcdFile, indvar_flatten_reg_133, "indvar_flatten_reg_133");
    sc_trace(mVcdFile, i_reg_144, "i_reg_144");
    sc_trace(mVcdFile, j_reg_155, "j_reg_155");
    sc_trace(mVcdFile, exitcond_flatten_fu_166_p2, "exitcond_flatten_fu_166_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_669, "exitcond_flatten_reg_669");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_51, "ap_sig_bdd_51");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, tmp_3_reg_695, "tmp_3_reg_695");
    sc_trace(mVcdFile, tmp_reg_691, "tmp_reg_691");
    sc_trace(mVcdFile, ap_sig_bdd_67, "ap_sig_bdd_67");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it2, "ap_reg_ppiten_pp0_it2");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2, "ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2");
    sc_trace(mVcdFile, ap_sig_bdd_77, "ap_sig_bdd_77");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it3, "ap_reg_ppiten_pp0_it3");
    sc_trace(mVcdFile, ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it1, "ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it1");
    sc_trace(mVcdFile, indvar_flatten_next_fu_172_p2, "indvar_flatten_next_fu_172_p2");
    sc_trace(mVcdFile, j_mid2_fu_184_p3, "j_mid2_fu_184_p3");
    sc_trace(mVcdFile, j_mid2_reg_678, "j_mid2_reg_678");
    sc_trace(mVcdFile, ap_reg_ppstg_j_mid2_reg_678_pp0_it1, "ap_reg_ppstg_j_mid2_reg_678_pp0_it1");
    sc_trace(mVcdFile, i_mid2_fu_198_p3, "i_mid2_fu_198_p3");
    sc_trace(mVcdFile, i_mid2_reg_686, "i_mid2_reg_686");
    sc_trace(mVcdFile, tmp_fu_206_p2, "tmp_fu_206_p2");
    sc_trace(mVcdFile, tmp_3_fu_212_p2, "tmp_3_fu_212_p2");
    sc_trace(mVcdFile, ap_reg_ppstg_tmp_3_reg_695_pp0_it1, "ap_reg_ppstg_tmp_3_reg_695_pp0_it1");
    sc_trace(mVcdFile, j_1_fu_218_p2, "j_1_fu_218_p2");
    sc_trace(mVcdFile, a_row_0_1_fu_224_p1, "a_row_0_1_fu_224_p1");
    sc_trace(mVcdFile, a_row_0_1_reg_713, "a_row_0_1_reg_713");
    sc_trace(mVcdFile, tmp_1_fu_507_p5, "tmp_1_fu_507_p5");
    sc_trace(mVcdFile, tmp_1_reg_718, "tmp_1_reg_718");
    sc_trace(mVcdFile, grp_fu_580_p3, "grp_fu_580_p3");
    sc_trace(mVcdFile, tmp9_reg_723, "tmp9_reg_723");
    sc_trace(mVcdFile, i_phi_fu_148_p4, "i_phi_fu_148_p4");
    sc_trace(mVcdFile, grp_fu_572_p3, "grp_fu_572_p3");
    sc_trace(mVcdFile, a_row_0_fu_66, "a_row_0_fu_66");
    sc_trace(mVcdFile, a_row_1_1_fu_70, "a_row_1_1_fu_70");
    sc_trace(mVcdFile, a_row_2_1_fu_74, "a_row_2_1_fu_74");
    sc_trace(mVcdFile, b_copy_0_2_3_fu_78, "b_copy_0_2_3_fu_78");
    sc_trace(mVcdFile, b_copy_0_2_7_fu_324_p3, "b_copy_0_2_7_fu_324_p3");
    sc_trace(mVcdFile, b_copy_0_2_6_fu_82, "b_copy_0_2_6_fu_82");
    sc_trace(mVcdFile, b_copy_0_2_5_fu_317_p3, "b_copy_0_2_5_fu_317_p3");
    sc_trace(mVcdFile, b_copy_0_2_1_fu_86, "b_copy_0_2_1_fu_86");
    sc_trace(mVcdFile, b_copy_0_2_2_fu_302_p3, "b_copy_0_2_2_fu_302_p3");
    sc_trace(mVcdFile, b_copy_1_2_3_fu_90, "b_copy_1_2_3_fu_90");
    sc_trace(mVcdFile, b_copy_1_2_7_fu_371_p3, "b_copy_1_2_7_fu_371_p3");
    sc_trace(mVcdFile, b_copy_1_2_6_fu_94, "b_copy_1_2_6_fu_94");
    sc_trace(mVcdFile, b_copy_1_2_5_fu_364_p3, "b_copy_1_2_5_fu_364_p3");
    sc_trace(mVcdFile, b_copy_1_2_1_fu_98, "b_copy_1_2_1_fu_98");
    sc_trace(mVcdFile, b_copy_1_2_2_fu_349_p3, "b_copy_1_2_2_fu_349_p3");
    sc_trace(mVcdFile, b_copy_2_2_3_fu_102, "b_copy_2_2_3_fu_102");
    sc_trace(mVcdFile, b_copy_2_2_7_fu_418_p3, "b_copy_2_2_7_fu_418_p3");
    sc_trace(mVcdFile, b_copy_2_2_6_fu_106, "b_copy_2_2_6_fu_106");
    sc_trace(mVcdFile, b_copy_2_2_5_fu_411_p3, "b_copy_2_2_5_fu_411_p3");
    sc_trace(mVcdFile, b_copy_2_2_1_fu_110, "b_copy_2_2_1_fu_110");
    sc_trace(mVcdFile, b_copy_2_2_2_fu_396_p3, "b_copy_2_2_2_fu_396_p3");
    sc_trace(mVcdFile, exitcond_fu_178_p2, "exitcond_fu_178_p2");
    sc_trace(mVcdFile, i_s_fu_192_p2, "i_s_fu_192_p2");
    sc_trace(mVcdFile, sel_tmp_fu_289_p2, "sel_tmp_fu_289_p2");
    sc_trace(mVcdFile, b_copy_0_2_9_fu_285_p1, "b_copy_0_2_9_fu_285_p1");
    sc_trace(mVcdFile, b_copy_0_2_fu_294_p3, "b_copy_0_2_fu_294_p3");
    sc_trace(mVcdFile, b_copy_0_2_4_fu_309_p3, "b_copy_0_2_4_fu_309_p3");
    sc_trace(mVcdFile, b_copy_1_2_9_fu_331_p4, "b_copy_1_2_9_fu_331_p4");
    sc_trace(mVcdFile, b_copy_1_2_fu_341_p3, "b_copy_1_2_fu_341_p3");
    sc_trace(mVcdFile, b_copy_1_2_4_fu_356_p3, "b_copy_1_2_4_fu_356_p3");
    sc_trace(mVcdFile, b_copy_2_2_9_fu_378_p4, "b_copy_2_2_9_fu_378_p4");
    sc_trace(mVcdFile, b_copy_2_2_fu_388_p3, "b_copy_2_2_fu_388_p3");
    sc_trace(mVcdFile, b_copy_2_2_4_fu_403_p3, "b_copy_2_2_4_fu_403_p3");
    sc_trace(mVcdFile, tmp_1_fu_507_p1, "tmp_1_fu_507_p1");
    sc_trace(mVcdFile, tmp_1_fu_507_p2, "tmp_1_fu_507_p2");
    sc_trace(mVcdFile, tmp_1_fu_507_p3, "tmp_1_fu_507_p3");
    sc_trace(mVcdFile, tmp_1_fu_507_p4, "tmp_1_fu_507_p4");
    sc_trace(mVcdFile, tmp_7_fu_522_p1, "tmp_7_fu_522_p1");
    sc_trace(mVcdFile, tmp_7_fu_522_p2, "tmp_7_fu_522_p2");
    sc_trace(mVcdFile, tmp_7_fu_522_p3, "tmp_7_fu_522_p3");
    sc_trace(mVcdFile, tmp_7_fu_522_p4, "tmp_7_fu_522_p4");
    sc_trace(mVcdFile, tmp_7_fu_522_p5, "tmp_7_fu_522_p5");
    sc_trace(mVcdFile, tmp_10_1_fu_537_p0, "tmp_10_1_fu_537_p0");
    sc_trace(mVcdFile, tmp_10_1_fu_537_p1, "tmp_10_1_fu_537_p1");
    sc_trace(mVcdFile, tmp_8_fu_547_p1, "tmp_8_fu_547_p1");
    sc_trace(mVcdFile, tmp_8_fu_547_p2, "tmp_8_fu_547_p2");
    sc_trace(mVcdFile, tmp_8_fu_547_p3, "tmp_8_fu_547_p3");
    sc_trace(mVcdFile, tmp_8_fu_547_p4, "tmp_8_fu_547_p4");
    sc_trace(mVcdFile, tmp_8_fu_547_p5, "tmp_8_fu_547_p5");
    sc_trace(mVcdFile, grp_fu_572_p0, "grp_fu_572_p0");
    sc_trace(mVcdFile, grp_fu_572_p1, "grp_fu_572_p1");
    sc_trace(mVcdFile, grp_fu_572_p2, "grp_fu_572_p2");
    sc_trace(mVcdFile, grp_fu_580_p0, "grp_fu_580_p0");
    sc_trace(mVcdFile, grp_fu_580_p1, "grp_fu_580_p1");
    sc_trace(mVcdFile, grp_fu_580_p2, "grp_fu_580_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_2, "ap_sig_cseq_ST_st6_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_412, "ap_sig_bdd_412");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("matrixmul.hdltvin.dat");
    mHdltvoutHandle.open("matrixmul.hdltvout.dat");
}

matrixmul::~matrixmul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete matrixmul_mux_3to1_sel2_8_1_U0;
    delete matrixmul_mux_3to1_sel2_8_1_U1;
    delete matrixmul_mux_3to1_sel2_8_1_U2;
    delete matrixmul_mac_muladd_8s_8s_16s_16_1_U3;
    delete matrixmul_mac_muladd_8s_8s_16s_16_1_U4;
}

void matrixmul::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
             !esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
             esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
                     !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
                     !esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it2 = ap_const_logic_0;
    } else {
        if (!((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())))) {
            ap_reg_ppiten_pp0_it2 = ap_reg_ppiten_pp0_it1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
    } else {
        if (!((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())))) {
            ap_reg_ppiten_pp0_it3 = ap_reg_ppiten_pp0_it2.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it3 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_669.read(), ap_const_lv1_0))) {
        i_reg_144 = i_mid2_reg_686.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_144 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_133 = indvar_flatten_next_fu_172_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvar_flatten_reg_133 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0))) {
        j_reg_155 = j_1_fu_218_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        j_reg_155 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_3_reg_695.read(), ap_const_lv1_0) && !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        a_row_0_1_reg_713 = a_row_0_1_fu_224_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read()) && !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && !esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_tmp_3_reg_695_pp0_it1.read()))) {
        a_row_0_fu_66 = a_row_0_1_reg_713.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_3_reg_695.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        a_row_1_1_fu_70 = a_dout.read().range(15, 8);
        a_row_2_1_fu_74 = a_dout.read().range(23, 16);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it1 = exitcond_flatten_reg_669.read();
        ap_reg_ppstg_j_mid2_reg_678_pp0_it1 = j_mid2_reg_678.read();
        ap_reg_ppstg_tmp_3_reg_695_pp0_it1 = tmp_3_reg_695.read();
        exitcond_flatten_reg_669 = exitcond_flatten_fu_166_p2.read();
    }
    if (!((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read())))) {
        ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2 = ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_691.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        b_copy_0_2_1_fu_86 = b_copy_0_2_2_fu_302_p3.read();
        b_copy_0_2_3_fu_78 = b_copy_0_2_7_fu_324_p3.read();
        b_copy_0_2_6_fu_82 = b_copy_0_2_5_fu_317_p3.read();
        b_copy_1_2_1_fu_98 = b_copy_1_2_2_fu_349_p3.read();
        b_copy_1_2_3_fu_90 = b_copy_1_2_7_fu_371_p3.read();
        b_copy_1_2_6_fu_94 = b_copy_1_2_5_fu_364_p3.read();
        b_copy_2_2_1_fu_110 = b_copy_2_2_2_fu_396_p3.read();
        b_copy_2_2_3_fu_102 = b_copy_2_2_7_fu_418_p3.read();
        b_copy_2_2_6_fu_106 = b_copy_2_2_5_fu_411_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0))) {
        i_mid2_reg_686 = i_mid2_fu_198_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0))) {
        j_mid2_reg_678 = j_mid2_fu_184_p3.read();
        tmp_3_reg_695 = tmp_3_fu_212_p2.read();
        tmp_reg_691 = tmp_fu_206_p2.read();
    }
    if ((!((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it1.read()))) {
        tmp9_reg_723 = grp_fu_580_p3.read();
        tmp_1_reg_718 = tmp_1_fu_507_p5.read();
    }
}

void matrixmul::thread_a_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         !esl_seteq<1,1,1>(tmp_3_reg_695.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        a_read = ap_const_logic_1;
    } else {
        a_read = ap_const_logic_0;
    }
}

void matrixmul::thread_a_row_0_1_fu_224_p1() {
    a_row_0_1_fu_224_p1 = a_dout.read().range(8-1, 0);
}

void matrixmul::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_2.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_bdd_19() {
    ap_sig_bdd_19 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void matrixmul::thread_ap_sig_bdd_412() {
    ap_sig_bdd_412 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void matrixmul::thread_ap_sig_bdd_51() {
    ap_sig_bdd_51 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void matrixmul::thread_ap_sig_bdd_67() {
    ap_sig_bdd_67 = ((esl_seteq<1,1,1>(a_empty_n.read(), ap_const_logic_0) && 
  !esl_seteq<1,1,1>(tmp_3_reg_695.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(b_empty_n.read(), ap_const_logic_0) && 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_691.read())));
}

void matrixmul::thread_ap_sig_bdd_77() {
    ap_sig_bdd_77 = (esl_seteq<1,1,1>(res_full_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2.read()));
}

void matrixmul::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_bdd_51.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_19.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void matrixmul::thread_ap_sig_cseq_ST_st6_fsm_2() {
    if (ap_sig_bdd_412.read()) {
        ap_sig_cseq_ST_st6_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_2 = ap_const_logic_0;
    }
}

void matrixmul::thread_b_copy_0_2_2_fu_302_p3() {
    b_copy_0_2_2_fu_302_p3 = (!tmp_3_reg_695.read()[0].is_01())? sc_lv<8>(): ((tmp_3_reg_695.read()[0].to_bool())? b_copy_0_2_1_fu_86.read(): b_copy_0_2_fu_294_p3.read());
}

void matrixmul::thread_b_copy_0_2_4_fu_309_p3() {
    b_copy_0_2_4_fu_309_p3 = (!sel_tmp_fu_289_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_fu_289_p2.read()[0].to_bool())? b_copy_0_2_9_fu_285_p1.read(): b_copy_0_2_6_fu_82.read());
}

void matrixmul::thread_b_copy_0_2_5_fu_317_p3() {
    b_copy_0_2_5_fu_317_p3 = (!tmp_3_reg_695.read()[0].is_01())? sc_lv<8>(): ((tmp_3_reg_695.read()[0].to_bool())? b_copy_0_2_6_fu_82.read(): b_copy_0_2_4_fu_309_p3.read());
}

void matrixmul::thread_b_copy_0_2_7_fu_324_p3() {
    b_copy_0_2_7_fu_324_p3 = (!tmp_3_reg_695.read()[0].is_01())? sc_lv<8>(): ((tmp_3_reg_695.read()[0].to_bool())? b_copy_0_2_9_fu_285_p1.read(): b_copy_0_2_3_fu_78.read());
}

void matrixmul::thread_b_copy_0_2_9_fu_285_p1() {
    b_copy_0_2_9_fu_285_p1 = b_dout.read().range(8-1, 0);
}

void matrixmul::thread_b_copy_0_2_fu_294_p3() {
    b_copy_0_2_fu_294_p3 = (!sel_tmp_fu_289_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_fu_289_p2.read()[0].to_bool())? b_copy_0_2_1_fu_86.read(): b_copy_0_2_9_fu_285_p1.read());
}

void matrixmul::thread_b_copy_1_2_2_fu_349_p3() {
    b_copy_1_2_2_fu_349_p3 = (!tmp_3_reg_695.read()[0].is_01())? sc_lv<8>(): ((tmp_3_reg_695.read()[0].to_bool())? b_copy_1_2_1_fu_98.read(): b_copy_1_2_fu_341_p3.read());
}

void matrixmul::thread_b_copy_1_2_4_fu_356_p3() {
    b_copy_1_2_4_fu_356_p3 = (!sel_tmp_fu_289_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_fu_289_p2.read()[0].to_bool())? b_copy_1_2_9_fu_331_p4.read(): b_copy_1_2_6_fu_94.read());
}

void matrixmul::thread_b_copy_1_2_5_fu_364_p3() {
    b_copy_1_2_5_fu_364_p3 = (!tmp_3_reg_695.read()[0].is_01())? sc_lv<8>(): ((tmp_3_reg_695.read()[0].to_bool())? b_copy_1_2_6_fu_94.read(): b_copy_1_2_4_fu_356_p3.read());
}

void matrixmul::thread_b_copy_1_2_7_fu_371_p3() {
    b_copy_1_2_7_fu_371_p3 = (!tmp_3_reg_695.read()[0].is_01())? sc_lv<8>(): ((tmp_3_reg_695.read()[0].to_bool())? b_copy_1_2_9_fu_331_p4.read(): b_copy_1_2_3_fu_90.read());
}

void matrixmul::thread_b_copy_1_2_9_fu_331_p4() {
    b_copy_1_2_9_fu_331_p4 = b_dout.read().range(15, 8);
}

void matrixmul::thread_b_copy_1_2_fu_341_p3() {
    b_copy_1_2_fu_341_p3 = (!sel_tmp_fu_289_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_fu_289_p2.read()[0].to_bool())? b_copy_1_2_1_fu_98.read(): b_copy_1_2_9_fu_331_p4.read());
}

void matrixmul::thread_b_copy_2_2_2_fu_396_p3() {
    b_copy_2_2_2_fu_396_p3 = (!tmp_3_reg_695.read()[0].is_01())? sc_lv<8>(): ((tmp_3_reg_695.read()[0].to_bool())? b_copy_2_2_1_fu_110.read(): b_copy_2_2_fu_388_p3.read());
}

void matrixmul::thread_b_copy_2_2_4_fu_403_p3() {
    b_copy_2_2_4_fu_403_p3 = (!sel_tmp_fu_289_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_fu_289_p2.read()[0].to_bool())? b_copy_2_2_9_fu_378_p4.read(): b_copy_2_2_6_fu_106.read());
}

void matrixmul::thread_b_copy_2_2_5_fu_411_p3() {
    b_copy_2_2_5_fu_411_p3 = (!tmp_3_reg_695.read()[0].is_01())? sc_lv<8>(): ((tmp_3_reg_695.read()[0].to_bool())? b_copy_2_2_6_fu_106.read(): b_copy_2_2_4_fu_403_p3.read());
}

void matrixmul::thread_b_copy_2_2_7_fu_418_p3() {
    b_copy_2_2_7_fu_418_p3 = (!tmp_3_reg_695.read()[0].is_01())? sc_lv<8>(): ((tmp_3_reg_695.read()[0].to_bool())? b_copy_2_2_9_fu_378_p4.read(): b_copy_2_2_3_fu_102.read());
}

void matrixmul::thread_b_copy_2_2_9_fu_378_p4() {
    b_copy_2_2_9_fu_378_p4 = b_dout.read().range(23, 16);
}

void matrixmul::thread_b_copy_2_2_fu_388_p3() {
    b_copy_2_2_fu_388_p3 = (!sel_tmp_fu_289_p2.read()[0].is_01())? sc_lv<8>(): ((sel_tmp_fu_289_p2.read()[0].to_bool())? b_copy_2_2_1_fu_110.read(): b_copy_2_2_9_fu_378_p4.read());
}

void matrixmul::thread_b_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_691.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        b_read = ap_const_logic_1;
    } else {
        b_read = ap_const_logic_0;
    }
}

void matrixmul::thread_exitcond_flatten_fu_166_p2() {
    exitcond_flatten_fu_166_p2 = (!indvar_flatten_reg_133.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_133.read() == ap_const_lv4_9);
}

void matrixmul::thread_exitcond_fu_178_p2() {
    exitcond_fu_178_p2 = (!j_reg_155.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_155.read() == ap_const_lv2_3);
}

void matrixmul::thread_grp_fu_572_p0() {
    grp_fu_572_p0 = a_row_0_fu_66.read();
}

void matrixmul::thread_grp_fu_572_p1() {
    grp_fu_572_p1 = tmp_1_reg_718.read();
}

void matrixmul::thread_grp_fu_572_p2() {
    grp_fu_572_p2 = tmp9_reg_723.read();
}

void matrixmul::thread_grp_fu_580_p0() {
    grp_fu_580_p0 = a_row_2_1_fu_74.read();
}

void matrixmul::thread_grp_fu_580_p1() {
    grp_fu_580_p1 = tmp_8_fu_547_p5.read();
}

void matrixmul::thread_grp_fu_580_p2() {
    grp_fu_580_p2 = (!tmp_10_1_fu_537_p0.read().is_01() || !tmp_10_1_fu_537_p1.read().is_01())? sc_lv<16>(): sc_bigint<8>(tmp_10_1_fu_537_p0.read()) * sc_bigint<8>(tmp_10_1_fu_537_p1.read());
}

void matrixmul::thread_i_mid2_fu_198_p3() {
    i_mid2_fu_198_p3 = (!exitcond_fu_178_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_178_p2.read()[0].to_bool())? i_s_fu_192_p2.read(): i_phi_fu_148_p4.read());
}

void matrixmul::thread_i_phi_fu_148_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_669.read(), ap_const_lv1_0))) {
        i_phi_fu_148_p4 = i_mid2_reg_686.read();
    } else {
        i_phi_fu_148_p4 = i_reg_144.read();
    }
}

void matrixmul::thread_i_s_fu_192_p2() {
    i_s_fu_192_p2 = (!i_phi_fu_148_p4.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_phi_fu_148_p4.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul::thread_indvar_flatten_next_fu_172_p2() {
    indvar_flatten_next_fu_172_p2 = (!indvar_flatten_reg_133.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(indvar_flatten_reg_133.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void matrixmul::thread_j_1_fu_218_p2() {
    j_1_fu_218_p2 = (!j_mid2_fu_184_p3.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_mid2_fu_184_p3.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrixmul::thread_j_mid2_fu_184_p3() {
    j_mid2_fu_184_p3 = (!exitcond_fu_178_p2.read()[0].is_01())? sc_lv<2>(): ((exitcond_fu_178_p2.read()[0].to_bool())? ap_const_lv2_0: j_reg_155.read());
}

void matrixmul::thread_res_din() {
    res_din = grp_fu_572_p3.read();
}

void matrixmul::thread_res_write() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, ap_reg_ppstg_exitcond_flatten_reg_669_pp0_it2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()) && 
         !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))))) {
        res_write = ap_const_logic_1;
    } else {
        res_write = ap_const_logic_0;
    }
}

void matrixmul::thread_sel_tmp_fu_289_p2() {
    sel_tmp_fu_289_p2 = (!j_mid2_reg_678.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(j_mid2_reg_678.read() == ap_const_lv2_1);
}

void matrixmul::thread_tmp_10_1_fu_537_p0() {
    tmp_10_1_fu_537_p0 = a_row_1_1_fu_70.read();
}

void matrixmul::thread_tmp_10_1_fu_537_p1() {
    tmp_10_1_fu_537_p1 = tmp_7_fu_522_p5.read();
}

void matrixmul::thread_tmp_1_fu_507_p1() {
    tmp_1_fu_507_p1 = b_copy_0_2_3_fu_78.read();
}

void matrixmul::thread_tmp_1_fu_507_p2() {
    tmp_1_fu_507_p2 = b_copy_0_2_6_fu_82.read();
}

void matrixmul::thread_tmp_1_fu_507_p3() {
    tmp_1_fu_507_p3 = b_copy_0_2_1_fu_86.read();
}

void matrixmul::thread_tmp_1_fu_507_p4() {
    tmp_1_fu_507_p4 = ap_reg_ppstg_j_mid2_reg_678_pp0_it1.read();
}

void matrixmul::thread_tmp_3_fu_212_p2() {
    tmp_3_fu_212_p2 = (!j_mid2_fu_184_p3.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(j_mid2_fu_184_p3.read() == ap_const_lv2_0);
}

void matrixmul::thread_tmp_7_fu_522_p1() {
    tmp_7_fu_522_p1 = b_copy_1_2_3_fu_90.read();
}

void matrixmul::thread_tmp_7_fu_522_p2() {
    tmp_7_fu_522_p2 = b_copy_1_2_6_fu_94.read();
}

void matrixmul::thread_tmp_7_fu_522_p3() {
    tmp_7_fu_522_p3 = b_copy_1_2_1_fu_98.read();
}

void matrixmul::thread_tmp_7_fu_522_p4() {
    tmp_7_fu_522_p4 = ap_reg_ppstg_j_mid2_reg_678_pp0_it1.read();
}

void matrixmul::thread_tmp_8_fu_547_p1() {
    tmp_8_fu_547_p1 = b_copy_2_2_3_fu_102.read();
}

void matrixmul::thread_tmp_8_fu_547_p2() {
    tmp_8_fu_547_p2 = b_copy_2_2_6_fu_106.read();
}

void matrixmul::thread_tmp_8_fu_547_p3() {
    tmp_8_fu_547_p3 = b_copy_2_2_1_fu_110.read();
}

void matrixmul::thread_tmp_8_fu_547_p4() {
    tmp_8_fu_547_p4 = ap_reg_ppstg_j_mid2_reg_678_pp0_it1.read();
}

void matrixmul::thread_tmp_fu_206_p2() {
    tmp_fu_206_p2 = (!i_mid2_fu_198_p3.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(i_mid2_fu_198_p3.read() == ap_const_lv2_0);
}

void matrixmul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()) && !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && !esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()) && 
  !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it2.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
  !((ap_sig_bdd_67.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())) || (ap_sig_bdd_77.read() && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it3.read()))) && 
  !esl_seteq<1,1,1>(exitcond_flatten_fu_166_p2.read(), ap_const_lv1_0) && 
  !esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read())))) {
                ap_NS_fsm = ap_ST_st6_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

void matrixmul::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_dout\" :  \"" << a_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_empty_n\" :  \"" << a_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_read\" :  \"" << a_read.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_dout\" :  \"" << b_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_empty_n\" :  \"" << b_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_read\" :  \"" << b_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_din\" :  \"" << res_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"res_full_n\" :  \"" << res_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"res_write\" :  \"" << res_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

