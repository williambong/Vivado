

================================================================
== Vivado HLS Report for 'matrixmul'
================================================================
* Date:           Mon Aug 10 15:47:25 2015

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        matrixmul_prj
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  13.33|     10.42|        1.67|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   13|   13|   14|   14|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------+-----+-----+----------+-----------+-----------+------+----------+
        |           |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Row_Col  |   11|   11|         4|          1|          1|     9|    yes   |
        +-----------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+--------+
|       Name      | BRAM_18K| DSP48E|   FF   |   LUT  |
+-----------------+---------+-------+--------+--------+
|Expression       |        -|      -|       -|       -|
|FIFO             |        -|      -|       -|       -|
|Instance         |        -|      -|       -|       -|
|Memory           |        -|      -|       -|       -|
|Multiplexer      |        -|      -|       -|       -|
|Register         |        -|      -|       -|       -|
+-----------------+---------+-------+--------+--------+
|Total            |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+
|Available        |      650|    600|  202800|  101400|
+-----------------+---------+-------+--------+--------+
|Utilization (%)  |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 6
* Pipeline: 1
  Pipeline-0: II = 1, D = 4, States = { 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	6  / (exitcond_flatten)
	3  / (!exitcond_flatten)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	2  / true
6 --> 
* FSM state operations: 

 <State 1>: 1.09ns
ST_1: a_row_0 [1/1] 0.00ns
:0  %a_row_0 = alloca i8

ST_1: a_row_1_1 [1/1] 0.00ns
:1  %a_row_1_1 = alloca i8

ST_1: a_row_2_1 [1/1] 0.00ns
:2  %a_row_2_1 = alloca i8

ST_1: b_copy_0_2_3 [1/1] 0.00ns
:3  %b_copy_0_2_3 = alloca i8

ST_1: b_copy_0_2_6 [1/1] 0.00ns
:4  %b_copy_0_2_6 = alloca i8

ST_1: b_copy_0_2_1 [1/1] 0.00ns
:5  %b_copy_0_2_1 = alloca i8

ST_1: b_copy_1_2_3 [1/1] 0.00ns
:6  %b_copy_1_2_3 = alloca i8

ST_1: b_copy_1_2_6 [1/1] 0.00ns
:7  %b_copy_1_2_6 = alloca i8

ST_1: b_copy_1_2_1 [1/1] 0.00ns
:8  %b_copy_1_2_1 = alloca i8

ST_1: b_copy_2_2_3 [1/1] 0.00ns
:9  %b_copy_2_2_3 = alloca i8

ST_1: b_copy_2_2_6 [1/1] 0.00ns
:10  %b_copy_2_2_6 = alloca i8

ST_1: b_copy_2_2_1 [1/1] 0.00ns
:11  %b_copy_2_2_1 = alloca i8

ST_1: stg_19 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap(i24* %a), !map !0

ST_1: stg_20 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap(i24* %b), !map !17

ST_1: stg_21 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecBitsMap(i16* %res), !map !30

ST_1: stg_22 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecTopModule([10 x i8]* @matrixmul_str) nounwind

ST_1: stg_23 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecInterface(i24* %a, [8 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_24 [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecInterface(i24* %b, [8 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_25 [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecInterface(i16* %res, [8 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_26 [1/1] 1.09ns
:19  br label %1


 <State 2>: 2.54ns
ST_2: indvar_flatten [1/1] 0.00ns
:0  %indvar_flatten = phi i4 [ 0, %0 ], [ %indvar_flatten_next, %.loopexit ]

ST_2: i [1/1] 0.00ns
:1  %i = phi i2 [ 0, %0 ], [ %i_mid2, %.loopexit ]

ST_2: j [1/1] 0.00ns
:2  %j = phi i2 [ 0, %0 ], [ %j_1, %.loopexit ]

ST_2: exitcond_flatten [1/1] 1.24ns
:3  %exitcond_flatten = icmp eq i4 %indvar_flatten, -7

ST_2: indvar_flatten_next [1/1] 0.48ns
:4  %indvar_flatten_next = add i4 %indvar_flatten, 1

ST_2: stg_32 [1/1] 0.00ns
:5  br i1 %exitcond_flatten, label %2, label %.reset

ST_2: exitcond [1/1] 0.85ns
.reset:2  %exitcond = icmp eq i2 %j, -1

ST_2: j_mid2 [1/1] 0.84ns
.reset:3  %j_mid2 = select i1 %exitcond, i2 0, i2 %j

ST_2: i_s [1/1] 0.48ns
.reset:4  %i_s = add i2 %i, 1

ST_2: i_mid2 [1/1] 0.84ns
.reset:5  %i_mid2 = select i1 %exitcond, i2 %i_s, i2 %i

ST_2: tmp [1/1] 0.85ns
.reset:6  %tmp = icmp eq i2 %i_mid2, 0

ST_2: tmp_3 [1/1] 0.85ns
.reset:10  %tmp_3 = icmp eq i2 %j_mid2, 0

ST_2: stg_39 [1/1] 0.00ns
.loopexit6:0  br i1 %tmp, label %.preheader.preheader_ifconv, label %.loopexit

ST_2: j_1 [1/1] 0.48ns
.loopexit:28  %j_1 = add i2 %j_mid2, 1


 <State 3>: 6.31ns
ST_3: stg_41 [1/1] 0.00ns
.reset:11  br i1 %tmp_3, label %.preheader5.0, label %.loopexit6

ST_3: a_read [1/1] 4.63ns
.preheader5.0:0  %a_read = call i24 @_ssdm_op_Read.ap_fifo.volatile.i24P(i24* %a)

ST_3: a_row_0_1 [1/1] 0.00ns
.preheader5.0:1  %a_row_0_1 = trunc i24 %a_read to i8

ST_3: a_row_1 [1/1] 0.00ns
.preheader5.0:2  %a_row_1 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %a_read, i32 8, i32 15)

ST_3: a_row_2 [1/1] 0.00ns
.preheader5.0:3  %a_row_2 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %a_read, i32 16, i32 23)

ST_3: stg_46 [1/1] 0.00ns
.preheader5.0:4  store i8 %a_row_2, i8* %a_row_2_1

ST_3: stg_47 [1/1] 0.00ns
.preheader5.0:5  store i8 %a_row_1, i8* %a_row_1_1

ST_3: b_copy_0_2_3_load [1/1] 0.00ns
.preheader.preheader_ifconv:0  %b_copy_0_2_3_load = load i8* %b_copy_0_2_3

ST_3: b_copy_0_2_6_load [1/1] 0.00ns
.preheader.preheader_ifconv:1  %b_copy_0_2_6_load = load i8* %b_copy_0_2_6

ST_3: b_copy_0_2_1_load [1/1] 0.00ns
.preheader.preheader_ifconv:2  %b_copy_0_2_1_load = load i8* %b_copy_0_2_1

ST_3: b_copy_1_2_3_load [1/1] 0.00ns
.preheader.preheader_ifconv:3  %b_copy_1_2_3_load = load i8* %b_copy_1_2_3

ST_3: b_copy_1_2_6_load [1/1] 0.00ns
.preheader.preheader_ifconv:4  %b_copy_1_2_6_load = load i8* %b_copy_1_2_6

ST_3: b_copy_1_2_1_load [1/1] 0.00ns
.preheader.preheader_ifconv:5  %b_copy_1_2_1_load = load i8* %b_copy_1_2_1

ST_3: b_copy_2_2_3_load [1/1] 0.00ns
.preheader.preheader_ifconv:6  %b_copy_2_2_3_load = load i8* %b_copy_2_2_3

ST_3: b_copy_2_2_6_load [1/1] 0.00ns
.preheader.preheader_ifconv:7  %b_copy_2_2_6_load = load i8* %b_copy_2_2_6

ST_3: b_copy_2_2_1_load [1/1] 0.00ns
.preheader.preheader_ifconv:8  %b_copy_2_2_1_load = load i8* %b_copy_2_2_1

ST_3: b_read [1/1] 4.63ns
.preheader.preheader_ifconv:9  %b_read = call i24 @_ssdm_op_Read.ap_fifo.volatile.i24P(i24* %b)

ST_3: b_copy_0_2_9 [1/1] 0.00ns
.preheader.preheader_ifconv:10  %b_copy_0_2_9 = trunc i24 %b_read to i8

ST_3: sel_tmp [1/1] 0.85ns
.preheader.preheader_ifconv:11  %sel_tmp = icmp eq i2 %j_mid2, 1

ST_3: b_copy_0_2 [1/1] 0.84ns
.preheader.preheader_ifconv:12  %b_copy_0_2 = select i1 %sel_tmp, i8 %b_copy_0_2_1_load, i8 %b_copy_0_2_9

ST_3: b_copy_0_2_2 [1/1] 0.84ns
.preheader.preheader_ifconv:13  %b_copy_0_2_2 = select i1 %tmp_3, i8 %b_copy_0_2_1_load, i8 %b_copy_0_2

ST_3: b_copy_0_2_4 [1/1] 0.84ns
.preheader.preheader_ifconv:14  %b_copy_0_2_4 = select i1 %sel_tmp, i8 %b_copy_0_2_9, i8 %b_copy_0_2_6_load

ST_3: b_copy_0_2_5 [1/1] 0.84ns
.preheader.preheader_ifconv:15  %b_copy_0_2_5 = select i1 %tmp_3, i8 %b_copy_0_2_6_load, i8 %b_copy_0_2_4

ST_3: b_copy_0_2_7 [1/1] 0.84ns
.preheader.preheader_ifconv:16  %b_copy_0_2_7 = select i1 %tmp_3, i8 %b_copy_0_2_9, i8 %b_copy_0_2_3_load

ST_3: b_copy_1_2_9 [1/1] 0.00ns
.preheader.preheader_ifconv:17  %b_copy_1_2_9 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %b_read, i32 8, i32 15)

ST_3: b_copy_1_2 [1/1] 0.84ns
.preheader.preheader_ifconv:18  %b_copy_1_2 = select i1 %sel_tmp, i8 %b_copy_1_2_1_load, i8 %b_copy_1_2_9

ST_3: b_copy_1_2_2 [1/1] 0.84ns
.preheader.preheader_ifconv:19  %b_copy_1_2_2 = select i1 %tmp_3, i8 %b_copy_1_2_1_load, i8 %b_copy_1_2

ST_3: b_copy_1_2_4 [1/1] 0.84ns
.preheader.preheader_ifconv:20  %b_copy_1_2_4 = select i1 %sel_tmp, i8 %b_copy_1_2_9, i8 %b_copy_1_2_6_load

ST_3: b_copy_1_2_5 [1/1] 0.84ns
.preheader.preheader_ifconv:21  %b_copy_1_2_5 = select i1 %tmp_3, i8 %b_copy_1_2_6_load, i8 %b_copy_1_2_4

ST_3: b_copy_1_2_7 [1/1] 0.84ns
.preheader.preheader_ifconv:22  %b_copy_1_2_7 = select i1 %tmp_3, i8 %b_copy_1_2_9, i8 %b_copy_1_2_3_load

ST_3: b_copy_2_2_9 [1/1] 0.00ns
.preheader.preheader_ifconv:23  %b_copy_2_2_9 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %b_read, i32 16, i32 23)

ST_3: b_copy_2_2 [1/1] 0.84ns
.preheader.preheader_ifconv:24  %b_copy_2_2 = select i1 %sel_tmp, i8 %b_copy_2_2_1_load, i8 %b_copy_2_2_9

ST_3: b_copy_2_2_2 [1/1] 0.84ns
.preheader.preheader_ifconv:25  %b_copy_2_2_2 = select i1 %tmp_3, i8 %b_copy_2_2_1_load, i8 %b_copy_2_2

ST_3: b_copy_2_2_4 [1/1] 0.84ns
.preheader.preheader_ifconv:26  %b_copy_2_2_4 = select i1 %sel_tmp, i8 %b_copy_2_2_9, i8 %b_copy_2_2_6_load

ST_3: b_copy_2_2_5 [1/1] 0.84ns
.preheader.preheader_ifconv:27  %b_copy_2_2_5 = select i1 %tmp_3, i8 %b_copy_2_2_6_load, i8 %b_copy_2_2_4

ST_3: b_copy_2_2_7 [1/1] 0.84ns
.preheader.preheader_ifconv:28  %b_copy_2_2_7 = select i1 %tmp_3, i8 %b_copy_2_2_9, i8 %b_copy_2_2_3_load

ST_3: stg_77 [1/1] 0.00ns
.preheader.preheader_ifconv:29  store i8 %b_copy_2_2_2, i8* %b_copy_2_2_1

ST_3: stg_78 [1/1] 0.00ns
.preheader.preheader_ifconv:30  store i8 %b_copy_2_2_5, i8* %b_copy_2_2_6

ST_3: stg_79 [1/1] 0.00ns
.preheader.preheader_ifconv:31  store i8 %b_copy_2_2_7, i8* %b_copy_2_2_3

ST_3: stg_80 [1/1] 0.00ns
.preheader.preheader_ifconv:32  store i8 %b_copy_1_2_2, i8* %b_copy_1_2_1

ST_3: stg_81 [1/1] 0.00ns
.preheader.preheader_ifconv:33  store i8 %b_copy_1_2_5, i8* %b_copy_1_2_6

ST_3: stg_82 [1/1] 0.00ns
.preheader.preheader_ifconv:34  store i8 %b_copy_1_2_7, i8* %b_copy_1_2_3

ST_3: stg_83 [1/1] 0.00ns
.preheader.preheader_ifconv:35  store i8 %b_copy_0_2_2, i8* %b_copy_0_2_1

ST_3: stg_84 [1/1] 0.00ns
.preheader.preheader_ifconv:36  store i8 %b_copy_0_2_5, i8* %b_copy_0_2_6

ST_3: stg_85 [1/1] 0.00ns
.preheader.preheader_ifconv:37  store i8 %b_copy_0_2_7, i8* %b_copy_0_2_3

ST_3: stg_86 [1/1] 0.00ns
.preheader.preheader_ifconv:38  br label %.loopexit


 <State 4>: 9.82ns
ST_4: stg_87 [1/1] 0.00ns
.preheader5.0:6  store i8 %a_row_0_1, i8* %a_row_0

ST_4: stg_88 [1/1] 0.00ns
.preheader5.0:7  br label %.loopexit6

ST_4: a_row_1_1_load [1/1] 0.00ns
.loopexit:1  %a_row_1_1_load = load i8* %a_row_1_1

ST_4: a_row_2_1_load [1/1] 0.00ns
.loopexit:2  %a_row_2_1_load = load i8* %a_row_2_1

ST_4: b_copy_0_2_3_load_1 [1/1] 0.00ns
.loopexit:3  %b_copy_0_2_3_load_1 = load i8* %b_copy_0_2_3

ST_4: b_copy_0_2_6_load_1 [1/1] 0.00ns
.loopexit:4  %b_copy_0_2_6_load_1 = load i8* %b_copy_0_2_6

ST_4: b_copy_0_2_1_load_1 [1/1] 0.00ns
.loopexit:5  %b_copy_0_2_1_load_1 = load i8* %b_copy_0_2_1

ST_4: b_copy_1_2_3_load_1 [1/1] 0.00ns
.loopexit:6  %b_copy_1_2_3_load_1 = load i8* %b_copy_1_2_3

ST_4: b_copy_1_2_6_load_1 [1/1] 0.00ns
.loopexit:7  %b_copy_1_2_6_load_1 = load i8* %b_copy_1_2_6

ST_4: b_copy_1_2_1_load_1 [1/1] 0.00ns
.loopexit:8  %b_copy_1_2_1_load_1 = load i8* %b_copy_1_2_1

ST_4: b_copy_2_2_3_load_1 [1/1] 0.00ns
.loopexit:9  %b_copy_2_2_3_load_1 = load i8* %b_copy_2_2_3

ST_4: b_copy_2_2_6_load_1 [1/1] 0.00ns
.loopexit:10  %b_copy_2_2_6_load_1 = load i8* %b_copy_2_2_6

ST_4: b_copy_2_2_1_load_1 [1/1] 0.00ns
.loopexit:11  %b_copy_2_2_1_load_1 = load i8* %b_copy_2_2_1

ST_4: tmp_1 [1/1] 1.09ns
.loopexit:13  %tmp_1 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %b_copy_0_2_3_load_1, i8 %b_copy_0_2_6_load_1, i8 %b_copy_0_2_1_load_1, i2 %j_mid2)

ST_4: tmp_5_1 [1/1] 0.00ns
.loopexit:16  %tmp_5_1 = sext i8 %a_row_1_1_load to i16

ST_4: tmp_7 [1/1] 1.09ns
.loopexit:17  %tmp_7 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %b_copy_1_2_3_load_1, i8 %b_copy_1_2_6_load_1, i8 %b_copy_1_2_1_load_1, i2 %j_mid2)

ST_4: tmp_8_1 [1/1] 0.00ns
.loopexit:18  %tmp_8_1 = sext i8 %tmp_7 to i16

ST_4: tmp_10_1 [1/1] 5.79ns
.loopexit:19  %tmp_10_1 = mul i16 %tmp_5_1, %tmp_8_1

ST_4: tmp_5_2 [1/1] 0.00ns
.loopexit:20  %tmp_5_2 = sext i8 %a_row_2_1_load to i16

ST_4: tmp_8 [1/1] 1.09ns
.loopexit:21  %tmp_8 = call i8 @_ssdm_op_Mux.ap_auto.3i8.i2(i8 %b_copy_2_2_3_load_1, i8 %b_copy_2_2_6_load_1, i8 %b_copy_2_2_1_load_1, i2 %j_mid2)

ST_4: tmp_8_2 [1/1] 0.00ns
.loopexit:22  %tmp_8_2 = sext i8 %tmp_8 to i16

ST_4: tmp_10_2 [1/1] 2.84ns
.loopexit:23  %tmp_10_2 = mul i16 %tmp_5_2, %tmp_8_2

ST_4: tmp9 [1/1] 2.95ns
.loopexit:24  %tmp9 = add i16 %tmp_10_1, %tmp_10_2


 <State 5>: 10.42ns
ST_5: stg_110 [1/1] 0.00ns
.reset:0  call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @Row_Col_str)

ST_5: empty_7 [1/1] 0.00ns
.reset:1  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)

ST_5: stg_112 [1/1] 0.00ns
.reset:7  call void (...)* @_ssdm_op_SpecLoopName([4 x i8]* @p_str4) nounwind

ST_5: tmp_4 [1/1] 0.00ns
.reset:8  %tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([4 x i8]* @p_str4) nounwind

ST_5: stg_114 [1/1] 0.00ns
.reset:9  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_5: a_row_0_load [1/1] 0.00ns
.loopexit:0  %a_row_0_load = load i8* %a_row_0

ST_5: tmp_s [1/1] 0.00ns
.loopexit:12  %tmp_s = sext i8 %a_row_0_load to i16

ST_5: tmp_5 [1/1] 0.00ns
.loopexit:14  %tmp_5 = sext i8 %tmp_1 to i16

ST_5: tmp_6 [1/1] 2.84ns
.loopexit:15  %tmp_6 = mul i16 %tmp_s, %tmp_5

ST_5: tmp_11_2 [1/1] 2.95ns
.loopexit:25  %tmp_11_2 = add i16 %tmp9, %tmp_6

ST_5: stg_120 [1/1] 4.63ns
.loopexit:26  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %res, i16 %tmp_11_2)

ST_5: empty [1/1] 0.00ns
.loopexit:27  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([4 x i8]* @p_str4, i32 %tmp_4) nounwind

ST_5: stg_122 [1/1] 0.00ns
.loopexit:29  br label %1


 <State 6>: 0.00ns
ST_6: stg_123 [1/1] 0.00ns
:0  ret void



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
