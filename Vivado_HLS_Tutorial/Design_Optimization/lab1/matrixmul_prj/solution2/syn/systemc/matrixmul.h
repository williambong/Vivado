// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _matrixmul_HH_
#define _matrixmul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "matrixmul_mac_muladd_8s_8s_16ns_16_1.h"

namespace ap_rtl {

struct matrixmul : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<8> > a_q0;
    sc_out< sc_lv<4> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<8> > b_q0;
    sc_out< sc_lv<4> > res_address0;
    sc_out< sc_logic > res_ce0;
    sc_out< sc_logic > res_we0;
    sc_out< sc_lv<16> > res_d0;
    sc_in< sc_lv<16> > res_q0;


    // Module declarations
    matrixmul(sc_module_name name);
    SC_HAS_PROCESS(matrixmul);

    ~matrixmul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    matrixmul_mac_muladd_8s_8s_16ns_16_1<1,1,8,8,16,16>* matrixmul_mac_muladd_8s_8s_16ns_16_1_U0;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_21;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_137_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_55;
    sc_signal< sc_lv<4> > indvar_flatten_next_fu_143_p2;
    sc_signal< sc_lv<4> > indvar_flatten_next_reg_318;
    sc_signal< sc_lv<2> > j_mid2_fu_155_p3;
    sc_signal< sc_lv<2> > j_mid2_reg_323;
    sc_signal< sc_lv<2> > i_mid2_fu_169_p3;
    sc_signal< sc_lv<2> > i_mid2_reg_328;
    sc_signal< sc_lv<6> > tmp_2_trn6_cast_fu_181_p1;
    sc_signal< sc_lv<6> > tmp_2_trn6_cast_reg_333;
    sc_signal< sc_lv<6> > p_addr7_cast_fu_203_p1;
    sc_signal< sc_lv<6> > p_addr7_cast_reg_338;
    sc_signal< sc_lv<4> > res_addr_reg_343;
    sc_signal< sc_lv<2> > k_1_fu_228_p2;
    sc_signal< sc_lv<2> > k_1_reg_351;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_79;
    sc_signal< sc_lv<1> > exitcond_fu_222_p2;
    sc_signal< sc_lv<2> > j_1_fu_300_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_95;
    sc_signal< sc_lv<4> > indvar_flatten_reg_93;
    sc_signal< sc_lv<2> > i_reg_104;
    sc_signal< sc_lv<2> > j_reg_115;
    sc_signal< sc_lv<2> > k_reg_126;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_115;
    sc_signal< sc_lv<64> > tmp_1_fu_217_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_251_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_287_p1;
    sc_signal< sc_lv<16> > grp_fu_305_p3;
    sc_signal< sc_lv<1> > exitcond1_fu_149_p2;
    sc_signal< sc_lv<2> > i_s_fu_163_p2;
    sc_signal< sc_lv<4> > tmp_fu_185_p3;
    sc_signal< sc_lv<5> > p_shl_cast_fu_193_p1;
    sc_signal< sc_lv<5> > tmp_trn5_cast_fu_177_p1;
    sc_signal< sc_lv<5> > p_addr7_fu_197_p2;
    sc_signal< sc_lv<6> > p_addr8_fu_207_p2;
    sc_signal< sc_lv<32> > p_addr8_cast_fu_213_p1;
    sc_signal< sc_lv<6> > tmp_4_trn_cast1_fu_234_p1;
    sc_signal< sc_lv<6> > p_addr1_fu_242_p2;
    sc_signal< sc_lv<32> > p_addr1_cast_fu_247_p1;
    sc_signal< sc_lv<4> > tmp_4_fu_256_p3;
    sc_signal< sc_lv<5> > p_shl9_cast_fu_264_p1;
    sc_signal< sc_lv<5> > tmp_4_trn_cast_fu_238_p1;
    sc_signal< sc_lv<5> > p_addr3_fu_268_p2;
    sc_signal< sc_lv<6> > p_addr3_cast_fu_274_p1;
    sc_signal< sc_lv<6> > p_addr4_fu_278_p2;
    sc_signal< sc_lv<32> > p_addr4_cast_fu_283_p1;
    sc_signal< sc_lv<8> > grp_fu_305_p0;
    sc_signal< sc_lv<8> > grp_fu_305_p1;
    sc_signal< sc_lv<16> > grp_fu_305_p2;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_115();
    void thread_ap_sig_bdd_21();
    void thread_ap_sig_bdd_55();
    void thread_ap_sig_bdd_79();
    void thread_ap_sig_bdd_95();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_exitcond1_fu_149_p2();
    void thread_exitcond_flatten_fu_137_p2();
    void thread_exitcond_fu_222_p2();
    void thread_grp_fu_305_p0();
    void thread_grp_fu_305_p1();
    void thread_grp_fu_305_p2();
    void thread_i_mid2_fu_169_p3();
    void thread_i_s_fu_163_p2();
    void thread_indvar_flatten_next_fu_143_p2();
    void thread_j_1_fu_300_p2();
    void thread_j_mid2_fu_155_p3();
    void thread_k_1_fu_228_p2();
    void thread_p_addr1_cast_fu_247_p1();
    void thread_p_addr1_fu_242_p2();
    void thread_p_addr3_cast_fu_274_p1();
    void thread_p_addr3_fu_268_p2();
    void thread_p_addr4_cast_fu_283_p1();
    void thread_p_addr4_fu_278_p2();
    void thread_p_addr7_cast_fu_203_p1();
    void thread_p_addr7_fu_197_p2();
    void thread_p_addr8_cast_fu_213_p1();
    void thread_p_addr8_fu_207_p2();
    void thread_p_shl9_cast_fu_264_p1();
    void thread_p_shl_cast_fu_193_p1();
    void thread_res_address0();
    void thread_res_ce0();
    void thread_res_d0();
    void thread_res_we0();
    void thread_tmp_1_fu_217_p1();
    void thread_tmp_2_fu_251_p1();
    void thread_tmp_2_trn6_cast_fu_181_p1();
    void thread_tmp_4_fu_256_p3();
    void thread_tmp_4_trn_cast1_fu_234_p1();
    void thread_tmp_4_trn_cast_fu_238_p1();
    void thread_tmp_fu_185_p3();
    void thread_tmp_s_fu_287_p1();
    void thread_tmp_trn5_cast_fu_177_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
