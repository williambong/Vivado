// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _window_fn_top_HH_
#define _window_fn_top_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "window_fn_top_mul_17ns_8s_24_3.h"
#include "window_fn_top_coeff_tab1.h"

namespace ap_rtl {

struct window_fn_top : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > outdata_V_address0;
    sc_out< sc_logic > outdata_V_ce0;
    sc_out< sc_logic > outdata_V_we0;
    sc_out< sc_lv<24> > outdata_V_d0;
    sc_out< sc_lv<5> > indata_V_address0;
    sc_out< sc_logic > indata_V_ce0;
    sc_in< sc_lv<8> > indata_V_q0;


    // Module declarations
    window_fn_top(sc_module_name name);
    SC_HAS_PROCESS(window_fn_top);

    ~window_fn_top();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    window_fn_top_coeff_tab1* coeff_tab1_U;
    window_fn_top_mul_17ns_8s_24_3<1,3,17,8,24>* window_fn_top_mul_17ns_8s_24_3_U0;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<5> > coeff_tab1_address0;
    sc_signal< sc_logic > coeff_tab1_ce0;
    sc_signal< sc_lv<17> > coeff_tab1_q0;
    sc_signal< sc_lv<6> > i_fu_81_p2;
    sc_signal< sc_lv<6> > i_reg_108;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_57;
    sc_signal< sc_lv<64> > tmp_i_fu_87_p1;
    sc_signal< sc_lv<64> > tmp_i_reg_113;
    sc_signal< sc_lv<1> > exitcond_i_fu_75_p2;
    sc_signal< sc_lv<17> > coeff_tab1_load_reg_128;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_75;
    sc_signal< sc_lv<8> > indata_V_load_reg_133;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_85;
    sc_signal< sc_lv<24> > grp_fu_99_p2;
    sc_signal< sc_lv<24> > p_Val2_i_reg_148;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_96;
    sc_signal< sc_lv<6> > i_i_reg_64;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_109;
    sc_signal< sc_lv<17> > grp_fu_99_p0;
    sc_signal< sc_lv<8> > grp_fu_99_p1;
    sc_signal< sc_logic > grp_fu_99_ce;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_lv<24> > grp_fu_99_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_st5_fsm_4;
    static const sc_lv<7> ap_ST_st6_fsm_5;
    static const sc_lv<7> ap_ST_st7_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_109();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_57();
    void thread_ap_sig_bdd_75();
    void thread_ap_sig_bdd_85();
    void thread_ap_sig_bdd_96();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_coeff_tab1_address0();
    void thread_coeff_tab1_ce0();
    void thread_exitcond_i_fu_75_p2();
    void thread_grp_fu_99_ce();
    void thread_grp_fu_99_p0();
    void thread_grp_fu_99_p00();
    void thread_grp_fu_99_p1();
    void thread_i_fu_81_p2();
    void thread_indata_V_address0();
    void thread_indata_V_ce0();
    void thread_outdata_V_address0();
    void thread_outdata_V_ce0();
    void thread_outdata_V_d0();
    void thread_outdata_V_we0();
    void thread_tmp_i_fu_87_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
