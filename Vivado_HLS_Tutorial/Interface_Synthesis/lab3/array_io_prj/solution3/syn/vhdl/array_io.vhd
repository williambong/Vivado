-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity array_io is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    d_o_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_full_n : IN STD_LOGIC;
    d_o_0_write : OUT STD_LOGIC;
    d_o_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_full_n : IN STD_LOGIC;
    d_o_1_write : OUT STD_LOGIC;
    d_o_2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_full_n : IN STD_LOGIC;
    d_o_2_write : OUT STD_LOGIC;
    d_o_3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_full_n : IN STD_LOGIC;
    d_o_3_write : OUT STD_LOGIC;
    d_i_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_0_ce0 : OUT STD_LOGIC;
    d_i_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_0_ce1 : OUT STD_LOGIC;
    d_i_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_1_ce0 : OUT STD_LOGIC;
    d_i_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    d_i_1_ce1 : OUT STD_LOGIC;
    d_i_1_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of array_io is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "array_io,hls_ip_2015_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.400000,HLS_SYN_LAT=11,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1228,HLS_SYN_LUT=1191}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_28 : BOOLEAN;
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_412 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_83 : BOOLEAN;
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_90 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_98 : BOOLEAN;
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_106 : BOOLEAN;
    signal ap_sig_bdd_115 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_124 : BOOLEAN;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_133 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_142 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_151 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_160 : BOOLEAN;
    signal reg_416 : STD_LOGIC_VECTOR (15 downto 0);
    signal reg_420 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_178 : BOOLEAN;
    signal reg_424 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_loc_assign_2_fu_436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_loc_assign_2_reg_968 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_442_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_973 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_loc_assign_2_fu_454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_1_loc_assign_2_reg_998 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_460_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_reg_1003 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_473_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_1013 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_loc_fu_481_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_loc_reg_1023 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_487_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_reg_1028 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_loc_assign_2_fu_499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_loc_assign_2_reg_1043 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_505_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_reg_1048 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_518_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_reg_1058 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_loc_fu_526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_1_loc_reg_1068 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_532_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_1073 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_loc_assign_2_fu_564_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_3_loc_assign_2_reg_1088 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_570_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_reg_1093 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_583_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_reg_1103 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_loc_fu_591_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_loc_reg_1113 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_597_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_reg_1118 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_loc_assign_2_fu_629_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_4_loc_assign_2_reg_1133 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_635_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_1138 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_648_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_reg_1148 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_loc_fu_656_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_3_loc_reg_1158 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_662_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_reg_1163 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_loc_assign_2_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_5_loc_assign_2_reg_1178 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_700_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_reg_1183 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_713_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_reg_1193 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_loc_fu_721_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_4_loc_reg_1203 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_727_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_reg_1208 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_6_loc_assign_2_fu_759_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_6_loc_assign_2_reg_1223 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_765_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_reg_1228 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_778_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_1233 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_loc_fu_786_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_5_loc_reg_1243 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_792_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_reg_1248 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_loc_assign_2_fu_824_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_7_loc_assign_2_reg_1263 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_830_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_reg_1268 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_843_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_reg_1273 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_6_loc_fu_851_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_6_loc_reg_1278 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_857_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_reg_1283 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_890_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_reg_1293 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_loc_fu_898_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_7_loc_reg_1298 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_904_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_reg_1303 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_364 : BOOLEAN;
    signal tmp_25_fu_551_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_26_fu_616_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_fu_681_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_fu_746_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_29_fu_811_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_876_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_31_fu_923_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_fu_943_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_s_fu_540_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_1_fu_605_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_fu_670_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_fu_735_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_4_fu_800_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_5_fu_865_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_6_fu_912_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_7_fu_932_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_432_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_8_fu_464_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_loc_assign_1_fu_468_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_15_fu_477_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_fu_495_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_9_fu_509_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_1_loc_assign_1_fu_513_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_16_fu_522_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_23_fu_536_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_fu_560_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_s_fu_574_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_loc_assign_1_fu_578_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_17_fu_587_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_24_fu_601_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_4_fu_625_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_10_fu_639_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_3_loc_assign_1_fu_643_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_18_fu_652_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_25_fu_666_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_5_fu_690_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_11_fu_704_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_4_loc_assign_1_fu_708_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_19_fu_717_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_26_fu_731_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_6_fu_755_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_12_fu_769_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_5_loc_assign_1_fu_773_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_20_fu_782_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_27_fu_796_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_7_fu_820_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_13_fu_834_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_6_loc_assign_1_fu_838_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_21_fu_847_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_28_fu_861_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_14_fu_881_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_7_loc_assign_1_fu_885_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_22_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_29_fu_908_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_30_fu_928_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115))) then
                acc_0 <= temp_s_fu_540_p2;
                acc_1_loc_reg_1068 <= acc_1_loc_fu_526_p2;
                acc_2_loc_assign_2_reg_1043 <= acc_2_loc_assign_2_fu_499_p2;
                tmp_10_reg_1058 <= tmp_10_fu_518_p1;
                tmp_18_reg_1073 <= tmp_18_fu_532_p1;
                tmp_3_reg_1048 <= tmp_3_fu_505_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                acc_0_loc_assign_2_reg_968 <= acc_0_loc_assign_2_fu_436_p2;
                tmp_reg_973 <= tmp_fu_442_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                acc_0_loc_reg_1023 <= acc_0_loc_fu_481_p2;
                acc_1_loc_assign_2_reg_998 <= acc_1_loc_assign_2_fu_454_p2;
                tmp_17_reg_1028 <= tmp_17_fu_487_p1;
                tmp_1_reg_1003 <= tmp_1_fu_460_p1;
                tmp_9_reg_1013 <= tmp_9_fu_473_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then
                acc_1 <= temp_1_fu_605_p2;
                acc_2_loc_reg_1113 <= acc_2_loc_fu_591_p2;
                acc_3_loc_assign_2_reg_1088 <= acc_3_loc_assign_2_fu_564_p2;
                tmp_11_reg_1103 <= tmp_11_fu_583_p1;
                tmp_19_reg_1118 <= tmp_19_fu_597_p1;
                tmp_4_reg_1093 <= tmp_4_fu_570_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then
                acc_2 <= temp_2_fu_670_p2;
                acc_3_loc_reg_1158 <= acc_3_loc_fu_656_p2;
                acc_4_loc_assign_2_reg_1133 <= acc_4_loc_assign_2_fu_629_p2;
                tmp_12_reg_1148 <= tmp_12_fu_648_p1;
                tmp_20_reg_1163 <= tmp_20_fu_662_p1;
                tmp_5_reg_1138 <= tmp_5_fu_635_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7))) then
                acc_3 <= temp_3_fu_735_p2;
                acc_4_loc_reg_1203 <= acc_4_loc_fu_721_p2;
                acc_5_loc_assign_2_reg_1178 <= acc_5_loc_assign_2_fu_694_p2;
                tmp_13_reg_1193 <= tmp_13_fu_713_p1;
                tmp_21_reg_1208 <= tmp_21_fu_727_p1;
                tmp_6_reg_1183 <= tmp_6_fu_700_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then
                acc_4 <= temp_4_fu_800_p2;
                acc_5_loc_reg_1243 <= acc_5_loc_fu_786_p2;
                acc_6_loc_assign_2_reg_1223 <= acc_6_loc_assign_2_fu_759_p2;
                tmp_14_reg_1233 <= tmp_14_fu_778_p1;
                tmp_22_reg_1248 <= tmp_22_fu_792_p1;
                tmp_7_reg_1228 <= tmp_7_fu_765_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then
                acc_5 <= temp_5_fu_865_p2;
                acc_6_loc_reg_1278 <= acc_6_loc_fu_851_p2;
                acc_7_loc_assign_2_reg_1263 <= acc_7_loc_assign_2_fu_824_p2;
                tmp_15_reg_1273 <= tmp_15_fu_843_p1;
                tmp_23_reg_1283 <= tmp_23_fu_857_p1;
                tmp_8_reg_1268 <= tmp_8_fu_830_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then
                acc_6 <= temp_6_fu_912_p2;
                acc_7_loc_reg_1298 <= acc_7_loc_fu_898_p2;
                tmp_16_reg_1293 <= tmp_16_fu_890_p1;
                tmp_24_reg_1303 <= tmp_24_fu_904_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then
                acc_7 <= temp_7_fu_932_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)))) then
                reg_412 <= d_i_0_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)))) then
                reg_416 <= d_i_0_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)))) then
                reg_420 <= d_i_1_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)))) then
                reg_424 <= d_i_1_q1;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_sig_bdd_115)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                if (not(ap_sig_bdd_115)) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                if (not(ap_sig_bdd_115)) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not(ap_sig_bdd_115)) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not(ap_sig_bdd_115)) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                if (not(ap_sig_bdd_115)) then
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st10_fsm_9 => 
                if (not(ap_sig_bdd_115)) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                if (not(ap_sig_bdd_115)) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st12_fsm_11 => 
                if (not(ap_sig_bdd_115)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    acc_0_loc_assign_1_fu_468_p2 <= std_logic_vector(signed(acc_0_loc_assign_2_reg_968) + signed(tmp_2_8_fu_464_p1));
    acc_0_loc_assign_2_fu_436_p2 <= std_logic_vector(unsigned(acc_0) + unsigned(tmp_2_fu_432_p1));
    acc_0_loc_fu_481_p2 <= std_logic_vector(signed(acc_0_loc_assign_1_fu_468_p2) + signed(tmp_2_15_fu_477_p1));
    acc_1_loc_assign_1_fu_513_p2 <= std_logic_vector(signed(acc_1_loc_assign_2_reg_998) + signed(tmp_2_9_fu_509_p1));
    acc_1_loc_assign_2_fu_454_p2 <= std_logic_vector(unsigned(acc_1) + unsigned(tmp_2_1_fu_450_p1));
    acc_1_loc_fu_526_p2 <= std_logic_vector(signed(acc_1_loc_assign_1_fu_513_p2) + signed(tmp_2_16_fu_522_p1));
    acc_2_loc_assign_1_fu_578_p2 <= std_logic_vector(signed(acc_2_loc_assign_2_reg_1043) + signed(tmp_2_s_fu_574_p1));
    acc_2_loc_assign_2_fu_499_p2 <= std_logic_vector(unsigned(acc_2) + unsigned(tmp_2_2_fu_495_p1));
    acc_2_loc_fu_591_p2 <= std_logic_vector(signed(acc_2_loc_assign_1_fu_578_p2) + signed(tmp_2_17_fu_587_p1));
    acc_3_loc_assign_1_fu_643_p2 <= std_logic_vector(signed(acc_3_loc_assign_2_reg_1088) + signed(tmp_2_10_fu_639_p1));
    acc_3_loc_assign_2_fu_564_p2 <= std_logic_vector(unsigned(acc_3) + unsigned(tmp_2_3_fu_560_p1));
    acc_3_loc_fu_656_p2 <= std_logic_vector(signed(acc_3_loc_assign_1_fu_643_p2) + signed(tmp_2_18_fu_652_p1));
    acc_4_loc_assign_1_fu_708_p2 <= std_logic_vector(signed(acc_4_loc_assign_2_reg_1133) + signed(tmp_2_11_fu_704_p1));
    acc_4_loc_assign_2_fu_629_p2 <= std_logic_vector(unsigned(acc_4) + unsigned(tmp_2_4_fu_625_p1));
    acc_4_loc_fu_721_p2 <= std_logic_vector(signed(acc_4_loc_assign_1_fu_708_p2) + signed(tmp_2_19_fu_717_p1));
    acc_5_loc_assign_1_fu_773_p2 <= std_logic_vector(signed(acc_5_loc_assign_2_reg_1178) + signed(tmp_2_12_fu_769_p1));
    acc_5_loc_assign_2_fu_694_p2 <= std_logic_vector(unsigned(acc_5) + unsigned(tmp_2_5_fu_690_p1));
    acc_5_loc_fu_786_p2 <= std_logic_vector(signed(acc_5_loc_assign_1_fu_773_p2) + signed(tmp_2_20_fu_782_p1));
    acc_6_loc_assign_1_fu_838_p2 <= std_logic_vector(signed(acc_6_loc_assign_2_reg_1223) + signed(tmp_2_13_fu_834_p1));
    acc_6_loc_assign_2_fu_759_p2 <= std_logic_vector(unsigned(acc_6) + unsigned(tmp_2_6_fu_755_p1));
    acc_6_loc_fu_851_p2 <= std_logic_vector(signed(acc_6_loc_assign_1_fu_838_p2) + signed(tmp_2_21_fu_847_p1));
    acc_7_loc_assign_1_fu_885_p2 <= std_logic_vector(signed(acc_7_loc_assign_2_reg_1263) + signed(tmp_2_14_fu_881_p1));
    acc_7_loc_assign_2_fu_824_p2 <= std_logic_vector(unsigned(acc_7) + unsigned(tmp_2_7_fu_820_p1));
    acc_7_loc_fu_898_p2 <= std_logic_vector(signed(acc_7_loc_assign_1_fu_885_p2) + signed(tmp_2_22_fu_894_p1));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_sig_bdd_115, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_bdd_115, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_106 assign process. --
    ap_sig_bdd_106_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_106 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_115 assign process. --
    ap_sig_bdd_115_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n)
    begin
                ap_sig_bdd_115 <= ((d_o_0_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_3_full_n = ap_const_logic_0));
    end process;


    -- ap_sig_bdd_124 assign process. --
    ap_sig_bdd_124_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_124 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_133 assign process. --
    ap_sig_bdd_133_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_133 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_142 assign process. --
    ap_sig_bdd_142_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_142 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_151 assign process. --
    ap_sig_bdd_151_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_151 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_160 assign process. --
    ap_sig_bdd_160_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_160 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_178 assign process. --
    ap_sig_bdd_178_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_178 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_28 assign process. --
    ap_sig_bdd_28_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_28 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_364 assign process. --
    ap_sig_bdd_364_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_364 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_83 assign process. --
    ap_sig_bdd_83_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_83 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_90 assign process. --
    ap_sig_bdd_90_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_90 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_98 assign process. --
    ap_sig_bdd_98_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_98 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_cseq_ST_st10_fsm_9 assign process. --
    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_bdd_160)
    begin
        if (ap_sig_bdd_160) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_10 assign process. --
    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_bdd_178)
    begin
        if (ap_sig_bdd_178) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_11 assign process. --
    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_bdd_364)
    begin
        if (ap_sig_bdd_364) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_28)
    begin
        if (ap_sig_bdd_28) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_83)
    begin
        if (ap_sig_bdd_83) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_90)
    begin
        if (ap_sig_bdd_90) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_98)
    begin
        if (ap_sig_bdd_98) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_106)
    begin
        if (ap_sig_bdd_106) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_124)
    begin
        if (ap_sig_bdd_124) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_133)
    begin
        if (ap_sig_bdd_133) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_142)
    begin
        if (ap_sig_bdd_142) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_8 assign process. --
    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_bdd_151)
    begin
        if (ap_sig_bdd_151) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_0_address0 assign process. --
    d_i_0_address0_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            d_i_0_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            d_i_0_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            d_i_0_address0 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            d_i_0_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            d_i_0_address0 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            d_i_0_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            d_i_0_address0 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            d_i_0_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
            d_i_0_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            d_i_0_address0 <= "XXXX";
        end if; 
    end process;


    -- d_i_0_address1 assign process. --
    d_i_0_address1_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            d_i_0_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            d_i_0_address1 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            d_i_0_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            d_i_0_address1 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            d_i_0_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            d_i_0_address1 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            d_i_0_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        else 
            d_i_0_address1 <= "XXXX";
        end if; 
    end process;


    -- d_i_0_ce0 assign process. --
    d_i_0_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
            d_i_0_ce0 <= ap_const_logic_1;
        else 
            d_i_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_0_ce1 assign process. --
    d_i_0_ce1_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)))) then 
            d_i_0_ce1 <= ap_const_logic_1;
        else 
            d_i_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_1_address0 assign process. --
    d_i_1_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            d_i_1_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            d_i_1_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            d_i_1_address0 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            d_i_1_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            d_i_1_address0 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            d_i_1_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            d_i_1_address0 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            d_i_1_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            d_i_1_address0 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            d_i_1_address0 <= "XXXX";
        end if; 
    end process;


    -- d_i_1_address1 assign process. --
    d_i_1_address1_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            d_i_1_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            d_i_1_address1 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            d_i_1_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            d_i_1_address1 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            d_i_1_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            d_i_1_address1 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            d_i_1_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        else 
            d_i_1_address1 <= "XXXX";
        end if; 
    end process;


    -- d_i_1_ce0 assign process. --
    d_i_1_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)))) then 
            d_i_1_ce0 <= ap_const_logic_1;
        else 
            d_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_1_ce1 assign process. --
    d_i_1_ce1_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)))) then 
            d_i_1_ce1 <= ap_const_logic_1;
        else 
            d_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- d_o_0_din assign process. --
    d_o_0_din_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10, tmp_reg_973, tmp_1_reg_1003, tmp_3_reg_1048, tmp_4_reg_1093, tmp_5_reg_1138, tmp_6_reg_1183, tmp_7_reg_1228, tmp_8_reg_1268, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if (not(ap_sig_bdd_115)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                d_o_0_din <= tmp_8_reg_1268;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                d_o_0_din <= tmp_7_reg_1228;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                d_o_0_din <= tmp_6_reg_1183;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                d_o_0_din <= tmp_5_reg_1138;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                d_o_0_din <= tmp_4_reg_1093;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                d_o_0_din <= tmp_3_reg_1048;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                d_o_0_din <= tmp_1_reg_1003;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                d_o_0_din <= tmp_reg_973;
            else 
                d_o_0_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_0_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- d_o_0_write assign process. --
    d_o_0_write_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)))) then 
            d_o_0_write <= ap_const_logic_1;
        else 
            d_o_0_write <= ap_const_logic_0;
        end if; 
    end process;


    -- d_o_1_din assign process. --
    d_o_1_din_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10, tmp_9_reg_1013, tmp_10_reg_1058, tmp_11_reg_1103, tmp_12_reg_1148, tmp_13_reg_1193, tmp_14_reg_1233, tmp_15_reg_1273, tmp_16_reg_1293, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if (not(ap_sig_bdd_115)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                d_o_1_din <= tmp_16_reg_1293;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                d_o_1_din <= tmp_15_reg_1273;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                d_o_1_din <= tmp_14_reg_1233;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                d_o_1_din <= tmp_13_reg_1193;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                d_o_1_din <= tmp_12_reg_1148;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                d_o_1_din <= tmp_11_reg_1103;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                d_o_1_din <= tmp_10_reg_1058;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                d_o_1_din <= tmp_9_reg_1013;
            else 
                d_o_1_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_1_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- d_o_1_write assign process. --
    d_o_1_write_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)))) then 
            d_o_1_write <= ap_const_logic_1;
        else 
            d_o_1_write <= ap_const_logic_0;
        end if; 
    end process;


    -- d_o_2_din assign process. --
    d_o_2_din_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10, tmp_17_reg_1028, tmp_18_reg_1073, tmp_19_reg_1118, tmp_20_reg_1163, tmp_21_reg_1208, tmp_22_reg_1248, tmp_23_reg_1283, tmp_24_reg_1303, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if (not(ap_sig_bdd_115)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                d_o_2_din <= tmp_24_reg_1303;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                d_o_2_din <= tmp_23_reg_1283;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                d_o_2_din <= tmp_22_reg_1248;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                d_o_2_din <= tmp_21_reg_1208;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                d_o_2_din <= tmp_20_reg_1163;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                d_o_2_din <= tmp_19_reg_1118;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                d_o_2_din <= tmp_18_reg_1073;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                d_o_2_din <= tmp_17_reg_1028;
            else 
                d_o_2_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_2_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- d_o_2_write assign process. --
    d_o_2_write_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)))) then 
            d_o_2_write <= ap_const_logic_1;
        else 
            d_o_2_write <= ap_const_logic_0;
        end if; 
    end process;


    -- d_o_3_din assign process. --
    d_o_3_din_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11, tmp_25_fu_551_p1, tmp_26_fu_616_p1, tmp_27_fu_681_p1, tmp_28_fu_746_p1, tmp_29_fu_811_p1, tmp_30_fu_876_p1, tmp_31_fu_923_p1, tmp_32_fu_943_p1)
    begin
        if (not(ap_sig_bdd_115)) then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
                d_o_3_din <= tmp_32_fu_943_p1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                d_o_3_din <= tmp_31_fu_923_p1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                d_o_3_din <= tmp_30_fu_876_p1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                d_o_3_din <= tmp_29_fu_811_p1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
                d_o_3_din <= tmp_28_fu_746_p1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                d_o_3_din <= tmp_27_fu_681_p1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                d_o_3_din <= tmp_26_fu_616_p1;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                d_o_3_din <= tmp_25_fu_551_p1;
            else 
                d_o_3_din <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            d_o_3_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- d_o_3_write assign process. --
    d_o_3_write_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4, ap_sig_bdd_115, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not(ap_sig_bdd_115)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) or (not(ap_sig_bdd_115) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)))) then 
            d_o_3_write <= ap_const_logic_1;
        else 
            d_o_3_write <= ap_const_logic_0;
        end if; 
    end process;

    temp_1_fu_605_p2 <= std_logic_vector(signed(acc_1_loc_reg_1068) + signed(tmp_2_24_fu_601_p1));
    temp_2_fu_670_p2 <= std_logic_vector(signed(acc_2_loc_reg_1113) + signed(tmp_2_25_fu_666_p1));
    temp_3_fu_735_p2 <= std_logic_vector(signed(acc_3_loc_reg_1158) + signed(tmp_2_26_fu_731_p1));
    temp_4_fu_800_p2 <= std_logic_vector(signed(acc_4_loc_reg_1203) + signed(tmp_2_27_fu_796_p1));
    temp_5_fu_865_p2 <= std_logic_vector(signed(acc_5_loc_reg_1243) + signed(tmp_2_28_fu_861_p1));
    temp_6_fu_912_p2 <= std_logic_vector(signed(acc_6_loc_reg_1278) + signed(tmp_2_29_fu_908_p1));
    temp_7_fu_932_p2 <= std_logic_vector(signed(acc_7_loc_reg_1298) + signed(tmp_2_30_fu_928_p1));
    temp_s_fu_540_p2 <= std_logic_vector(signed(acc_0_loc_reg_1023) + signed(tmp_2_23_fu_536_p1));
    tmp_10_fu_518_p1 <= acc_1_loc_assign_1_fu_513_p2(16 - 1 downto 0);
    tmp_11_fu_583_p1 <= acc_2_loc_assign_1_fu_578_p2(16 - 1 downto 0);
    tmp_12_fu_648_p1 <= acc_3_loc_assign_1_fu_643_p2(16 - 1 downto 0);
    tmp_13_fu_713_p1 <= acc_4_loc_assign_1_fu_708_p2(16 - 1 downto 0);
    tmp_14_fu_778_p1 <= acc_5_loc_assign_1_fu_773_p2(16 - 1 downto 0);
    tmp_15_fu_843_p1 <= acc_6_loc_assign_1_fu_838_p2(16 - 1 downto 0);
    tmp_16_fu_890_p1 <= acc_7_loc_assign_1_fu_885_p2(16 - 1 downto 0);
    tmp_17_fu_487_p1 <= acc_0_loc_fu_481_p2(16 - 1 downto 0);
    tmp_18_fu_532_p1 <= acc_1_loc_fu_526_p2(16 - 1 downto 0);
    tmp_19_fu_597_p1 <= acc_2_loc_fu_591_p2(16 - 1 downto 0);
    tmp_1_fu_460_p1 <= acc_1_loc_assign_2_fu_454_p2(16 - 1 downto 0);
    tmp_20_fu_662_p1 <= acc_3_loc_fu_656_p2(16 - 1 downto 0);
    tmp_21_fu_727_p1 <= acc_4_loc_fu_721_p2(16 - 1 downto 0);
    tmp_22_fu_792_p1 <= acc_5_loc_fu_786_p2(16 - 1 downto 0);
    tmp_23_fu_857_p1 <= acc_6_loc_fu_851_p2(16 - 1 downto 0);
    tmp_24_fu_904_p1 <= acc_7_loc_fu_898_p2(16 - 1 downto 0);
    tmp_25_fu_551_p1 <= temp_s_fu_540_p2(16 - 1 downto 0);
    tmp_26_fu_616_p1 <= temp_1_fu_605_p2(16 - 1 downto 0);
    tmp_27_fu_681_p1 <= temp_2_fu_670_p2(16 - 1 downto 0);
    tmp_28_fu_746_p1 <= temp_3_fu_735_p2(16 - 1 downto 0);
    tmp_29_fu_811_p1 <= temp_4_fu_800_p2(16 - 1 downto 0);
        tmp_2_10_fu_639_p1 <= std_logic_vector(resize(signed(reg_416),32));

        tmp_2_11_fu_704_p1 <= std_logic_vector(resize(signed(reg_416),32));

        tmp_2_12_fu_769_p1 <= std_logic_vector(resize(signed(reg_416),32));

        tmp_2_13_fu_834_p1 <= std_logic_vector(resize(signed(reg_416),32));

        tmp_2_14_fu_881_p1 <= std_logic_vector(resize(signed(reg_412),32));

        tmp_2_15_fu_477_p1 <= std_logic_vector(resize(signed(reg_420),32));

        tmp_2_16_fu_522_p1 <= std_logic_vector(resize(signed(reg_420),32));

        tmp_2_17_fu_587_p1 <= std_logic_vector(resize(signed(reg_420),32));

        tmp_2_18_fu_652_p1 <= std_logic_vector(resize(signed(reg_420),32));

        tmp_2_19_fu_717_p1 <= std_logic_vector(resize(signed(reg_420),32));

        tmp_2_1_fu_450_p1 <= std_logic_vector(resize(signed(reg_412),32));

        tmp_2_20_fu_782_p1 <= std_logic_vector(resize(signed(reg_420),32));

        tmp_2_21_fu_847_p1 <= std_logic_vector(resize(signed(reg_420),32));

        tmp_2_22_fu_894_p1 <= std_logic_vector(resize(signed(reg_420),32));

        tmp_2_23_fu_536_p1 <= std_logic_vector(resize(signed(reg_424),32));

        tmp_2_24_fu_601_p1 <= std_logic_vector(resize(signed(reg_424),32));

        tmp_2_25_fu_666_p1 <= std_logic_vector(resize(signed(reg_424),32));

        tmp_2_26_fu_731_p1 <= std_logic_vector(resize(signed(reg_424),32));

        tmp_2_27_fu_796_p1 <= std_logic_vector(resize(signed(reg_424),32));

        tmp_2_28_fu_861_p1 <= std_logic_vector(resize(signed(reg_424),32));

        tmp_2_29_fu_908_p1 <= std_logic_vector(resize(signed(reg_424),32));

        tmp_2_2_fu_495_p1 <= std_logic_vector(resize(signed(reg_412),32));

        tmp_2_30_fu_928_p1 <= std_logic_vector(resize(signed(reg_420),32));

        tmp_2_3_fu_560_p1 <= std_logic_vector(resize(signed(reg_412),32));

        tmp_2_4_fu_625_p1 <= std_logic_vector(resize(signed(reg_412),32));

        tmp_2_5_fu_690_p1 <= std_logic_vector(resize(signed(reg_412),32));

        tmp_2_6_fu_755_p1 <= std_logic_vector(resize(signed(reg_412),32));

        tmp_2_7_fu_820_p1 <= std_logic_vector(resize(signed(reg_412),32));

        tmp_2_8_fu_464_p1 <= std_logic_vector(resize(signed(reg_416),32));

        tmp_2_9_fu_509_p1 <= std_logic_vector(resize(signed(reg_416),32));

        tmp_2_fu_432_p1 <= std_logic_vector(resize(signed(reg_412),32));

        tmp_2_s_fu_574_p1 <= std_logic_vector(resize(signed(reg_416),32));

    tmp_30_fu_876_p1 <= temp_5_fu_865_p2(16 - 1 downto 0);
    tmp_31_fu_923_p1 <= temp_6_fu_912_p2(16 - 1 downto 0);
    tmp_32_fu_943_p1 <= temp_7_fu_932_p2(16 - 1 downto 0);
    tmp_3_fu_505_p1 <= acc_2_loc_assign_2_fu_499_p2(16 - 1 downto 0);
    tmp_4_fu_570_p1 <= acc_3_loc_assign_2_fu_564_p2(16 - 1 downto 0);
    tmp_5_fu_635_p1 <= acc_4_loc_assign_2_fu_629_p2(16 - 1 downto 0);
    tmp_6_fu_700_p1 <= acc_5_loc_assign_2_fu_694_p2(16 - 1 downto 0);
    tmp_7_fu_765_p1 <= acc_6_loc_assign_2_fu_759_p2(16 - 1 downto 0);
    tmp_8_fu_830_p1 <= acc_7_loc_assign_2_fu_824_p2(16 - 1 downto 0);
    tmp_9_fu_473_p1 <= acc_0_loc_assign_1_fu_468_p2(16 - 1 downto 0);
    tmp_fu_442_p1 <= acc_0_loc_assign_2_fu_436_p2(16 - 1 downto 0);
end behav;
