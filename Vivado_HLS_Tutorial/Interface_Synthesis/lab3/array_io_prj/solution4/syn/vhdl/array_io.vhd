-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity array_io is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    d_o_0_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_full_n : IN STD_LOGIC;
    d_o_0_write : OUT STD_LOGIC;
    d_o_1_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_full_n : IN STD_LOGIC;
    d_o_1_write : OUT STD_LOGIC;
    d_o_2_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_full_n : IN STD_LOGIC;
    d_o_2_write : OUT STD_LOGIC;
    d_o_3_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_full_n : IN STD_LOGIC;
    d_o_3_write : OUT STD_LOGIC;
    d_o_4_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_4_full_n : IN STD_LOGIC;
    d_o_4_write : OUT STD_LOGIC;
    d_o_5_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_5_full_n : IN STD_LOGIC;
    d_o_5_write : OUT STD_LOGIC;
    d_o_6_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_6_full_n : IN STD_LOGIC;
    d_o_6_write : OUT STD_LOGIC;
    d_o_7_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_7_full_n : IN STD_LOGIC;
    d_o_7_write : OUT STD_LOGIC;
    d_o_8_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_8_full_n : IN STD_LOGIC;
    d_o_8_write : OUT STD_LOGIC;
    d_o_9_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_9_full_n : IN STD_LOGIC;
    d_o_9_write : OUT STD_LOGIC;
    d_o_10_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_10_full_n : IN STD_LOGIC;
    d_o_10_write : OUT STD_LOGIC;
    d_o_11_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_11_full_n : IN STD_LOGIC;
    d_o_11_write : OUT STD_LOGIC;
    d_o_12_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_12_full_n : IN STD_LOGIC;
    d_o_12_write : OUT STD_LOGIC;
    d_o_13_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_13_full_n : IN STD_LOGIC;
    d_o_13_write : OUT STD_LOGIC;
    d_o_14_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_14_full_n : IN STD_LOGIC;
    d_o_14_write : OUT STD_LOGIC;
    d_o_15_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_15_full_n : IN STD_LOGIC;
    d_o_15_write : OUT STD_LOGIC;
    d_o_16_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_16_full_n : IN STD_LOGIC;
    d_o_16_write : OUT STD_LOGIC;
    d_o_17_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_17_full_n : IN STD_LOGIC;
    d_o_17_write : OUT STD_LOGIC;
    d_o_18_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_18_full_n : IN STD_LOGIC;
    d_o_18_write : OUT STD_LOGIC;
    d_o_19_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_19_full_n : IN STD_LOGIC;
    d_o_19_write : OUT STD_LOGIC;
    d_o_20_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_20_full_n : IN STD_LOGIC;
    d_o_20_write : OUT STD_LOGIC;
    d_o_21_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_21_full_n : IN STD_LOGIC;
    d_o_21_write : OUT STD_LOGIC;
    d_o_22_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_22_full_n : IN STD_LOGIC;
    d_o_22_write : OUT STD_LOGIC;
    d_o_23_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_23_full_n : IN STD_LOGIC;
    d_o_23_write : OUT STD_LOGIC;
    d_o_24_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_24_full_n : IN STD_LOGIC;
    d_o_24_write : OUT STD_LOGIC;
    d_o_25_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_25_full_n : IN STD_LOGIC;
    d_o_25_write : OUT STD_LOGIC;
    d_o_26_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_26_full_n : IN STD_LOGIC;
    d_o_26_write : OUT STD_LOGIC;
    d_o_27_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_27_full_n : IN STD_LOGIC;
    d_o_27_write : OUT STD_LOGIC;
    d_o_28_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_28_full_n : IN STD_LOGIC;
    d_o_28_write : OUT STD_LOGIC;
    d_o_29_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_29_full_n : IN STD_LOGIC;
    d_o_29_write : OUT STD_LOGIC;
    d_o_30_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_30_full_n : IN STD_LOGIC;
    d_o_30_write : OUT STD_LOGIC;
    d_o_31_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_31_full_n : IN STD_LOGIC;
    d_o_31_write : OUT STD_LOGIC;
    d_i_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_4 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_6 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_7 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_8 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_9 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_10 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_11 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_12 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_13 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_14 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_15 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_16 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_17 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_18 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_19 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_20 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_21 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_22 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_23 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_24 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_25 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_26 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_27 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_28 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_29 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_30 : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_31 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of array_io is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "array_io,hls_ip_2015_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.400000,HLS_SYN_LAT=2,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1155,HLS_SYN_LUT=1026}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_19 : BOOLEAN;
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_0_loc_assign_2_fu_586_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_loc_assign_2_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_592_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_reg_1103 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_loc_assign_2_fu_604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_1_loc_assign_2_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_610_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_reg_1113 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_loc_assign_2_fu_622_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_loc_assign_2_reg_1118 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_628_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_reg_1123 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_loc_assign_2_fu_640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_3_loc_assign_2_reg_1128 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_646_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_reg_1133 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_loc_assign_2_fu_658_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_4_loc_assign_2_reg_1138 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_664_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_1143 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_loc_assign_2_fu_676_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_5_loc_assign_2_reg_1148 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_682_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_reg_1153 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_6_loc_assign_2_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_6_loc_assign_2_reg_1158 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_700_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_reg_1163 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_loc_assign_2_fu_712_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_7_loc_assign_2_reg_1168 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_718_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_reg_1173 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_731_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_reg_1178 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_236 : BOOLEAN;
    signal tmp_10_fu_744_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_reg_1183 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_757_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_reg_1188 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_770_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_reg_1193 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_783_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_reg_1198 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_796_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_reg_1203 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_809_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_reg_1208 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_822_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_reg_1213 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_0_loc_fu_830_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_loc_reg_1218 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_836_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_reg_1223 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_1_loc_fu_844_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_1_loc_reg_1228 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_850_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_reg_1233 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_2_loc_fu_858_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_loc_reg_1238 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_864_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_reg_1243 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_3_loc_fu_872_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_3_loc_reg_1248 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_878_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_reg_1253 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_4_loc_fu_886_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_4_loc_reg_1258 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_892_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_reg_1263 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_5_loc_fu_900_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_5_loc_reg_1268 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_906_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_reg_1273 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_6_loc_fu_914_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_6_loc_reg_1278 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_920_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_reg_1283 : STD_LOGIC_VECTOR (15 downto 0);
    signal acc_7_loc_fu_928_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_7_loc_reg_1288 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_934_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_24_reg_1293 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_290 : BOOLEAN;
    signal ap_sig_bdd_355 : BOOLEAN;
    signal temp_s_fu_942_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_1_fu_962_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_2_fu_982_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_3_fu_1002_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_4_fu_1022_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_5_fu_1042_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_6_fu_1062_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_7_fu_1082_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_fu_600_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_fu_618_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_fu_636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_4_fu_654_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_5_fu_672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_6_fu_690_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_7_fu_708_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_8_fu_722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_0_loc_assign_1_fu_726_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_9_fu_735_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_1_loc_assign_1_fu_739_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_s_fu_748_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_2_loc_assign_1_fu_752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_10_fu_761_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_3_loc_assign_1_fu_765_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_11_fu_774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_4_loc_assign_1_fu_778_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_12_fu_787_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_5_loc_assign_1_fu_791_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_13_fu_800_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_6_loc_assign_1_fu_804_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_14_fu_813_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_7_loc_assign_1_fu_817_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_15_fu_826_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_16_fu_840_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_17_fu_854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_18_fu_868_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_19_fu_882_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_20_fu_896_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_21_fu_910_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_22_fu_924_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_23_fu_938_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_24_fu_958_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_25_fu_978_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_26_fu_998_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_27_fu_1018_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_28_fu_1038_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_29_fu_1058_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_30_fu_1078_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then
                acc_0 <= temp_s_fu_942_p2;
                acc_1 <= temp_1_fu_962_p2;
                acc_2 <= temp_2_fu_982_p2;
                acc_3 <= temp_3_fu_1002_p2;
                acc_4 <= temp_4_fu_1022_p2;
                acc_5 <= temp_5_fu_1042_p2;
                acc_6 <= temp_6_fu_1062_p2;
                acc_7 <= temp_7_fu_1082_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                acc_0_loc_assign_2_reg_1098 <= acc_0_loc_assign_2_fu_586_p2;
                acc_1_loc_assign_2_reg_1108 <= acc_1_loc_assign_2_fu_604_p2;
                acc_2_loc_assign_2_reg_1118 <= acc_2_loc_assign_2_fu_622_p2;
                acc_3_loc_assign_2_reg_1128 <= acc_3_loc_assign_2_fu_640_p2;
                acc_4_loc_assign_2_reg_1138 <= acc_4_loc_assign_2_fu_658_p2;
                acc_5_loc_assign_2_reg_1148 <= acc_5_loc_assign_2_fu_676_p2;
                acc_6_loc_assign_2_reg_1158 <= acc_6_loc_assign_2_fu_694_p2;
                acc_7_loc_assign_2_reg_1168 <= acc_7_loc_assign_2_fu_712_p2;
                tmp_1_reg_1113 <= tmp_1_fu_610_p1;
                tmp_3_reg_1123 <= tmp_3_fu_628_p1;
                tmp_4_reg_1133 <= tmp_4_fu_646_p1;
                tmp_5_reg_1143 <= tmp_5_fu_664_p1;
                tmp_6_reg_1153 <= tmp_6_fu_682_p1;
                tmp_7_reg_1163 <= tmp_7_fu_700_p1;
                tmp_8_reg_1173 <= tmp_8_fu_718_p1;
                tmp_reg_1103 <= tmp_fu_592_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                acc_0_loc_reg_1218 <= acc_0_loc_fu_830_p2;
                acc_1_loc_reg_1228 <= acc_1_loc_fu_844_p2;
                acc_2_loc_reg_1238 <= acc_2_loc_fu_858_p2;
                acc_3_loc_reg_1248 <= acc_3_loc_fu_872_p2;
                acc_4_loc_reg_1258 <= acc_4_loc_fu_886_p2;
                acc_5_loc_reg_1268 <= acc_5_loc_fu_900_p2;
                acc_6_loc_reg_1278 <= acc_6_loc_fu_914_p2;
                acc_7_loc_reg_1288 <= acc_7_loc_fu_928_p2;
                tmp_10_reg_1183 <= tmp_10_fu_744_p1;
                tmp_11_reg_1188 <= tmp_11_fu_757_p1;
                tmp_12_reg_1193 <= tmp_12_fu_770_p1;
                tmp_13_reg_1198 <= tmp_13_fu_783_p1;
                tmp_14_reg_1203 <= tmp_14_fu_796_p1;
                tmp_15_reg_1208 <= tmp_15_fu_809_p1;
                tmp_16_reg_1213 <= tmp_16_fu_822_p1;
                tmp_17_reg_1223 <= tmp_17_fu_836_p1;
                tmp_18_reg_1233 <= tmp_18_fu_850_p1;
                tmp_19_reg_1243 <= tmp_19_fu_864_p1;
                tmp_20_reg_1253 <= tmp_20_fu_878_p1;
                tmp_21_reg_1263 <= tmp_21_fu_892_p1;
                tmp_22_reg_1273 <= tmp_22_fu_906_p1;
                tmp_23_reg_1283 <= tmp_23_fu_920_p1;
                tmp_24_reg_1293 <= tmp_24_fu_934_p1;
                tmp_9_reg_1178 <= tmp_9_fu_731_p1;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_sig_bdd_355)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                if (not(ap_sig_bdd_355)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    acc_0_loc_assign_1_fu_726_p2 <= std_logic_vector(signed(acc_0_loc_assign_2_reg_1098) + signed(tmp_2_8_fu_722_p1));
    acc_0_loc_assign_2_fu_586_p2 <= std_logic_vector(unsigned(acc_0) + unsigned(tmp_2_fu_582_p1));
    acc_0_loc_fu_830_p2 <= std_logic_vector(signed(acc_0_loc_assign_1_fu_726_p2) + signed(tmp_2_15_fu_826_p1));
    acc_1_loc_assign_1_fu_739_p2 <= std_logic_vector(signed(acc_1_loc_assign_2_reg_1108) + signed(tmp_2_9_fu_735_p1));
    acc_1_loc_assign_2_fu_604_p2 <= std_logic_vector(unsigned(acc_1) + unsigned(tmp_2_1_fu_600_p1));
    acc_1_loc_fu_844_p2 <= std_logic_vector(signed(acc_1_loc_assign_1_fu_739_p2) + signed(tmp_2_16_fu_840_p1));
    acc_2_loc_assign_1_fu_752_p2 <= std_logic_vector(signed(acc_2_loc_assign_2_reg_1118) + signed(tmp_2_s_fu_748_p1));
    acc_2_loc_assign_2_fu_622_p2 <= std_logic_vector(unsigned(acc_2) + unsigned(tmp_2_2_fu_618_p1));
    acc_2_loc_fu_858_p2 <= std_logic_vector(signed(acc_2_loc_assign_1_fu_752_p2) + signed(tmp_2_17_fu_854_p1));
    acc_3_loc_assign_1_fu_765_p2 <= std_logic_vector(signed(acc_3_loc_assign_2_reg_1128) + signed(tmp_2_10_fu_761_p1));
    acc_3_loc_assign_2_fu_640_p2 <= std_logic_vector(unsigned(acc_3) + unsigned(tmp_2_3_fu_636_p1));
    acc_3_loc_fu_872_p2 <= std_logic_vector(signed(acc_3_loc_assign_1_fu_765_p2) + signed(tmp_2_18_fu_868_p1));
    acc_4_loc_assign_1_fu_778_p2 <= std_logic_vector(signed(acc_4_loc_assign_2_reg_1138) + signed(tmp_2_11_fu_774_p1));
    acc_4_loc_assign_2_fu_658_p2 <= std_logic_vector(unsigned(acc_4) + unsigned(tmp_2_4_fu_654_p1));
    acc_4_loc_fu_886_p2 <= std_logic_vector(signed(acc_4_loc_assign_1_fu_778_p2) + signed(tmp_2_19_fu_882_p1));
    acc_5_loc_assign_1_fu_791_p2 <= std_logic_vector(signed(acc_5_loc_assign_2_reg_1148) + signed(tmp_2_12_fu_787_p1));
    acc_5_loc_assign_2_fu_676_p2 <= std_logic_vector(unsigned(acc_5) + unsigned(tmp_2_5_fu_672_p1));
    acc_5_loc_fu_900_p2 <= std_logic_vector(signed(acc_5_loc_assign_1_fu_791_p2) + signed(tmp_2_20_fu_896_p1));
    acc_6_loc_assign_1_fu_804_p2 <= std_logic_vector(signed(acc_6_loc_assign_2_reg_1158) + signed(tmp_2_13_fu_800_p1));
    acc_6_loc_assign_2_fu_694_p2 <= std_logic_vector(unsigned(acc_6) + unsigned(tmp_2_6_fu_690_p1));
    acc_6_loc_fu_914_p2 <= std_logic_vector(signed(acc_6_loc_assign_1_fu_804_p2) + signed(tmp_2_21_fu_910_p1));
    acc_7_loc_assign_1_fu_817_p2 <= std_logic_vector(signed(acc_7_loc_assign_2_reg_1168) + signed(tmp_2_14_fu_813_p1));
    acc_7_loc_assign_2_fu_712_p2 <= std_logic_vector(unsigned(acc_7) + unsigned(tmp_2_7_fu_708_p1));
    acc_7_loc_fu_928_p2 <= std_logic_vector(signed(acc_7_loc_assign_1_fu_817_p2) + signed(tmp_2_22_fu_924_p1));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_19 assign process. --
    ap_sig_bdd_19_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_19 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_236 assign process. --
    ap_sig_bdd_236_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_236 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_290 assign process. --
    ap_sig_bdd_290_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_290 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_355 assign process. --
    ap_sig_bdd_355_assign_proc : process(d_o_0_full_n, d_o_1_full_n, d_o_2_full_n, d_o_3_full_n, d_o_4_full_n, d_o_5_full_n, d_o_6_full_n, d_o_7_full_n, d_o_8_full_n, d_o_9_full_n, d_o_10_full_n, d_o_11_full_n, d_o_12_full_n, d_o_13_full_n, d_o_14_full_n, d_o_15_full_n, d_o_16_full_n, d_o_17_full_n, d_o_18_full_n, d_o_19_full_n, d_o_20_full_n, d_o_21_full_n, d_o_22_full_n, d_o_23_full_n, d_o_24_full_n, d_o_25_full_n, d_o_26_full_n, d_o_27_full_n, d_o_28_full_n, d_o_29_full_n, d_o_30_full_n, d_o_31_full_n)
    begin
                ap_sig_bdd_355 <= ((d_o_0_full_n = ap_const_logic_0) or (d_o_1_full_n = ap_const_logic_0) or (d_o_2_full_n = ap_const_logic_0) or (d_o_3_full_n = ap_const_logic_0) or (d_o_4_full_n = ap_const_logic_0) or (d_o_5_full_n = ap_const_logic_0) or (d_o_6_full_n = ap_const_logic_0) or (d_o_7_full_n = ap_const_logic_0) or (d_o_8_full_n = ap_const_logic_0) or (d_o_9_full_n = ap_const_logic_0) or (d_o_10_full_n = ap_const_logic_0) or (d_o_11_full_n = ap_const_logic_0) or (d_o_12_full_n = ap_const_logic_0) or (d_o_13_full_n = ap_const_logic_0) or (d_o_14_full_n = ap_const_logic_0) or (d_o_15_full_n = ap_const_logic_0) or (d_o_16_full_n = ap_const_logic_0) or (d_o_17_full_n = ap_const_logic_0) or (d_o_18_full_n = ap_const_logic_0) or (d_o_19_full_n = ap_const_logic_0) or (d_o_20_full_n = ap_const_logic_0) or (d_o_21_full_n = ap_const_logic_0) or (d_o_22_full_n = ap_const_logic_0) or (d_o_23_full_n = ap_const_logic_0) or (d_o_24_full_n = ap_const_logic_0) or (d_o_25_full_n = ap_const_logic_0) or (d_o_26_full_n = ap_const_logic_0) or (d_o_27_full_n = ap_const_logic_0) or (d_o_28_full_n = ap_const_logic_0) or (d_o_29_full_n = ap_const_logic_0) or (d_o_30_full_n = ap_const_logic_0) or (d_o_31_full_n = ap_const_logic_0));
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_19)
    begin
        if (ap_sig_bdd_19) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_236)
    begin
        if (ap_sig_bdd_236) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_290)
    begin
        if (ap_sig_bdd_290) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    d_o_0_din <= tmp_reg_1103;

    -- d_o_0_write assign process. --
    d_o_0_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_0_write <= ap_const_logic_1;
        else 
            d_o_0_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_10_din <= tmp_11_reg_1188;

    -- d_o_10_write assign process. --
    d_o_10_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_10_write <= ap_const_logic_1;
        else 
            d_o_10_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_11_din <= tmp_12_reg_1193;

    -- d_o_11_write assign process. --
    d_o_11_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_11_write <= ap_const_logic_1;
        else 
            d_o_11_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_12_din <= tmp_13_reg_1198;

    -- d_o_12_write assign process. --
    d_o_12_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_12_write <= ap_const_logic_1;
        else 
            d_o_12_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_13_din <= tmp_14_reg_1203;

    -- d_o_13_write assign process. --
    d_o_13_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_13_write <= ap_const_logic_1;
        else 
            d_o_13_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_14_din <= tmp_15_reg_1208;

    -- d_o_14_write assign process. --
    d_o_14_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_14_write <= ap_const_logic_1;
        else 
            d_o_14_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_15_din <= tmp_16_reg_1213;

    -- d_o_15_write assign process. --
    d_o_15_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_15_write <= ap_const_logic_1;
        else 
            d_o_15_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_16_din <= tmp_17_reg_1223;

    -- d_o_16_write assign process. --
    d_o_16_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_16_write <= ap_const_logic_1;
        else 
            d_o_16_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_17_din <= tmp_18_reg_1233;

    -- d_o_17_write assign process. --
    d_o_17_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_17_write <= ap_const_logic_1;
        else 
            d_o_17_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_18_din <= tmp_19_reg_1243;

    -- d_o_18_write assign process. --
    d_o_18_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_18_write <= ap_const_logic_1;
        else 
            d_o_18_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_19_din <= tmp_20_reg_1253;

    -- d_o_19_write assign process. --
    d_o_19_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_19_write <= ap_const_logic_1;
        else 
            d_o_19_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_1_din <= tmp_1_reg_1113;

    -- d_o_1_write assign process. --
    d_o_1_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_1_write <= ap_const_logic_1;
        else 
            d_o_1_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_20_din <= tmp_21_reg_1263;

    -- d_o_20_write assign process. --
    d_o_20_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_20_write <= ap_const_logic_1;
        else 
            d_o_20_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_21_din <= tmp_22_reg_1273;

    -- d_o_21_write assign process. --
    d_o_21_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_21_write <= ap_const_logic_1;
        else 
            d_o_21_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_22_din <= tmp_23_reg_1283;

    -- d_o_22_write assign process. --
    d_o_22_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_22_write <= ap_const_logic_1;
        else 
            d_o_22_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_23_din <= tmp_24_reg_1293;

    -- d_o_23_write assign process. --
    d_o_23_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_23_write <= ap_const_logic_1;
        else 
            d_o_23_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_24_din <= temp_s_fu_942_p2(16 - 1 downto 0);

    -- d_o_24_write assign process. --
    d_o_24_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_24_write <= ap_const_logic_1;
        else 
            d_o_24_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_25_din <= temp_1_fu_962_p2(16 - 1 downto 0);

    -- d_o_25_write assign process. --
    d_o_25_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_25_write <= ap_const_logic_1;
        else 
            d_o_25_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_26_din <= temp_2_fu_982_p2(16 - 1 downto 0);

    -- d_o_26_write assign process. --
    d_o_26_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_26_write <= ap_const_logic_1;
        else 
            d_o_26_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_27_din <= temp_3_fu_1002_p2(16 - 1 downto 0);

    -- d_o_27_write assign process. --
    d_o_27_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_27_write <= ap_const_logic_1;
        else 
            d_o_27_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_28_din <= temp_4_fu_1022_p2(16 - 1 downto 0);

    -- d_o_28_write assign process. --
    d_o_28_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_28_write <= ap_const_logic_1;
        else 
            d_o_28_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_29_din <= temp_5_fu_1042_p2(16 - 1 downto 0);

    -- d_o_29_write assign process. --
    d_o_29_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_29_write <= ap_const_logic_1;
        else 
            d_o_29_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_2_din <= tmp_3_reg_1123;

    -- d_o_2_write assign process. --
    d_o_2_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_2_write <= ap_const_logic_1;
        else 
            d_o_2_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_30_din <= temp_6_fu_1062_p2(16 - 1 downto 0);

    -- d_o_30_write assign process. --
    d_o_30_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_30_write <= ap_const_logic_1;
        else 
            d_o_30_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_31_din <= temp_7_fu_1082_p2(16 - 1 downto 0);

    -- d_o_31_write assign process. --
    d_o_31_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_31_write <= ap_const_logic_1;
        else 
            d_o_31_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_3_din <= tmp_4_reg_1133;

    -- d_o_3_write assign process. --
    d_o_3_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_3_write <= ap_const_logic_1;
        else 
            d_o_3_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_4_din <= tmp_5_reg_1143;

    -- d_o_4_write assign process. --
    d_o_4_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_4_write <= ap_const_logic_1;
        else 
            d_o_4_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_5_din <= tmp_6_reg_1153;

    -- d_o_5_write assign process. --
    d_o_5_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_5_write <= ap_const_logic_1;
        else 
            d_o_5_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_6_din <= tmp_7_reg_1163;

    -- d_o_6_write assign process. --
    d_o_6_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_6_write <= ap_const_logic_1;
        else 
            d_o_6_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_7_din <= tmp_8_reg_1173;

    -- d_o_7_write assign process. --
    d_o_7_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_7_write <= ap_const_logic_1;
        else 
            d_o_7_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_8_din <= tmp_9_reg_1178;

    -- d_o_8_write assign process. --
    d_o_8_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_8_write <= ap_const_logic_1;
        else 
            d_o_8_write <= ap_const_logic_0;
        end if; 
    end process;

    d_o_9_din <= tmp_10_reg_1183;

    -- d_o_9_write assign process. --
    d_o_9_write_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_355)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_355))) then 
            d_o_9_write <= ap_const_logic_1;
        else 
            d_o_9_write <= ap_const_logic_0;
        end if; 
    end process;

    temp_1_fu_962_p2 <= std_logic_vector(signed(acc_1_loc_reg_1228) + signed(tmp_2_24_fu_958_p1));
    temp_2_fu_982_p2 <= std_logic_vector(signed(acc_2_loc_reg_1238) + signed(tmp_2_25_fu_978_p1));
    temp_3_fu_1002_p2 <= std_logic_vector(signed(acc_3_loc_reg_1248) + signed(tmp_2_26_fu_998_p1));
    temp_4_fu_1022_p2 <= std_logic_vector(signed(acc_4_loc_reg_1258) + signed(tmp_2_27_fu_1018_p1));
    temp_5_fu_1042_p2 <= std_logic_vector(signed(acc_5_loc_reg_1268) + signed(tmp_2_28_fu_1038_p1));
    temp_6_fu_1062_p2 <= std_logic_vector(signed(acc_6_loc_reg_1278) + signed(tmp_2_29_fu_1058_p1));
    temp_7_fu_1082_p2 <= std_logic_vector(signed(acc_7_loc_reg_1288) + signed(tmp_2_30_fu_1078_p1));
    temp_s_fu_942_p2 <= std_logic_vector(signed(acc_0_loc_reg_1218) + signed(tmp_2_23_fu_938_p1));
    tmp_10_fu_744_p1 <= acc_1_loc_assign_1_fu_739_p2(16 - 1 downto 0);
    tmp_11_fu_757_p1 <= acc_2_loc_assign_1_fu_752_p2(16 - 1 downto 0);
    tmp_12_fu_770_p1 <= acc_3_loc_assign_1_fu_765_p2(16 - 1 downto 0);
    tmp_13_fu_783_p1 <= acc_4_loc_assign_1_fu_778_p2(16 - 1 downto 0);
    tmp_14_fu_796_p1 <= acc_5_loc_assign_1_fu_791_p2(16 - 1 downto 0);
    tmp_15_fu_809_p1 <= acc_6_loc_assign_1_fu_804_p2(16 - 1 downto 0);
    tmp_16_fu_822_p1 <= acc_7_loc_assign_1_fu_817_p2(16 - 1 downto 0);
    tmp_17_fu_836_p1 <= acc_0_loc_fu_830_p2(16 - 1 downto 0);
    tmp_18_fu_850_p1 <= acc_1_loc_fu_844_p2(16 - 1 downto 0);
    tmp_19_fu_864_p1 <= acc_2_loc_fu_858_p2(16 - 1 downto 0);
    tmp_1_fu_610_p1 <= acc_1_loc_assign_2_fu_604_p2(16 - 1 downto 0);
    tmp_20_fu_878_p1 <= acc_3_loc_fu_872_p2(16 - 1 downto 0);
    tmp_21_fu_892_p1 <= acc_4_loc_fu_886_p2(16 - 1 downto 0);
    tmp_22_fu_906_p1 <= acc_5_loc_fu_900_p2(16 - 1 downto 0);
    tmp_23_fu_920_p1 <= acc_6_loc_fu_914_p2(16 - 1 downto 0);
    tmp_24_fu_934_p1 <= acc_7_loc_fu_928_p2(16 - 1 downto 0);
        tmp_2_10_fu_761_p1 <= std_logic_vector(resize(signed(d_i_11),32));

        tmp_2_11_fu_774_p1 <= std_logic_vector(resize(signed(d_i_12),32));

        tmp_2_12_fu_787_p1 <= std_logic_vector(resize(signed(d_i_13),32));

        tmp_2_13_fu_800_p1 <= std_logic_vector(resize(signed(d_i_14),32));

        tmp_2_14_fu_813_p1 <= std_logic_vector(resize(signed(d_i_15),32));

        tmp_2_15_fu_826_p1 <= std_logic_vector(resize(signed(d_i_16),32));

        tmp_2_16_fu_840_p1 <= std_logic_vector(resize(signed(d_i_17),32));

        tmp_2_17_fu_854_p1 <= std_logic_vector(resize(signed(d_i_18),32));

        tmp_2_18_fu_868_p1 <= std_logic_vector(resize(signed(d_i_19),32));

        tmp_2_19_fu_882_p1 <= std_logic_vector(resize(signed(d_i_20),32));

        tmp_2_1_fu_600_p1 <= std_logic_vector(resize(signed(d_i_1),32));

        tmp_2_20_fu_896_p1 <= std_logic_vector(resize(signed(d_i_21),32));

        tmp_2_21_fu_910_p1 <= std_logic_vector(resize(signed(d_i_22),32));

        tmp_2_22_fu_924_p1 <= std_logic_vector(resize(signed(d_i_23),32));

        tmp_2_23_fu_938_p1 <= std_logic_vector(resize(signed(d_i_24),32));

        tmp_2_24_fu_958_p1 <= std_logic_vector(resize(signed(d_i_25),32));

        tmp_2_25_fu_978_p1 <= std_logic_vector(resize(signed(d_i_26),32));

        tmp_2_26_fu_998_p1 <= std_logic_vector(resize(signed(d_i_27),32));

        tmp_2_27_fu_1018_p1 <= std_logic_vector(resize(signed(d_i_28),32));

        tmp_2_28_fu_1038_p1 <= std_logic_vector(resize(signed(d_i_29),32));

        tmp_2_29_fu_1058_p1 <= std_logic_vector(resize(signed(d_i_30),32));

        tmp_2_2_fu_618_p1 <= std_logic_vector(resize(signed(d_i_2),32));

        tmp_2_30_fu_1078_p1 <= std_logic_vector(resize(signed(d_i_31),32));

        tmp_2_3_fu_636_p1 <= std_logic_vector(resize(signed(d_i_3),32));

        tmp_2_4_fu_654_p1 <= std_logic_vector(resize(signed(d_i_4),32));

        tmp_2_5_fu_672_p1 <= std_logic_vector(resize(signed(d_i_5),32));

        tmp_2_6_fu_690_p1 <= std_logic_vector(resize(signed(d_i_6),32));

        tmp_2_7_fu_708_p1 <= std_logic_vector(resize(signed(d_i_7),32));

        tmp_2_8_fu_722_p1 <= std_logic_vector(resize(signed(d_i_8),32));

        tmp_2_9_fu_735_p1 <= std_logic_vector(resize(signed(d_i_9),32));

        tmp_2_fu_582_p1 <= std_logic_vector(resize(signed(d_i_0),32));

        tmp_2_s_fu_748_p1 <= std_logic_vector(resize(signed(d_i_10),32));

    tmp_3_fu_628_p1 <= acc_2_loc_assign_2_fu_622_p2(16 - 1 downto 0);
    tmp_4_fu_646_p1 <= acc_3_loc_assign_2_fu_640_p2(16 - 1 downto 0);
    tmp_5_fu_664_p1 <= acc_4_loc_assign_2_fu_658_p2(16 - 1 downto 0);
    tmp_6_fu_682_p1 <= acc_5_loc_assign_2_fu_676_p2(16 - 1 downto 0);
    tmp_7_fu_700_p1 <= acc_6_loc_assign_2_fu_694_p2(16 - 1 downto 0);
    tmp_8_fu_718_p1 <= acc_7_loc_assign_2_fu_712_p2(16 - 1 downto 0);
    tmp_9_fu_731_p1 <= acc_0_loc_assign_1_fu_726_p2(16 - 1 downto 0);
    tmp_fu_592_p1 <= acc_0_loc_assign_2_fu_586_p2(16 - 1 downto 0);
end behav;
