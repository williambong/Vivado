-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity axi_interfaces is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    d_o_0_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_0_TVALID : OUT STD_LOGIC;
    d_o_0_TREADY : IN STD_LOGIC;
    d_o_1_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_1_TVALID : OUT STD_LOGIC;
    d_o_1_TREADY : IN STD_LOGIC;
    d_o_2_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_2_TVALID : OUT STD_LOGIC;
    d_o_2_TREADY : IN STD_LOGIC;
    d_o_3_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_3_TVALID : OUT STD_LOGIC;
    d_o_3_TREADY : IN STD_LOGIC;
    d_o_4_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_4_TVALID : OUT STD_LOGIC;
    d_o_4_TREADY : IN STD_LOGIC;
    d_o_5_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_5_TVALID : OUT STD_LOGIC;
    d_o_5_TREADY : IN STD_LOGIC;
    d_o_6_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_6_TVALID : OUT STD_LOGIC;
    d_o_6_TREADY : IN STD_LOGIC;
    d_o_7_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    d_o_7_TVALID : OUT STD_LOGIC;
    d_o_7_TREADY : IN STD_LOGIC;
    d_i_0_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_0_TVALID : IN STD_LOGIC;
    d_i_0_TREADY : OUT STD_LOGIC;
    d_i_1_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_1_TVALID : IN STD_LOGIC;
    d_i_1_TREADY : OUT STD_LOGIC;
    d_i_2_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_2_TVALID : IN STD_LOGIC;
    d_i_2_TREADY : OUT STD_LOGIC;
    d_i_3_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_3_TVALID : IN STD_LOGIC;
    d_i_3_TREADY : OUT STD_LOGIC;
    d_i_4_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_4_TVALID : IN STD_LOGIC;
    d_i_4_TREADY : OUT STD_LOGIC;
    d_i_5_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_5_TVALID : IN STD_LOGIC;
    d_i_5_TREADY : OUT STD_LOGIC;
    d_i_6_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_6_TVALID : IN STD_LOGIC;
    d_i_6_TREADY : OUT STD_LOGIC;
    d_i_7_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    d_i_7_TVALID : IN STD_LOGIC;
    d_i_7_TREADY : OUT STD_LOGIC );
end;


architecture behav of axi_interfaces is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "axi_interfaces,hls_ip_2015_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.649000,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=271,HLS_SYN_LUT=288}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_20 : BOOLEAN;
    signal acc_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal acc_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal tmp_11_fu_435_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_90 : BOOLEAN;
    signal ap_sig_bdd_109 : BOOLEAN;
    signal ap_sig_ioackin_d_o_0_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_1_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_2_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_3_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_4_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_5_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_6_TREADY : STD_LOGIC;
    signal ap_sig_ioackin_d_o_7_TREADY : STD_LOGIC;
    signal exitcond_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_reg_211 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_237_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_1_fu_262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_2_fu_287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_3_fu_312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_4_fu_337_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_5_fu_362_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_6_fu_387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_7_fu_412_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_d_o_0_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_1_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_2_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_3_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_4_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_5_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_6_TREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_d_o_7_TREADY : STD_LOGIC := '0';
    signal tmp_2_fu_233_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_1_fu_258_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_fu_283_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_3_fu_308_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_4_fu_333_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_5_fu_358_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_6_fu_383_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_7_fu_408_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_cast_fu_225_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_1_7_fu_429_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_bdd_327 : BOOLEAN;
    signal ap_sig_bdd_329 : BOOLEAN;
    signal ap_sig_bdd_331 : BOOLEAN;
    signal ap_sig_bdd_333 : BOOLEAN;
    signal ap_sig_bdd_335 : BOOLEAN;
    signal ap_sig_bdd_337 : BOOLEAN;
    signal ap_sig_bdd_339 : BOOLEAN;
    signal ap_sig_bdd_341 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_d_o_0_TREADY assign process. --
    ap_reg_ioackin_d_o_0_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_0_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    if (not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)))) then 
                        ap_reg_ioackin_d_o_0_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_327) then 
                        ap_reg_ioackin_d_o_0_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_d_o_1_TREADY assign process. --
    ap_reg_ioackin_d_o_1_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_1_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    if (not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)))) then 
                        ap_reg_ioackin_d_o_1_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_329) then 
                        ap_reg_ioackin_d_o_1_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_d_o_2_TREADY assign process. --
    ap_reg_ioackin_d_o_2_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_2_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    if (not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)))) then 
                        ap_reg_ioackin_d_o_2_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_331) then 
                        ap_reg_ioackin_d_o_2_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_d_o_3_TREADY assign process. --
    ap_reg_ioackin_d_o_3_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_3_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    if (not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)))) then 
                        ap_reg_ioackin_d_o_3_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_333) then 
                        ap_reg_ioackin_d_o_3_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_d_o_4_TREADY assign process. --
    ap_reg_ioackin_d_o_4_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_4_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    if (not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)))) then 
                        ap_reg_ioackin_d_o_4_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_335) then 
                        ap_reg_ioackin_d_o_4_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_d_o_5_TREADY assign process. --
    ap_reg_ioackin_d_o_5_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_5_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    if (not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)))) then 
                        ap_reg_ioackin_d_o_5_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_337) then 
                        ap_reg_ioackin_d_o_5_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_d_o_6_TREADY assign process. --
    ap_reg_ioackin_d_o_6_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_6_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    if (not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)))) then 
                        ap_reg_ioackin_d_o_6_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_339) then 
                        ap_reg_ioackin_d_o_6_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_d_o_7_TREADY assign process. --
    ap_reg_ioackin_d_o_7_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_ioackin_d_o_7_TREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                    if (not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY)))) then 
                        ap_reg_ioackin_d_o_7_TREADY <= ap_const_logic_0;
                    elsif (ap_sig_bdd_341) then 
                        ap_reg_ioackin_d_o_7_TREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- i1_reg_211 assign process. --
    i1_reg_211_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))) and (ap_const_lv1_0 = exitcond_fu_439_p2))) then 
                i1_reg_211 <= tmp_11_fu_435_p1;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))) and not((ap_const_lv1_0 = exitcond_fu_439_p2))))) then 
                i1_reg_211 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))))) then
                acc_0 <= tmp_3_fu_237_p2;
                acc_1 <= tmp_3_1_fu_262_p2;
                acc_2 <= tmp_3_2_fu_287_p2;
                acc_3 <= tmp_3_3_fu_312_p2;
                acc_4 <= tmp_3_4_fu_337_p2;
                acc_5 <= tmp_3_5_fu_362_p2;
                acc_6 <= tmp_3_6_fu_387_p2;
                acc_7 <= tmp_3_7_fu_412_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, exitcond_fu_439_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))) and not((ap_const_lv1_0 = exitcond_fu_439_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY, exitcond_fu_439_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))) and not((ap_const_lv1_0 = exitcond_fu_439_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_rst_n_inv assign process. --
    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    -- ap_sig_bdd_109 assign process. --
    ap_sig_bdd_109_assign_proc : process(ap_start, d_i_0_TVALID, d_i_1_TVALID, d_i_2_TVALID, d_i_3_TVALID, d_i_4_TVALID, d_i_5_TVALID, d_i_6_TVALID, d_i_7_TVALID)
    begin
                ap_sig_bdd_109 <= ((d_i_0_TVALID = ap_const_logic_0) or (d_i_1_TVALID = ap_const_logic_0) or (d_i_2_TVALID = ap_const_logic_0) or (d_i_3_TVALID = ap_const_logic_0) or (d_i_4_TVALID = ap_const_logic_0) or (d_i_5_TVALID = ap_const_logic_0) or (d_i_6_TVALID = ap_const_logic_0) or (d_i_7_TVALID = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    -- ap_sig_bdd_20 assign process. --
    ap_sig_bdd_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_327 assign process. --
    ap_sig_bdd_327_assign_proc : process(d_o_0_TREADY, ap_sig_bdd_109)
    begin
                ap_sig_bdd_327 <= (not(ap_sig_bdd_109) and (ap_const_logic_1 = d_o_0_TREADY));
    end process;


    -- ap_sig_bdd_329 assign process. --
    ap_sig_bdd_329_assign_proc : process(d_o_1_TREADY, ap_sig_bdd_109)
    begin
                ap_sig_bdd_329 <= (not(ap_sig_bdd_109) and (ap_const_logic_1 = d_o_1_TREADY));
    end process;


    -- ap_sig_bdd_331 assign process. --
    ap_sig_bdd_331_assign_proc : process(d_o_2_TREADY, ap_sig_bdd_109)
    begin
                ap_sig_bdd_331 <= (not(ap_sig_bdd_109) and (ap_const_logic_1 = d_o_2_TREADY));
    end process;


    -- ap_sig_bdd_333 assign process. --
    ap_sig_bdd_333_assign_proc : process(d_o_3_TREADY, ap_sig_bdd_109)
    begin
                ap_sig_bdd_333 <= (not(ap_sig_bdd_109) and (ap_const_logic_1 = d_o_3_TREADY));
    end process;


    -- ap_sig_bdd_335 assign process. --
    ap_sig_bdd_335_assign_proc : process(d_o_4_TREADY, ap_sig_bdd_109)
    begin
                ap_sig_bdd_335 <= (not(ap_sig_bdd_109) and (ap_const_logic_1 = d_o_4_TREADY));
    end process;


    -- ap_sig_bdd_337 assign process. --
    ap_sig_bdd_337_assign_proc : process(d_o_5_TREADY, ap_sig_bdd_109)
    begin
                ap_sig_bdd_337 <= (not(ap_sig_bdd_109) and (ap_const_logic_1 = d_o_5_TREADY));
    end process;


    -- ap_sig_bdd_339 assign process. --
    ap_sig_bdd_339_assign_proc : process(d_o_6_TREADY, ap_sig_bdd_109)
    begin
                ap_sig_bdd_339 <= (not(ap_sig_bdd_109) and (ap_const_logic_1 = d_o_6_TREADY));
    end process;


    -- ap_sig_bdd_341 assign process. --
    ap_sig_bdd_341_assign_proc : process(d_o_7_TREADY, ap_sig_bdd_109)
    begin
                ap_sig_bdd_341 <= (not(ap_sig_bdd_109) and (ap_const_logic_1 = d_o_7_TREADY));
    end process;


    -- ap_sig_bdd_90 assign process. --
    ap_sig_bdd_90_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_90 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_20)
    begin
        if (ap_sig_bdd_20) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_90)
    begin
        if (ap_sig_bdd_90) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_d_o_0_TREADY assign process. --
    ap_sig_ioackin_d_o_0_TREADY_assign_proc : process(d_o_0_TREADY, ap_reg_ioackin_d_o_0_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_0_TREADY)) then 
            ap_sig_ioackin_d_o_0_TREADY <= d_o_0_TREADY;
        else 
            ap_sig_ioackin_d_o_0_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_d_o_1_TREADY assign process. --
    ap_sig_ioackin_d_o_1_TREADY_assign_proc : process(d_o_1_TREADY, ap_reg_ioackin_d_o_1_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_1_TREADY)) then 
            ap_sig_ioackin_d_o_1_TREADY <= d_o_1_TREADY;
        else 
            ap_sig_ioackin_d_o_1_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_d_o_2_TREADY assign process. --
    ap_sig_ioackin_d_o_2_TREADY_assign_proc : process(d_o_2_TREADY, ap_reg_ioackin_d_o_2_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_2_TREADY)) then 
            ap_sig_ioackin_d_o_2_TREADY <= d_o_2_TREADY;
        else 
            ap_sig_ioackin_d_o_2_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_d_o_3_TREADY assign process. --
    ap_sig_ioackin_d_o_3_TREADY_assign_proc : process(d_o_3_TREADY, ap_reg_ioackin_d_o_3_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_3_TREADY)) then 
            ap_sig_ioackin_d_o_3_TREADY <= d_o_3_TREADY;
        else 
            ap_sig_ioackin_d_o_3_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_d_o_4_TREADY assign process. --
    ap_sig_ioackin_d_o_4_TREADY_assign_proc : process(d_o_4_TREADY, ap_reg_ioackin_d_o_4_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_4_TREADY)) then 
            ap_sig_ioackin_d_o_4_TREADY <= d_o_4_TREADY;
        else 
            ap_sig_ioackin_d_o_4_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_d_o_5_TREADY assign process. --
    ap_sig_ioackin_d_o_5_TREADY_assign_proc : process(d_o_5_TREADY, ap_reg_ioackin_d_o_5_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_5_TREADY)) then 
            ap_sig_ioackin_d_o_5_TREADY <= d_o_5_TREADY;
        else 
            ap_sig_ioackin_d_o_5_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_d_o_6_TREADY assign process. --
    ap_sig_ioackin_d_o_6_TREADY_assign_proc : process(d_o_6_TREADY, ap_reg_ioackin_d_o_6_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_6_TREADY)) then 
            ap_sig_ioackin_d_o_6_TREADY <= d_o_6_TREADY;
        else 
            ap_sig_ioackin_d_o_6_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ioackin_d_o_7_TREADY assign process. --
    ap_sig_ioackin_d_o_7_TREADY_assign_proc : process(d_o_7_TREADY, ap_reg_ioackin_d_o_7_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_d_o_7_TREADY)) then 
            ap_sig_ioackin_d_o_7_TREADY <= d_o_7_TREADY;
        else 
            ap_sig_ioackin_d_o_7_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- d_i_0_TREADY assign process. --
    d_i_0_TREADY_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))))) then 
            d_i_0_TREADY <= ap_const_logic_1;
        else 
            d_i_0_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_1_TREADY assign process. --
    d_i_1_TREADY_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))))) then 
            d_i_1_TREADY <= ap_const_logic_1;
        else 
            d_i_1_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_2_TREADY assign process. --
    d_i_2_TREADY_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))))) then 
            d_i_2_TREADY <= ap_const_logic_1;
        else 
            d_i_2_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_3_TREADY assign process. --
    d_i_3_TREADY_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))))) then 
            d_i_3_TREADY <= ap_const_logic_1;
        else 
            d_i_3_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_4_TREADY assign process. --
    d_i_4_TREADY_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))))) then 
            d_i_4_TREADY <= ap_const_logic_1;
        else 
            d_i_4_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_5_TREADY assign process. --
    d_i_5_TREADY_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))))) then 
            d_i_5_TREADY <= ap_const_logic_1;
        else 
            d_i_5_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_6_TREADY assign process. --
    d_i_6_TREADY_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))))) then 
            d_i_6_TREADY <= ap_const_logic_1;
        else 
            d_i_6_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    -- d_i_7_TREADY assign process. --
    d_i_7_TREADY_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_sig_ioackin_d_o_0_TREADY, ap_sig_ioackin_d_o_1_TREADY, ap_sig_ioackin_d_o_2_TREADY, ap_sig_ioackin_d_o_3_TREADY, ap_sig_ioackin_d_o_4_TREADY, ap_sig_ioackin_d_o_5_TREADY, ap_sig_ioackin_d_o_6_TREADY, ap_sig_ioackin_d_o_7_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_bdd_109 or (ap_const_logic_0 = ap_sig_ioackin_d_o_0_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_1_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_2_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_3_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_4_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_5_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_6_TREADY) or (ap_const_logic_0 = ap_sig_ioackin_d_o_7_TREADY))))) then 
            d_i_7_TREADY <= ap_const_logic_1;
        else 
            d_i_7_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    d_o_0_TDATA <= tmp_3_fu_237_p2(16 - 1 downto 0);

    -- d_o_0_TVALID assign process. --
    d_o_0_TVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_reg_ioackin_d_o_0_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_bdd_109) and (ap_const_logic_0 = ap_reg_ioackin_d_o_0_TREADY))) then 
            d_o_0_TVALID <= ap_const_logic_1;
        else 
            d_o_0_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_1_TDATA <= tmp_3_1_fu_262_p2(16 - 1 downto 0);

    -- d_o_1_TVALID assign process. --
    d_o_1_TVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_reg_ioackin_d_o_1_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_bdd_109) and (ap_const_logic_0 = ap_reg_ioackin_d_o_1_TREADY))) then 
            d_o_1_TVALID <= ap_const_logic_1;
        else 
            d_o_1_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_2_TDATA <= tmp_3_2_fu_287_p2(16 - 1 downto 0);

    -- d_o_2_TVALID assign process. --
    d_o_2_TVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_reg_ioackin_d_o_2_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_bdd_109) and (ap_const_logic_0 = ap_reg_ioackin_d_o_2_TREADY))) then 
            d_o_2_TVALID <= ap_const_logic_1;
        else 
            d_o_2_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_3_TDATA <= tmp_3_3_fu_312_p2(16 - 1 downto 0);

    -- d_o_3_TVALID assign process. --
    d_o_3_TVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_reg_ioackin_d_o_3_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_bdd_109) and (ap_const_logic_0 = ap_reg_ioackin_d_o_3_TREADY))) then 
            d_o_3_TVALID <= ap_const_logic_1;
        else 
            d_o_3_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_4_TDATA <= tmp_3_4_fu_337_p2(16 - 1 downto 0);

    -- d_o_4_TVALID assign process. --
    d_o_4_TVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_reg_ioackin_d_o_4_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_bdd_109) and (ap_const_logic_0 = ap_reg_ioackin_d_o_4_TREADY))) then 
            d_o_4_TVALID <= ap_const_logic_1;
        else 
            d_o_4_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_5_TDATA <= tmp_3_5_fu_362_p2(16 - 1 downto 0);

    -- d_o_5_TVALID assign process. --
    d_o_5_TVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_reg_ioackin_d_o_5_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_bdd_109) and (ap_const_logic_0 = ap_reg_ioackin_d_o_5_TREADY))) then 
            d_o_5_TVALID <= ap_const_logic_1;
        else 
            d_o_5_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_6_TDATA <= tmp_3_6_fu_387_p2(16 - 1 downto 0);

    -- d_o_6_TVALID assign process. --
    d_o_6_TVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_reg_ioackin_d_o_6_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_bdd_109) and (ap_const_logic_0 = ap_reg_ioackin_d_o_6_TREADY))) then 
            d_o_6_TVALID <= ap_const_logic_1;
        else 
            d_o_6_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    d_o_7_TDATA <= tmp_3_7_fu_412_p2(16 - 1 downto 0);

    -- d_o_7_TVALID assign process. --
    d_o_7_TVALID_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_bdd_109, ap_reg_ioackin_d_o_7_TREADY)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_bdd_109) and (ap_const_logic_0 = ap_reg_ioackin_d_o_7_TREADY))) then 
            d_o_7_TVALID <= ap_const_logic_1;
        else 
            d_o_7_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_439_p2 <= "1" when (i_1_7_fu_429_p2 = ap_const_lv6_20) else "0";
    i1_cast_fu_225_p1 <= std_logic_vector(resize(unsigned(i1_reg_211),6));
    i_1_7_fu_429_p2 <= std_logic_vector(unsigned(ap_const_lv6_8) + unsigned(i1_cast_fu_225_p1));
    tmp_11_fu_435_p1 <= i_1_7_fu_429_p2(5 - 1 downto 0);
        tmp_2_1_fu_258_p1 <= std_logic_vector(resize(signed(d_i_1_TDATA),32));

        tmp_2_2_fu_283_p1 <= std_logic_vector(resize(signed(d_i_2_TDATA),32));

        tmp_2_3_fu_308_p1 <= std_logic_vector(resize(signed(d_i_3_TDATA),32));

        tmp_2_4_fu_333_p1 <= std_logic_vector(resize(signed(d_i_4_TDATA),32));

        tmp_2_5_fu_358_p1 <= std_logic_vector(resize(signed(d_i_5_TDATA),32));

        tmp_2_6_fu_383_p1 <= std_logic_vector(resize(signed(d_i_6_TDATA),32));

        tmp_2_7_fu_408_p1 <= std_logic_vector(resize(signed(d_i_7_TDATA),32));

        tmp_2_fu_233_p1 <= std_logic_vector(resize(signed(d_i_0_TDATA),32));

    tmp_3_1_fu_262_p2 <= std_logic_vector(signed(tmp_2_1_fu_258_p1) + signed(acc_1));
    tmp_3_2_fu_287_p2 <= std_logic_vector(signed(tmp_2_2_fu_283_p1) + signed(acc_2));
    tmp_3_3_fu_312_p2 <= std_logic_vector(signed(tmp_2_3_fu_308_p1) + signed(acc_3));
    tmp_3_4_fu_337_p2 <= std_logic_vector(signed(tmp_2_4_fu_333_p1) + signed(acc_4));
    tmp_3_5_fu_362_p2 <= std_logic_vector(signed(tmp_2_5_fu_358_p1) + signed(acc_5));
    tmp_3_6_fu_387_p2 <= std_logic_vector(signed(tmp_2_6_fu_383_p1) + signed(acc_6));
    tmp_3_7_fu_412_p2 <= std_logic_vector(signed(tmp_2_7_fu_408_p1) + signed(acc_7));
    tmp_3_fu_237_p2 <= std_logic_vector(signed(tmp_2_fu_233_p1) + signed(acc_0));
end behav;
