

================================================================
== Vivado HLS Report for 'axi_interfaces'
================================================================
* Date:           Sat Aug 08 16:37:25 2015

* Version:        2015.2 (Build 1266856 on Fri Jun 26 16:57:37 PM 2015)
* Project:        axi_interfaces_prj
* Solution:       solution2
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|      2.65|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+-------------+
    |  Latency  |  Interval |   Pipeline  |
    | min | max | min | max |     Type    |
    +-----+-----+-----+-----+-------------+
    |    3|    4|    4|    4| loop rewind |
    +-----+-----+-----+-----+-------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------+-----+-----+----------+-----------+-----------+------+----------+
        |            |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------+-----+-----+----------+-----------+-----------+------+----------+
        |- For_Loop  |    3|    3|         1|          1|          1|     4|    yes   |
        +------------+-----+-----+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+--------+
|       Name      | BRAM_18K| DSP48E|   FF   |   LUT  |
+-----------------+---------+-------+--------+--------+
|Expression       |        -|      -|       -|       -|
|FIFO             |        -|      -|       -|       -|
|Instance         |        -|      -|       -|       -|
|Memory           |        -|      -|       -|       -|
|Multiplexer      |        -|      -|       -|       -|
|Register         |        -|      -|       -|       -|
+-----------------+---------+-------+--------+--------+
|Total            |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+
|Available        |      650|    600|  202800|  101400|
+-----------------+---------+-------+--------+--------+
|Utilization (%)  |        0|      0|       0|       0|
+-----------------+---------+-------+--------+--------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+------------------------+-----+-----+---------+--------------+-------------+
|        RTL Ports       | Dir | Bits| Protocol| Source Object|    C Type   |
+------------------------+-----+-----+---------+--------------+-------------+
|s_axi_AXILiteS_AWVALID  |  in |    1|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_AWREADY  | out |    1|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_AWADDR   |  in |    5|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_WVALID   |  in |    1|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_WREADY   | out |    1|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_WDATA    |  in |   32|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_WSTRB    |  in |    4|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_ARVALID  |  in |    1|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_ARREADY  | out |    1|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_ARADDR   |  in |    5|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_RVALID   | out |    1|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_RREADY   |  in |    1|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_RDATA    | out |   32|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_RRESP    | out |    2|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_BVALID   | out |    1|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_BREADY   |  in |    1|  s_axi  |   AXILiteS   | return void |
|s_axi_AXILiteS_BRESP    | out |    2|  s_axi  |   AXILiteS   | return void |
+------------------------+-----+-----+---------+--------------+-------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 2
* Pipeline: 1
  Pipeline-0: II = 1, D = 1, States = { 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.09ns
ST_1: stg_3 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_1: stg_4 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecInterface(i16* %d_i_0, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_5 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecInterface(i16* %d_i_1, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_6 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecInterface(i16* %d_i_2, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_7 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecInterface(i16* %d_i_3, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_8 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecInterface(i16* %d_i_4, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_9 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecInterface(i16* %d_i_5, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_10 [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecInterface(i16* %d_i_6, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_11 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface(i16* %d_i_7, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_12 [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecInterface(i16* %d_o_0, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_13 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecInterface(i16* %d_o_1, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_14 [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecInterface(i16* %d_o_2, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_15 [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecInterface(i16* %d_o_3, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_16 [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecInterface(i16* %d_o_4, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_17 [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecInterface(i16* %d_o_5, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_18 [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecInterface(i16* %d_o_6, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_19 [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecInterface(i16* %d_o_7, [5 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_1: stg_20 [1/1] 1.09ns
:17  br label %rewind_header


 <State 2>: 2.65ns
ST_2: do_init [1/1] 0.00ns
rewind_header:0  %do_init = phi i1 [ true, %0 ], [ false, %1 ], [ true, %2 ]

ST_2: i1 [1/1] 0.00ns
rewind_header:1  %i1 = phi i5 [ 0, %0 ], [ %tmp_11, %1 ], [ 0, %2 ]

ST_2: stg_23 [1/1] 0.00ns
rewind_header:2  br i1 %do_init, label %rewind_init, label %1

ST_2: stg_24 [1/1] 0.00ns
rewind_init:0  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_7), !map !0

ST_2: stg_25 [1/1] 0.00ns
rewind_init:1  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_6), !map !6

ST_2: stg_26 [1/1] 0.00ns
rewind_init:2  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_5), !map !12

ST_2: stg_27 [1/1] 0.00ns
rewind_init:3  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_4), !map !18

ST_2: stg_28 [1/1] 0.00ns
rewind_init:4  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_3), !map !24

ST_2: stg_29 [1/1] 0.00ns
rewind_init:5  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_2), !map !30

ST_2: stg_30 [1/1] 0.00ns
rewind_init:6  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_1), !map !36

ST_2: stg_31 [1/1] 0.00ns
rewind_init:7  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_0), !map !42

ST_2: stg_32 [1/1] 0.00ns
rewind_init:8  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_i_7), !map !48

ST_2: stg_33 [1/1] 0.00ns
rewind_init:9  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_i_6), !map !52

ST_2: stg_34 [1/1] 0.00ns
rewind_init:10  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_i_5), !map !56

ST_2: stg_35 [1/1] 0.00ns
rewind_init:11  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_i_4), !map !60

ST_2: stg_36 [1/1] 0.00ns
rewind_init:12  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_i_3), !map !64

ST_2: stg_37 [1/1] 0.00ns
rewind_init:13  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_i_2), !map !68

ST_2: stg_38 [1/1] 0.00ns
rewind_init:14  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_i_1), !map !72

ST_2: stg_39 [1/1] 0.00ns
rewind_init:15  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_i_0), !map !76

ST_2: stg_40 [1/1] 0.00ns
rewind_init:16  call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @axi_interfaces_str) nounwind

ST_2: stg_41 [1/1] 0.00ns
rewind_init:17  br label %1

ST_2: i1_cast [1/1] 0.00ns
:0  %i1_cast = zext i5 %i1 to i6

ST_2: empty [1/1] 0.00ns
:1  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4) nounwind

ST_2: stg_44 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopName([9 x i8]* @p_str4) nounwind

ST_2: tmp [1/1] 0.00ns
:3  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([9 x i8]* @p_str4) nounwind

ST_2: stg_46 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_2: acc_0_load [1/1] 0.00ns
:5  %acc_0_load = load i32* @acc_0, align 16

ST_2: d_i_0_read [1/1] 0.00ns
:6  %d_i_0_read = call i16 @_ssdm_op_Read.axis.volatile.i16P(i16* %d_i_0)

ST_2: tmp_2 [1/1] 0.00ns
:7  %tmp_2 = sext i16 %d_i_0_read to i32

ST_2: tmp_3 [1/1] 1.70ns
:8  %tmp_3 = add nsw i32 %tmp_2, %acc_0_load

ST_2: stg_51 [1/1] 0.00ns
:9  store i32 %tmp_3, i32* @acc_0, align 16

ST_2: tmp_1 [1/1] 0.00ns
:10  %tmp_1 = trunc i32 %tmp_3 to i16

ST_2: stg_53 [1/1] 0.00ns
:11  call void @_ssdm_op_Write.axis.volatile.i16P(i16* %d_o_0, i16 %tmp_1)

ST_2: empty_2 [1/1] 0.00ns
:12  %empty_2 = call i32 (...)* @_ssdm_op_SpecRegionEnd([9 x i8]* @p_str4, i32 %tmp) nounwind

ST_2: acc_1_load [1/1] 0.00ns
:13  %acc_1_load = load i32* @acc_1, align 4

ST_2: d_i_1_read [1/1] 0.00ns
:14  %d_i_1_read = call i16 @_ssdm_op_Read.axis.volatile.i16P(i16* %d_i_1)

ST_2: tmp_2_1 [1/1] 0.00ns
:15  %tmp_2_1 = sext i16 %d_i_1_read to i32

ST_2: tmp_3_1 [1/1] 1.70ns
:16  %tmp_3_1 = add nsw i32 %tmp_2_1, %acc_1_load

ST_2: stg_59 [1/1] 0.00ns
:17  store i32 %tmp_3_1, i32* @acc_1, align 4

ST_2: tmp_4 [1/1] 0.00ns
:18  %tmp_4 = trunc i32 %tmp_3_1 to i16

ST_2: stg_61 [1/1] 0.00ns
:19  call void @_ssdm_op_Write.axis.volatile.i16P(i16* %d_o_1, i16 %tmp_4)

ST_2: acc_2_load [1/1] 0.00ns
:20  %acc_2_load = load i32* @acc_2, align 8

ST_2: d_i_2_read [1/1] 0.00ns
:21  %d_i_2_read = call i16 @_ssdm_op_Read.axis.volatile.i16P(i16* %d_i_2)

ST_2: tmp_2_2 [1/1] 0.00ns
:22  %tmp_2_2 = sext i16 %d_i_2_read to i32

ST_2: tmp_3_2 [1/1] 1.70ns
:23  %tmp_3_2 = add nsw i32 %tmp_2_2, %acc_2_load

ST_2: stg_66 [1/1] 0.00ns
:24  store i32 %tmp_3_2, i32* @acc_2, align 8

ST_2: tmp_5 [1/1] 0.00ns
:25  %tmp_5 = trunc i32 %tmp_3_2 to i16

ST_2: stg_68 [1/1] 0.00ns
:26  call void @_ssdm_op_Write.axis.volatile.i16P(i16* %d_o_2, i16 %tmp_5)

ST_2: acc_3_load [1/1] 0.00ns
:27  %acc_3_load = load i32* @acc_3, align 4

ST_2: d_i_3_read [1/1] 0.00ns
:28  %d_i_3_read = call i16 @_ssdm_op_Read.axis.volatile.i16P(i16* %d_i_3)

ST_2: tmp_2_3 [1/1] 0.00ns
:29  %tmp_2_3 = sext i16 %d_i_3_read to i32

ST_2: tmp_3_3 [1/1] 1.70ns
:30  %tmp_3_3 = add nsw i32 %tmp_2_3, %acc_3_load

ST_2: stg_73 [1/1] 0.00ns
:31  store i32 %tmp_3_3, i32* @acc_3, align 4

ST_2: tmp_6 [1/1] 0.00ns
:32  %tmp_6 = trunc i32 %tmp_3_3 to i16

ST_2: stg_75 [1/1] 0.00ns
:33  call void @_ssdm_op_Write.axis.volatile.i16P(i16* %d_o_3, i16 %tmp_6)

ST_2: acc_4_load [1/1] 0.00ns
:34  %acc_4_load = load i32* @acc_4, align 16

ST_2: d_i_4_read [1/1] 0.00ns
:35  %d_i_4_read = call i16 @_ssdm_op_Read.axis.volatile.i16P(i16* %d_i_4)

ST_2: tmp_2_4 [1/1] 0.00ns
:36  %tmp_2_4 = sext i16 %d_i_4_read to i32

ST_2: tmp_3_4 [1/1] 1.70ns
:37  %tmp_3_4 = add nsw i32 %tmp_2_4, %acc_4_load

ST_2: stg_80 [1/1] 0.00ns
:38  store i32 %tmp_3_4, i32* @acc_4, align 16

ST_2: tmp_7 [1/1] 0.00ns
:39  %tmp_7 = trunc i32 %tmp_3_4 to i16

ST_2: stg_82 [1/1] 0.00ns
:40  call void @_ssdm_op_Write.axis.volatile.i16P(i16* %d_o_4, i16 %tmp_7)

ST_2: acc_5_load [1/1] 0.00ns
:41  %acc_5_load = load i32* @acc_5, align 4

ST_2: d_i_5_read [1/1] 0.00ns
:42  %d_i_5_read = call i16 @_ssdm_op_Read.axis.volatile.i16P(i16* %d_i_5)

ST_2: tmp_2_5 [1/1] 0.00ns
:43  %tmp_2_5 = sext i16 %d_i_5_read to i32

ST_2: tmp_3_5 [1/1] 1.70ns
:44  %tmp_3_5 = add nsw i32 %tmp_2_5, %acc_5_load

ST_2: stg_87 [1/1] 0.00ns
:45  store i32 %tmp_3_5, i32* @acc_5, align 4

ST_2: tmp_8 [1/1] 0.00ns
:46  %tmp_8 = trunc i32 %tmp_3_5 to i16

ST_2: stg_89 [1/1] 0.00ns
:47  call void @_ssdm_op_Write.axis.volatile.i16P(i16* %d_o_5, i16 %tmp_8)

ST_2: acc_6_load [1/1] 0.00ns
:48  %acc_6_load = load i32* @acc_6, align 8

ST_2: d_i_6_read [1/1] 0.00ns
:49  %d_i_6_read = call i16 @_ssdm_op_Read.axis.volatile.i16P(i16* %d_i_6)

ST_2: tmp_2_6 [1/1] 0.00ns
:50  %tmp_2_6 = sext i16 %d_i_6_read to i32

ST_2: tmp_3_6 [1/1] 1.70ns
:51  %tmp_3_6 = add nsw i32 %tmp_2_6, %acc_6_load

ST_2: stg_94 [1/1] 0.00ns
:52  store i32 %tmp_3_6, i32* @acc_6, align 8

ST_2: tmp_9 [1/1] 0.00ns
:53  %tmp_9 = trunc i32 %tmp_3_6 to i16

ST_2: stg_96 [1/1] 0.00ns
:54  call void @_ssdm_op_Write.axis.volatile.i16P(i16* %d_o_6, i16 %tmp_9)

ST_2: acc_7_load [1/1] 0.00ns
:55  %acc_7_load = load i32* @acc_7, align 4

ST_2: d_i_7_read [1/1] 0.00ns
:56  %d_i_7_read = call i16 @_ssdm_op_Read.axis.volatile.i16P(i16* %d_i_7)

ST_2: tmp_2_7 [1/1] 0.00ns
:57  %tmp_2_7 = sext i16 %d_i_7_read to i32

ST_2: tmp_3_7 [1/1] 1.70ns
:58  %tmp_3_7 = add nsw i32 %tmp_2_7, %acc_7_load

ST_2: stg_101 [1/1] 0.00ns
:59  store i32 %tmp_3_7, i32* @acc_7, align 4

ST_2: tmp_10 [1/1] 0.00ns
:60  %tmp_10 = trunc i32 %tmp_3_7 to i16

ST_2: stg_103 [1/1] 0.00ns
:61  call void @_ssdm_op_Write.axis.volatile.i16P(i16* %d_o_7, i16 %tmp_10)

ST_2: i_1_7 [1/1] 1.34ns
:62  %i_1_7 = add i6 8, %i1_cast

ST_2: tmp_11 [1/1] 0.00ns
:63  %tmp_11 = trunc i6 %i_1_7 to i5

ST_2: exitcond [1/1] 1.31ns
:64  %exitcond = icmp eq i6 %i_1_7, -32

ST_2: stg_107 [1/1] 0.00ns
:65  br i1 %exitcond, label %2, label %rewind_header

ST_2: stg_108 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_Return()

ST_2: stg_109 [1/1] 0.00ns
:1  br label %rewind_header



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
