// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="axi_interfaces,hls_ip_2015_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.649000,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=307,HLS_SYN_LUT=328}" *)

module axi_interfaces (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        d_o_0_TDATA,
        d_o_0_TVALID,
        d_o_0_TREADY,
        d_o_1_TDATA,
        d_o_1_TVALID,
        d_o_1_TREADY,
        d_o_2_TDATA,
        d_o_2_TVALID,
        d_o_2_TREADY,
        d_o_3_TDATA,
        d_o_3_TVALID,
        d_o_3_TREADY,
        d_o_4_TDATA,
        d_o_4_TVALID,
        d_o_4_TREADY,
        d_o_5_TDATA,
        d_o_5_TVALID,
        d_o_5_TREADY,
        d_o_6_TDATA,
        d_o_6_TVALID,
        d_o_6_TREADY,
        d_o_7_TDATA,
        d_o_7_TVALID,
        d_o_7_TREADY,
        d_i_0_TDATA,
        d_i_0_TVALID,
        d_i_0_TREADY,
        d_i_1_TDATA,
        d_i_1_TVALID,
        d_i_1_TREADY,
        d_i_2_TDATA,
        d_i_2_TVALID,
        d_i_2_TREADY,
        d_i_3_TDATA,
        d_i_3_TVALID,
        d_i_3_TREADY,
        d_i_4_TDATA,
        d_i_4_TVALID,
        d_i_4_TREADY,
        d_i_5_TDATA,
        d_i_5_TVALID,
        d_i_5_TREADY,
        d_i_6_TDATA,
        d_i_6_TVALID,
        d_i_6_TREADY,
        d_i_7_TDATA,
        d_i_7_TVALID,
        d_i_7_TREADY,
        interrupt
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 2'b1;
parameter    ap_ST_st2_fsm_1 = 2'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv6_8 = 6'b1000;
parameter    ap_const_lv6_20 = 6'b100000;
parameter    ap_true = 1'b1;
parameter    C_S_AXI_AXILITES_WSTRB_WIDTH = (C_S_AXI_AXILITES_DATA_WIDTH / ap_const_int64_8);
parameter    C_S_AXI_WSTRB_WIDTH = (C_S_AXI_DATA_WIDTH / ap_const_int64_8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1 : 0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1 : 0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1 : 0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output  [15:0] d_o_0_TDATA;
output   d_o_0_TVALID;
input   d_o_0_TREADY;
output  [15:0] d_o_1_TDATA;
output   d_o_1_TVALID;
input   d_o_1_TREADY;
output  [15:0] d_o_2_TDATA;
output   d_o_2_TVALID;
input   d_o_2_TREADY;
output  [15:0] d_o_3_TDATA;
output   d_o_3_TVALID;
input   d_o_3_TREADY;
output  [15:0] d_o_4_TDATA;
output   d_o_4_TVALID;
input   d_o_4_TREADY;
output  [15:0] d_o_5_TDATA;
output   d_o_5_TVALID;
input   d_o_5_TREADY;
output  [15:0] d_o_6_TDATA;
output   d_o_6_TVALID;
input   d_o_6_TREADY;
output  [15:0] d_o_7_TDATA;
output   d_o_7_TVALID;
input   d_o_7_TREADY;
input  [15:0] d_i_0_TDATA;
input   d_i_0_TVALID;
output   d_i_0_TREADY;
input  [15:0] d_i_1_TDATA;
input   d_i_1_TVALID;
output   d_i_1_TREADY;
input  [15:0] d_i_2_TDATA;
input   d_i_2_TVALID;
output   d_i_2_TREADY;
input  [15:0] d_i_3_TDATA;
input   d_i_3_TVALID;
output   d_i_3_TREADY;
input  [15:0] d_i_4_TDATA;
input   d_i_4_TVALID;
output   d_i_4_TREADY;
input  [15:0] d_i_5_TDATA;
input   d_i_5_TVALID;
output   d_i_5_TREADY;
input  [15:0] d_i_6_TDATA;
input   d_i_6_TVALID;
output   d_i_6_TREADY;
input  [15:0] d_i_7_TDATA;
input   d_i_7_TVALID;
output   d_i_7_TREADY;
output   interrupt;

reg d_o_0_TVALID;
reg d_o_1_TVALID;
reg d_o_2_TVALID;
reg d_o_3_TVALID;
reg d_o_4_TVALID;
reg d_o_5_TVALID;
reg d_o_6_TVALID;
reg d_o_7_TVALID;
reg d_i_0_TREADY;
reg d_i_1_TREADY;
reg d_i_2_TREADY;
reg d_i_3_TREADY;
reg d_i_4_TREADY;
reg d_i_5_TREADY;
reg d_i_6_TREADY;
reg d_i_7_TREADY;
reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm = 2'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_43;
reg    ap_ready;
reg   [31:0] acc_0 = 32'b00000000000000000000000000000000;
reg   [31:0] acc_1 = 32'b00000000000000000000000000000000;
reg   [31:0] acc_2 = 32'b00000000000000000000000000000000;
reg   [31:0] acc_3 = 32'b00000000000000000000000000000000;
reg   [31:0] acc_4 = 32'b00000000000000000000000000000000;
reg   [31:0] acc_5 = 32'b00000000000000000000000000000000;
reg   [31:0] acc_6 = 32'b00000000000000000000000000000000;
reg   [31:0] acc_7 = 32'b00000000000000000000000000000000;
wire    axi_interfaces_AXILiteS_s_axi_U_ap_dummy_ce;
wire   [4:0] tmp_11_fu_437_p1;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_126;
reg    ap_sig_bdd_145;
reg    ap_sig_ioackin_d_o_0_TREADY;
reg    ap_sig_ioackin_d_o_1_TREADY;
reg    ap_sig_ioackin_d_o_2_TREADY;
reg    ap_sig_ioackin_d_o_3_TREADY;
reg    ap_sig_ioackin_d_o_4_TREADY;
reg    ap_sig_ioackin_d_o_5_TREADY;
reg    ap_sig_ioackin_d_o_6_TREADY;
reg    ap_sig_ioackin_d_o_7_TREADY;
wire   [0:0] exitcond_fu_441_p2;
reg   [4:0] i1_reg_213;
wire  signed [31:0] tmp_3_fu_239_p2;
wire  signed [31:0] tmp_3_1_fu_264_p2;
wire  signed [31:0] tmp_3_2_fu_289_p2;
wire  signed [31:0] tmp_3_3_fu_314_p2;
wire  signed [31:0] tmp_3_4_fu_339_p2;
wire  signed [31:0] tmp_3_5_fu_364_p2;
wire  signed [31:0] tmp_3_6_fu_389_p2;
wire  signed [31:0] tmp_3_7_fu_414_p2;
reg    ap_reg_ioackin_d_o_0_TREADY = 1'b0;
reg    ap_reg_ioackin_d_o_1_TREADY = 1'b0;
reg    ap_reg_ioackin_d_o_2_TREADY = 1'b0;
reg    ap_reg_ioackin_d_o_3_TREADY = 1'b0;
reg    ap_reg_ioackin_d_o_4_TREADY = 1'b0;
reg    ap_reg_ioackin_d_o_5_TREADY = 1'b0;
reg    ap_reg_ioackin_d_o_6_TREADY = 1'b0;
reg    ap_reg_ioackin_d_o_7_TREADY = 1'b0;
wire  signed [31:0] tmp_2_fu_235_p1;
wire  signed [31:0] tmp_2_1_fu_260_p1;
wire  signed [31:0] tmp_2_2_fu_285_p1;
wire  signed [31:0] tmp_2_3_fu_310_p1;
wire  signed [31:0] tmp_2_4_fu_335_p1;
wire  signed [31:0] tmp_2_5_fu_360_p1;
wire  signed [31:0] tmp_2_6_fu_385_p1;
wire  signed [31:0] tmp_2_7_fu_410_p1;
wire   [5:0] i1_cast_fu_227_p1;
wire   [5:0] i_1_7_fu_431_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_sig_bdd_363;
reg    ap_sig_bdd_365;
reg    ap_sig_bdd_367;
reg    ap_sig_bdd_369;
reg    ap_sig_bdd_371;
reg    ap_sig_bdd_373;
reg    ap_sig_bdd_375;
reg    ap_sig_bdd_377;


axi_interfaces_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
axi_interfaces_AXILiteS_s_axi_U(
    .AWVALID( s_axi_AXILiteS_AWVALID ),
    .AWREADY( s_axi_AXILiteS_AWREADY ),
    .AWADDR( s_axi_AXILiteS_AWADDR ),
    .WVALID( s_axi_AXILiteS_WVALID ),
    .WREADY( s_axi_AXILiteS_WREADY ),
    .WDATA( s_axi_AXILiteS_WDATA ),
    .WSTRB( s_axi_AXILiteS_WSTRB ),
    .ARVALID( s_axi_AXILiteS_ARVALID ),
    .ARREADY( s_axi_AXILiteS_ARREADY ),
    .ARADDR( s_axi_AXILiteS_ARADDR ),
    .RVALID( s_axi_AXILiteS_RVALID ),
    .RREADY( s_axi_AXILiteS_RREADY ),
    .RDATA( s_axi_AXILiteS_RDATA ),
    .RRESP( s_axi_AXILiteS_RRESP ),
    .BVALID( s_axi_AXILiteS_BVALID ),
    .BREADY( s_axi_AXILiteS_BREADY ),
    .BRESP( s_axi_AXILiteS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( axi_interfaces_AXILiteS_s_axi_U_ap_dummy_ce ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ioackin_d_o_0_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_d_o_0_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_0_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            if (~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY))) begin
                ap_reg_ioackin_d_o_0_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_363) begin
                ap_reg_ioackin_d_o_0_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_d_o_1_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_d_o_1_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_1_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            if (~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY))) begin
                ap_reg_ioackin_d_o_1_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_365) begin
                ap_reg_ioackin_d_o_1_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_d_o_2_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_d_o_2_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_2_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            if (~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY))) begin
                ap_reg_ioackin_d_o_2_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_367) begin
                ap_reg_ioackin_d_o_2_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_d_o_3_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_d_o_3_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_3_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            if (~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY))) begin
                ap_reg_ioackin_d_o_3_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_369) begin
                ap_reg_ioackin_d_o_3_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_d_o_4_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_d_o_4_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_4_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            if (~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY))) begin
                ap_reg_ioackin_d_o_4_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_371) begin
                ap_reg_ioackin_d_o_4_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_d_o_5_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_d_o_5_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_5_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            if (~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY))) begin
                ap_reg_ioackin_d_o_5_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_373) begin
                ap_reg_ioackin_d_o_5_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_d_o_6_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_d_o_6_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_6_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            if (~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY))) begin
                ap_reg_ioackin_d_o_6_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_375) begin
                ap_reg_ioackin_d_o_6_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// ap_reg_ioackin_d_o_7_TREADY assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ioackin_d_o_7_TREADY
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_d_o_7_TREADY <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
            if (~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY))) begin
                ap_reg_ioackin_d_o_7_TREADY <= ap_const_logic_0;
            end else if (ap_sig_bdd_377) begin
                ap_reg_ioackin_d_o_7_TREADY <= ap_const_logic_1;
            end
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)) & (ap_const_lv1_0 == exitcond_fu_441_p2))) begin
        i1_reg_213 <= tmp_11_fu_437_p1;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)) & ~(ap_const_lv1_0 == exitcond_fu_441_p2)))) begin
        i1_reg_213 <= ap_const_lv5_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)))) begin
        acc_0 <= tmp_3_fu_239_p2;
        acc_1 <= tmp_3_1_fu_264_p2;
        acc_2 <= tmp_3_2_fu_289_p2;
        acc_3 <= tmp_3_3_fu_314_p2;
        acc_4 <= tmp_3_4_fu_339_p2;
        acc_5 <= tmp_3_5_fu_364_p2;
        acc_6 <= tmp_3_6_fu_389_p2;
        acc_7 <= tmp_3_7_fu_414_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY or exitcond_fu_441_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)) & ~(ap_const_lv1_0 == exitcond_fu_441_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY or exitcond_fu_441_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)) & ~(ap_const_lv1_0 == exitcond_fu_441_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_43)
begin
    if (ap_sig_bdd_43) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_126)
begin
    if (ap_sig_bdd_126) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_ioackin_d_o_0_TREADY assign process. ///
always @ (d_o_0_TREADY or ap_reg_ioackin_d_o_0_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_d_o_0_TREADY)) begin
        ap_sig_ioackin_d_o_0_TREADY = d_o_0_TREADY;
    end else begin
        ap_sig_ioackin_d_o_0_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_d_o_1_TREADY assign process. ///
always @ (d_o_1_TREADY or ap_reg_ioackin_d_o_1_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_d_o_1_TREADY)) begin
        ap_sig_ioackin_d_o_1_TREADY = d_o_1_TREADY;
    end else begin
        ap_sig_ioackin_d_o_1_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_d_o_2_TREADY assign process. ///
always @ (d_o_2_TREADY or ap_reg_ioackin_d_o_2_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_d_o_2_TREADY)) begin
        ap_sig_ioackin_d_o_2_TREADY = d_o_2_TREADY;
    end else begin
        ap_sig_ioackin_d_o_2_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_d_o_3_TREADY assign process. ///
always @ (d_o_3_TREADY or ap_reg_ioackin_d_o_3_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_d_o_3_TREADY)) begin
        ap_sig_ioackin_d_o_3_TREADY = d_o_3_TREADY;
    end else begin
        ap_sig_ioackin_d_o_3_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_d_o_4_TREADY assign process. ///
always @ (d_o_4_TREADY or ap_reg_ioackin_d_o_4_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_d_o_4_TREADY)) begin
        ap_sig_ioackin_d_o_4_TREADY = d_o_4_TREADY;
    end else begin
        ap_sig_ioackin_d_o_4_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_d_o_5_TREADY assign process. ///
always @ (d_o_5_TREADY or ap_reg_ioackin_d_o_5_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_d_o_5_TREADY)) begin
        ap_sig_ioackin_d_o_5_TREADY = d_o_5_TREADY;
    end else begin
        ap_sig_ioackin_d_o_5_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_d_o_6_TREADY assign process. ///
always @ (d_o_6_TREADY or ap_reg_ioackin_d_o_6_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_d_o_6_TREADY)) begin
        ap_sig_ioackin_d_o_6_TREADY = d_o_6_TREADY;
    end else begin
        ap_sig_ioackin_d_o_6_TREADY = ap_const_logic_1;
    end
end

/// ap_sig_ioackin_d_o_7_TREADY assign process. ///
always @ (d_o_7_TREADY or ap_reg_ioackin_d_o_7_TREADY)
begin
    if ((ap_const_logic_0 == ap_reg_ioackin_d_o_7_TREADY)) begin
        ap_sig_ioackin_d_o_7_TREADY = d_o_7_TREADY;
    end else begin
        ap_sig_ioackin_d_o_7_TREADY = ap_const_logic_1;
    end
end

/// d_i_0_TREADY assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)))) begin
        d_i_0_TREADY = ap_const_logic_1;
    end else begin
        d_i_0_TREADY = ap_const_logic_0;
    end
end

/// d_i_1_TREADY assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)))) begin
        d_i_1_TREADY = ap_const_logic_1;
    end else begin
        d_i_1_TREADY = ap_const_logic_0;
    end
end

/// d_i_2_TREADY assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)))) begin
        d_i_2_TREADY = ap_const_logic_1;
    end else begin
        d_i_2_TREADY = ap_const_logic_0;
    end
end

/// d_i_3_TREADY assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)))) begin
        d_i_3_TREADY = ap_const_logic_1;
    end else begin
        d_i_3_TREADY = ap_const_logic_0;
    end
end

/// d_i_4_TREADY assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)))) begin
        d_i_4_TREADY = ap_const_logic_1;
    end else begin
        d_i_4_TREADY = ap_const_logic_0;
    end
end

/// d_i_5_TREADY assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)))) begin
        d_i_5_TREADY = ap_const_logic_1;
    end else begin
        d_i_5_TREADY = ap_const_logic_0;
    end
end

/// d_i_6_TREADY assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)))) begin
        d_i_6_TREADY = ap_const_logic_1;
    end else begin
        d_i_6_TREADY = ap_const_logic_0;
    end
end

/// d_i_7_TREADY assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_bdd_145 | (ap_const_logic_0 == ap_sig_ioackin_d_o_0_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_1_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_2_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_3_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_4_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_5_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_6_TREADY) | (ap_const_logic_0 == ap_sig_ioackin_d_o_7_TREADY)))) begin
        d_i_7_TREADY = ap_const_logic_1;
    end else begin
        d_i_7_TREADY = ap_const_logic_0;
    end
end

/// d_o_0_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_reg_ioackin_d_o_0_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_145 & (ap_const_logic_0 == ap_reg_ioackin_d_o_0_TREADY))) begin
        d_o_0_TVALID = ap_const_logic_1;
    end else begin
        d_o_0_TVALID = ap_const_logic_0;
    end
end

/// d_o_1_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_reg_ioackin_d_o_1_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_145 & (ap_const_logic_0 == ap_reg_ioackin_d_o_1_TREADY))) begin
        d_o_1_TVALID = ap_const_logic_1;
    end else begin
        d_o_1_TVALID = ap_const_logic_0;
    end
end

/// d_o_2_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_reg_ioackin_d_o_2_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_145 & (ap_const_logic_0 == ap_reg_ioackin_d_o_2_TREADY))) begin
        d_o_2_TVALID = ap_const_logic_1;
    end else begin
        d_o_2_TVALID = ap_const_logic_0;
    end
end

/// d_o_3_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_reg_ioackin_d_o_3_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_145 & (ap_const_logic_0 == ap_reg_ioackin_d_o_3_TREADY))) begin
        d_o_3_TVALID = ap_const_logic_1;
    end else begin
        d_o_3_TVALID = ap_const_logic_0;
    end
end

/// d_o_4_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_reg_ioackin_d_o_4_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_145 & (ap_const_logic_0 == ap_reg_ioackin_d_o_4_TREADY))) begin
        d_o_4_TVALID = ap_const_logic_1;
    end else begin
        d_o_4_TVALID = ap_const_logic_0;
    end
end

/// d_o_5_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_reg_ioackin_d_o_5_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_145 & (ap_const_logic_0 == ap_reg_ioackin_d_o_5_TREADY))) begin
        d_o_5_TVALID = ap_const_logic_1;
    end else begin
        d_o_5_TVALID = ap_const_logic_0;
    end
end

/// d_o_6_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_reg_ioackin_d_o_6_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_145 & (ap_const_logic_0 == ap_reg_ioackin_d_o_6_TREADY))) begin
        d_o_6_TVALID = ap_const_logic_1;
    end else begin
        d_o_6_TVALID = ap_const_logic_0;
    end
end

/// d_o_7_TVALID assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_bdd_145 or ap_reg_ioackin_d_o_7_TREADY)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_bdd_145 & (ap_const_logic_0 == ap_reg_ioackin_d_o_7_TREADY))) begin
        d_o_7_TVALID = ap_const_logic_1;
    end else begin
        d_o_7_TVALID = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or ap_sig_bdd_145 or ap_sig_ioackin_d_o_0_TREADY or ap_sig_ioackin_d_o_1_TREADY or ap_sig_ioackin_d_o_2_TREADY or ap_sig_ioackin_d_o_3_TREADY or ap_sig_ioackin_d_o_4_TREADY or ap_sig_ioackin_d_o_5_TREADY or ap_sig_ioackin_d_o_6_TREADY or ap_sig_ioackin_d_o_7_TREADY)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end

/// ap_sig_bdd_126 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_126 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_145 assign process. ///
always @ (ap_start or d_i_0_TVALID or d_i_1_TVALID or d_i_2_TVALID or d_i_3_TVALID or d_i_4_TVALID or d_i_5_TVALID or d_i_6_TVALID or d_i_7_TVALID)
begin
    ap_sig_bdd_145 = ((d_i_0_TVALID == ap_const_logic_0) | (d_i_1_TVALID == ap_const_logic_0) | (d_i_2_TVALID == ap_const_logic_0) | (d_i_3_TVALID == ap_const_logic_0) | (d_i_4_TVALID == ap_const_logic_0) | (d_i_5_TVALID == ap_const_logic_0) | (d_i_6_TVALID == ap_const_logic_0) | (d_i_7_TVALID == ap_const_logic_0) | (ap_start == ap_const_logic_0));
end

/// ap_sig_bdd_363 assign process. ///
always @ (d_o_0_TREADY or ap_sig_bdd_145)
begin
    ap_sig_bdd_363 = (~ap_sig_bdd_145 & (ap_const_logic_1 == d_o_0_TREADY));
end

/// ap_sig_bdd_365 assign process. ///
always @ (d_o_1_TREADY or ap_sig_bdd_145)
begin
    ap_sig_bdd_365 = (~ap_sig_bdd_145 & (ap_const_logic_1 == d_o_1_TREADY));
end

/// ap_sig_bdd_367 assign process. ///
always @ (d_o_2_TREADY or ap_sig_bdd_145)
begin
    ap_sig_bdd_367 = (~ap_sig_bdd_145 & (ap_const_logic_1 == d_o_2_TREADY));
end

/// ap_sig_bdd_369 assign process. ///
always @ (d_o_3_TREADY or ap_sig_bdd_145)
begin
    ap_sig_bdd_369 = (~ap_sig_bdd_145 & (ap_const_logic_1 == d_o_3_TREADY));
end

/// ap_sig_bdd_371 assign process. ///
always @ (d_o_4_TREADY or ap_sig_bdd_145)
begin
    ap_sig_bdd_371 = (~ap_sig_bdd_145 & (ap_const_logic_1 == d_o_4_TREADY));
end

/// ap_sig_bdd_373 assign process. ///
always @ (d_o_5_TREADY or ap_sig_bdd_145)
begin
    ap_sig_bdd_373 = (~ap_sig_bdd_145 & (ap_const_logic_1 == d_o_5_TREADY));
end

/// ap_sig_bdd_375 assign process. ///
always @ (d_o_6_TREADY or ap_sig_bdd_145)
begin
    ap_sig_bdd_375 = (~ap_sig_bdd_145 & (ap_const_logic_1 == d_o_6_TREADY));
end

/// ap_sig_bdd_377 assign process. ///
always @ (d_o_7_TREADY or ap_sig_bdd_145)
begin
    ap_sig_bdd_377 = (~ap_sig_bdd_145 & (ap_const_logic_1 == d_o_7_TREADY));
end

/// ap_sig_bdd_43 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_43 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end
assign axi_interfaces_AXILiteS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign d_o_0_TDATA = tmp_3_fu_239_p2[15:0];
assign d_o_1_TDATA = tmp_3_1_fu_264_p2[15:0];
assign d_o_2_TDATA = tmp_3_2_fu_289_p2[15:0];
assign d_o_3_TDATA = tmp_3_3_fu_314_p2[15:0];
assign d_o_4_TDATA = tmp_3_4_fu_339_p2[15:0];
assign d_o_5_TDATA = tmp_3_5_fu_364_p2[15:0];
assign d_o_6_TDATA = tmp_3_6_fu_389_p2[15:0];
assign d_o_7_TDATA = tmp_3_7_fu_414_p2[15:0];
assign exitcond_fu_441_p2 = (i_1_7_fu_431_p2 == ap_const_lv6_20? 1'b1: 1'b0);
assign i1_cast_fu_227_p1 = i1_reg_213;
assign i_1_7_fu_431_p2 = (ap_const_lv6_8 + i1_cast_fu_227_p1);
assign tmp_11_fu_437_p1 = i_1_7_fu_431_p2[4:0];
assign tmp_2_1_fu_260_p1 = $signed(d_i_1_TDATA);
assign tmp_2_2_fu_285_p1 = $signed(d_i_2_TDATA);
assign tmp_2_3_fu_310_p1 = $signed(d_i_3_TDATA);
assign tmp_2_4_fu_335_p1 = $signed(d_i_4_TDATA);
assign tmp_2_5_fu_360_p1 = $signed(d_i_5_TDATA);
assign tmp_2_6_fu_385_p1 = $signed(d_i_6_TDATA);
assign tmp_2_7_fu_410_p1 = $signed(d_i_7_TDATA);
assign tmp_2_fu_235_p1 = $signed(d_i_0_TDATA);
assign tmp_3_1_fu_264_p2 = ($signed(tmp_2_1_fu_260_p1) + $signed(acc_1));
assign tmp_3_2_fu_289_p2 = ($signed(tmp_2_2_fu_285_p1) + $signed(acc_2));
assign tmp_3_3_fu_314_p2 = ($signed(tmp_2_3_fu_310_p1) + $signed(acc_3));
assign tmp_3_4_fu_339_p2 = ($signed(tmp_2_4_fu_335_p1) + $signed(acc_4));
assign tmp_3_5_fu_364_p2 = ($signed(tmp_2_5_fu_360_p1) + $signed(acc_5));
assign tmp_3_6_fu_389_p2 = ($signed(tmp_2_6_fu_385_p1) + $signed(acc_6));
assign tmp_3_7_fu_414_p2 = ($signed(tmp_2_7_fu_410_p1) + $signed(acc_7));
assign tmp_3_fu_239_p2 = ($signed(tmp_2_fu_235_p1) + $signed(acc_0));


endmodule //axi_interfaces

