// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dct,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.790000,HLS_SYN_LAT=3959,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=1,HLS_SYN_FF=272,HLS_SYN_LUT=354}" *)

module dct (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 8'b1;
parameter    ap_ST_st2_fsm_1 = 8'b10;
parameter    ap_ST_st3_fsm_2 = 8'b100;
parameter    ap_ST_st4_fsm_3 = 8'b1000;
parameter    ap_ST_st5_fsm_4 = 8'b10000;
parameter    ap_ST_st6_fsm_5 = 8'b100000;
parameter    ap_ST_st7_fsm_6 = 8'b1000000;
parameter    ap_ST_st8_fsm_7 = 8'b10000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [5:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg output_r_ce0;
reg output_r_we0;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm = 8'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_24;
wire   [3:0] r_fu_162_p2;
reg   [3:0] r_reg_309;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_51;
wire   [5:0] tmp_i_fu_172_p3;
reg   [5:0] tmp_i_reg_314;
wire   [0:0] exitcond1_i_fu_156_p2;
wire   [7:0] p_addr_cast_fu_188_p1;
reg   [7:0] p_addr_cast_reg_319;
wire   [3:0] c_fu_202_p2;
reg   [3:0] c_reg_327;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_68;
wire   [0:0] exitcond_i_fu_196_p2;
wire   [7:0] p_addr1_fu_222_p2;
reg   [7:0] p_addr1_reg_337;
wire   [3:0] r_1_fu_237_p2;
reg   [3:0] r_1_reg_345;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_84;
wire   [5:0] tmp_i5_fu_247_p3;
reg   [5:0] tmp_i5_reg_350;
wire   [0:0] exitcond1_i3_fu_231_p2;
wire   [7:0] p_addr2_cast_fu_263_p1;
reg   [7:0] p_addr2_cast_reg_355;
wire   [3:0] c_1_fu_277_p2;
reg   [3:0] c_1_reg_363;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_100;
wire   [0:0] exitcond_i7_fu_271_p2;
wire   [5:0] tmp_9_i_fu_297_p2;
reg   [5:0] tmp_9_i_reg_373;
reg   [5:0] buf_2d_in_address0;
reg    buf_2d_in_ce0;
reg    buf_2d_in_we0;
wire   [15:0] buf_2d_in_d0;
wire   [15:0] buf_2d_in_q0;
reg   [5:0] buf_2d_out_address0;
reg    buf_2d_out_ce0;
reg    buf_2d_out_we0;
wire   [15:0] buf_2d_out_d0;
wire   [15:0] buf_2d_out_q0;
wire    grp_dct_dct_2d_fu_148_ap_start;
wire    grp_dct_dct_2d_fu_148_ap_done;
wire    grp_dct_dct_2d_fu_148_ap_idle;
wire    grp_dct_dct_2d_fu_148_ap_ready;
wire   [5:0] grp_dct_dct_2d_fu_148_in_block_address0;
wire    grp_dct_dct_2d_fu_148_in_block_ce0;
wire   [15:0] grp_dct_dct_2d_fu_148_in_block_q0;
wire   [5:0] grp_dct_dct_2d_fu_148_out_block_address0;
wire    grp_dct_dct_2d_fu_148_out_block_ce0;
wire    grp_dct_dct_2d_fu_148_out_block_we0;
wire   [15:0] grp_dct_dct_2d_fu_148_out_block_d0;
reg   [3:0] r_i_reg_104;
reg   [3:0] c_i_reg_115;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_156;
reg   [3:0] r_i2_reg_126;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_165;
reg   [3:0] c_i6_reg_137;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_179;
reg    grp_dct_dct_2d_fu_148_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_6_i_fu_213_p1;
wire   [63:0] tmp_4_fu_227_p1;
wire   [63:0] tmp_5_fu_292_p1;
wire   [63:0] tmp_3_i_fu_302_p1;
wire   [2:0] tmp_fu_168_p1;
wire   [6:0] tmp_1_fu_180_p3;
wire   [5:0] c_i_cast6_fu_192_p1;
wire   [5:0] tmp_5_i_fu_208_p2;
wire   [7:0] tmp_7_i_trn_cast_fu_218_p1;
wire   [2:0] tmp_2_fu_243_p1;
wire   [6:0] tmp_3_fu_255_p3;
wire   [7:0] tmp_8_i_trn_cast_fu_283_p1;
wire   [7:0] p_addr3_fu_287_p2;
wire   [5:0] c_i6_cast2_fu_267_p1;
reg   [7:0] ap_NS_fsm;


dct_dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_2d_in_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buf_2d_in_address0 ),
    .ce0( buf_2d_in_ce0 ),
    .we0( buf_2d_in_we0 ),
    .d0( buf_2d_in_d0 ),
    .q0( buf_2d_in_q0 )
);

dct_dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_2d_out_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buf_2d_out_address0 ),
    .ce0( buf_2d_out_ce0 ),
    .we0( buf_2d_out_we0 ),
    .d0( buf_2d_out_d0 ),
    .q0( buf_2d_out_q0 )
);

dct_dct_2d grp_dct_dct_2d_fu_148(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_dct_dct_2d_fu_148_ap_start ),
    .ap_done( grp_dct_dct_2d_fu_148_ap_done ),
    .ap_idle( grp_dct_dct_2d_fu_148_ap_idle ),
    .ap_ready( grp_dct_dct_2d_fu_148_ap_ready ),
    .in_block_address0( grp_dct_dct_2d_fu_148_in_block_address0 ),
    .in_block_ce0( grp_dct_dct_2d_fu_148_in_block_ce0 ),
    .in_block_q0( grp_dct_dct_2d_fu_148_in_block_q0 ),
    .out_block_address0( grp_dct_dct_2d_fu_148_out_block_address0 ),
    .out_block_ce0( grp_dct_dct_2d_fu_148_out_block_ce0 ),
    .out_block_we0( grp_dct_dct_2d_fu_148_out_block_we0 ),
    .out_block_d0( grp_dct_dct_2d_fu_148_out_block_d0 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_dct_dct_2d_fu_148_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_dct_dct_2d_fu_148_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_dct_dct_2d_fu_148_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond1_i_fu_156_p2 == ap_const_lv1_0))) begin
            grp_dct_dct_2d_fu_148_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_dct_dct_2d_fu_148_ap_ready)) begin
            grp_dct_dct_2d_fu_148_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        c_i6_reg_137 <= c_1_reg_363;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond1_i3_fu_231_p2))) begin
        c_i6_reg_137 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        c_i_reg_115 <= c_reg_327;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_i_fu_156_p2 == ap_const_lv1_0))) begin
        c_i_reg_115 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == exitcond_i7_fu_271_p2))) begin
        r_i2_reg_126 <= r_1_reg_345;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) & ~(ap_const_logic_0 == grp_dct_dct_2d_fu_148_ap_done))) begin
        r_i2_reg_126 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~(ap_const_lv1_0 == exitcond_i_fu_196_p2))) begin
        r_i_reg_104 <= r_reg_309;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        r_i_reg_104 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        c_1_reg_363 <= c_1_fu_277_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        c_reg_327 <= c_fu_202_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond_i_fu_196_p2))) begin
        p_addr1_reg_337 <= p_addr1_fu_222_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & (ap_const_lv1_0 == exitcond1_i3_fu_231_p2))) begin
        p_addr2_cast_reg_355[6 : 3] <= p_addr2_cast_fu_263_p1[6 : 3];
        tmp_i5_reg_350[5 : 3] <= tmp_i5_fu_247_p3[5 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond1_i_fu_156_p2 == ap_const_lv1_0))) begin
        p_addr_cast_reg_319[6 : 3] <= p_addr_cast_fu_188_p1[6 : 3];
        tmp_i_reg_314[5 : 3] <= tmp_i_fu_172_p3[5 : 3];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        r_1_reg_345 <= r_1_fu_237_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        r_reg_309 <= r_fu_162_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == exitcond_i7_fu_271_p2))) begin
        tmp_9_i_reg_373 <= tmp_9_i_fu_297_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or exitcond1_i3_fu_231_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond1_i3_fu_231_p2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5 or exitcond1_i3_fu_231_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) & ~(ap_const_lv1_0 == exitcond1_i3_fu_231_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_24)
begin
    if (ap_sig_bdd_24) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_51)
begin
    if (ap_sig_bdd_51) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_68)
begin
    if (ap_sig_bdd_68) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_156)
begin
    if (ap_sig_bdd_156) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_165)
begin
    if (ap_sig_bdd_165) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_84)
begin
    if (ap_sig_bdd_84) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_100)
begin
    if (ap_sig_bdd_100) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_179)
begin
    if (ap_sig_bdd_179) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// buf_2d_in_address0 assign process. ///
always @ (grp_dct_dct_2d_fu_148_in_block_address0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4 or tmp_4_fu_227_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        buf_2d_in_address0 = tmp_4_fu_227_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        buf_2d_in_address0 = grp_dct_dct_2d_fu_148_in_block_address0;
    end else begin
        buf_2d_in_address0 = 'bx;
    end
end

/// buf_2d_in_ce0 assign process. ///
always @ (grp_dct_dct_2d_fu_148_in_block_ce0 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        buf_2d_in_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        buf_2d_in_ce0 = grp_dct_dct_2d_fu_148_in_block_ce0;
    end else begin
        buf_2d_in_ce0 = ap_const_logic_0;
    end
end

/// buf_2d_in_we0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        buf_2d_in_we0 = ap_const_logic_1;
    end else begin
        buf_2d_in_we0 = ap_const_logic_0;
    end
end

/// buf_2d_out_address0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_dct_dct_2d_fu_148_out_block_address0 or ap_sig_cseq_ST_st5_fsm_4 or tmp_5_fu_292_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        buf_2d_out_address0 = tmp_5_fu_292_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        buf_2d_out_address0 = grp_dct_dct_2d_fu_148_out_block_address0;
    end else begin
        buf_2d_out_address0 = 'bx;
    end
end

/// buf_2d_out_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or grp_dct_dct_2d_fu_148_out_block_ce0 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        buf_2d_out_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        buf_2d_out_ce0 = grp_dct_dct_2d_fu_148_out_block_ce0;
    end else begin
        buf_2d_out_ce0 = ap_const_logic_0;
    end
end

/// buf_2d_out_we0 assign process. ///
always @ (grp_dct_dct_2d_fu_148_out_block_we0 or ap_sig_cseq_ST_st5_fsm_4)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        buf_2d_out_we0 = grp_dct_dct_2d_fu_148_out_block_we0;
    end else begin
        buf_2d_out_we0 = ap_const_logic_0;
    end
end

/// input_r_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        input_r_ce0 = ap_const_logic_1;
    end else begin
        input_r_ce0 = ap_const_logic_0;
    end
end

/// output_r_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        output_r_ce0 = ap_const_logic_1;
    end else begin
        output_r_ce0 = ap_const_logic_0;
    end
end

/// output_r_we0 assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_7)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        output_r_we0 = ap_const_logic_1;
    end else begin
        output_r_we0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond1_i_fu_156_p2 or exitcond_i_fu_196_p2 or exitcond1_i3_fu_231_p2 or exitcond_i7_fu_271_p2 or grp_dct_dct_2d_fu_148_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((exitcond1_i_fu_156_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_i_fu_196_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st5_fsm_4 : 
        begin
            if (~(ap_const_logic_0 == grp_dct_dct_2d_fu_148_ap_done)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_i3_fu_231_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_i7_fu_271_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_100 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_100 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_156 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_156 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_165 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_165 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_179 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_179 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_24 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_24 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_51 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_51 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_68 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_68 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_84 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_84 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end
assign buf_2d_in_d0 = input_r_q0;
assign buf_2d_out_d0 = grp_dct_dct_2d_fu_148_out_block_d0;
assign c_1_fu_277_p2 = (c_i6_reg_137 + ap_const_lv4_1);
assign c_fu_202_p2 = (c_i_reg_115 + ap_const_lv4_1);
assign c_i6_cast2_fu_267_p1 = c_i6_reg_137;
assign c_i_cast6_fu_192_p1 = c_i_reg_115;
assign exitcond1_i3_fu_231_p2 = (r_i2_reg_126 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond1_i_fu_156_p2 = (r_i_reg_104 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond_i7_fu_271_p2 = (c_i6_reg_137 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond_i_fu_196_p2 = (c_i_reg_115 == ap_const_lv4_8? 1'b1: 1'b0);
assign grp_dct_dct_2d_fu_148_ap_start = grp_dct_dct_2d_fu_148_ap_start_ap_start_reg;
assign grp_dct_dct_2d_fu_148_in_block_q0 = buf_2d_in_q0;
assign input_r_address0 = tmp_6_i_fu_213_p1;
assign output_r_address0 = tmp_3_i_fu_302_p1;
assign output_r_d0 = buf_2d_out_q0;
assign p_addr1_fu_222_p2 = (tmp_7_i_trn_cast_fu_218_p1 + p_addr_cast_reg_319);
assign p_addr2_cast_fu_263_p1 = tmp_3_fu_255_p3;
assign p_addr3_fu_287_p2 = (tmp_8_i_trn_cast_fu_283_p1 + p_addr2_cast_reg_355);
assign p_addr_cast_fu_188_p1 = tmp_1_fu_180_p3;
assign r_1_fu_237_p2 = (r_i2_reg_126 + ap_const_lv4_1);
assign r_fu_162_p2 = (r_i_reg_104 + ap_const_lv4_1);
assign tmp_1_fu_180_p3 = {{r_i_reg_104}, {ap_const_lv3_0}};
assign tmp_2_fu_243_p1 = r_i2_reg_126[2:0];
assign tmp_3_fu_255_p3 = {{r_i2_reg_126}, {ap_const_lv3_0}};
assign tmp_3_i_fu_302_p1 = tmp_9_i_reg_373;
assign tmp_4_fu_227_p1 = p_addr1_reg_337;
assign tmp_5_fu_292_p1 = p_addr3_fu_287_p2;
assign tmp_5_i_fu_208_p2 = (tmp_i_reg_314 + c_i_cast6_fu_192_p1);
assign tmp_6_i_fu_213_p1 = tmp_5_i_fu_208_p2;
assign tmp_7_i_trn_cast_fu_218_p1 = c_i_reg_115;
assign tmp_8_i_trn_cast_fu_283_p1 = c_i6_reg_137;
assign tmp_9_i_fu_297_p2 = (tmp_i5_reg_350 + c_i6_cast2_fu_267_p1);
assign tmp_fu_168_p1 = r_i_reg_104[2:0];
assign tmp_i5_fu_247_p3 = {{tmp_2_fu_243_p1}, {ap_const_lv3_0}};
assign tmp_i_fu_172_p3 = {{tmp_fu_168_p1}, {ap_const_lv3_0}};
always @ (posedge ap_clk)
begin
    tmp_i_reg_314[2:0] <= 3'b000;
    p_addr_cast_reg_319[2:0] <= 3'b000;
    p_addr_cast_reg_319[7] <= 1'b0;
    tmp_i5_reg_350[2:0] <= 3'b000;
    p_addr2_cast_reg_355[2:0] <= 3'b000;
    p_addr2_cast_reg_355[7] <= 1'b0;
end



endmodule //dct

