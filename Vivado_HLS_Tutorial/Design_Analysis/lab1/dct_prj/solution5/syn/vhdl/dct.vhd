-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dct is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    input_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_we0 : OUT STD_LOGIC;
    input_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_we1 : OUT STD_LOGIC;
    output_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_we0 : OUT STD_LOGIC;
    output_r_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    output_r_ce1 : OUT STD_LOGIC;
    output_r_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r_we1 : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC );
end;


architecture behav of dct is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "dct,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.930000,HLS_SYN_LAT=507,HLS_SYN_TPT=374,HLS_SYN_MEM=4,HLS_SYN_DSP=8,HLS_SYN_FF=1509,HLS_SYN_LUT=621}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_true : BOOLEAN := true;

    signal buf_2d_in_0_i_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_0_i_ce0 : STD_LOGIC;
    signal buf_2d_in_0_i_we0 : STD_LOGIC;
    signal buf_2d_in_0_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_0_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_0_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_0_t_ce0 : STD_LOGIC;
    signal buf_2d_in_0_t_we0 : STD_LOGIC;
    signal buf_2d_in_0_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_0_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_0_U_ap_dummy_ce : STD_LOGIC;
    signal buf_2d_in_1_i_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_1_i_ce0 : STD_LOGIC;
    signal buf_2d_in_1_i_we0 : STD_LOGIC;
    signal buf_2d_in_1_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_1_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_1_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_1_t_ce0 : STD_LOGIC;
    signal buf_2d_in_1_t_we0 : STD_LOGIC;
    signal buf_2d_in_1_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_1_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_1_U_ap_dummy_ce : STD_LOGIC;
    signal buf_2d_in_2_i_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_2_i_ce0 : STD_LOGIC;
    signal buf_2d_in_2_i_we0 : STD_LOGIC;
    signal buf_2d_in_2_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_2_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_2_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_2_t_ce0 : STD_LOGIC;
    signal buf_2d_in_2_t_we0 : STD_LOGIC;
    signal buf_2d_in_2_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_2_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_2_U_ap_dummy_ce : STD_LOGIC;
    signal buf_2d_in_3_i_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_3_i_ce0 : STD_LOGIC;
    signal buf_2d_in_3_i_we0 : STD_LOGIC;
    signal buf_2d_in_3_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_3_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_3_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_3_t_ce0 : STD_LOGIC;
    signal buf_2d_in_3_t_we0 : STD_LOGIC;
    signal buf_2d_in_3_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_3_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_3_U_ap_dummy_ce : STD_LOGIC;
    signal buf_2d_in_4_i_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_4_i_ce0 : STD_LOGIC;
    signal buf_2d_in_4_i_we0 : STD_LOGIC;
    signal buf_2d_in_4_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_4_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_4_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_4_t_ce0 : STD_LOGIC;
    signal buf_2d_in_4_t_we0 : STD_LOGIC;
    signal buf_2d_in_4_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_4_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_4_U_ap_dummy_ce : STD_LOGIC;
    signal buf_2d_in_5_i_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_5_i_ce0 : STD_LOGIC;
    signal buf_2d_in_5_i_we0 : STD_LOGIC;
    signal buf_2d_in_5_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_5_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_5_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_5_t_ce0 : STD_LOGIC;
    signal buf_2d_in_5_t_we0 : STD_LOGIC;
    signal buf_2d_in_5_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_5_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_5_U_ap_dummy_ce : STD_LOGIC;
    signal buf_2d_in_6_i_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_6_i_ce0 : STD_LOGIC;
    signal buf_2d_in_6_i_we0 : STD_LOGIC;
    signal buf_2d_in_6_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_6_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_6_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_6_t_ce0 : STD_LOGIC;
    signal buf_2d_in_6_t_we0 : STD_LOGIC;
    signal buf_2d_in_6_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_6_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_6_U_ap_dummy_ce : STD_LOGIC;
    signal buf_2d_in_7_i_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_7_i_ce0 : STD_LOGIC;
    signal buf_2d_in_7_i_we0 : STD_LOGIC;
    signal buf_2d_in_7_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_7_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_7_t_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal buf_2d_in_7_t_ce0 : STD_LOGIC;
    signal buf_2d_in_7_t_we0 : STD_LOGIC;
    signal buf_2d_in_7_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_7_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_in_7_U_ap_dummy_ce : STD_LOGIC;
    signal buf_2d_out_i_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2d_out_i_ce0 : STD_LOGIC;
    signal buf_2d_out_i_we0 : STD_LOGIC;
    signal buf_2d_out_i_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_i_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal buf_2d_out_t_ce0 : STD_LOGIC;
    signal buf_2d_out_t_we0 : STD_LOGIC;
    signal buf_2d_out_t_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_t_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal buf_2d_out_U_ap_dummy_ce : STD_LOGIC;
    signal dct_read_data_U0_ap_start : STD_LOGIC;
    signal dct_read_data_U0_ap_done : STD_LOGIC;
    signal dct_read_data_U0_ap_continue : STD_LOGIC;
    signal dct_read_data_U0_ap_idle : STD_LOGIC;
    signal dct_read_data_U0_ap_ready : STD_LOGIC;
    signal dct_read_data_U0_input_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_read_data_U0_input_r_ce0 : STD_LOGIC;
    signal dct_read_data_U0_input_r_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_read_data_U0_buf_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_read_data_U0_buf_0_ce0 : STD_LOGIC;
    signal dct_read_data_U0_buf_0_we0 : STD_LOGIC;
    signal dct_read_data_U0_buf_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_read_data_U0_buf_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_read_data_U0_buf_1_ce0 : STD_LOGIC;
    signal dct_read_data_U0_buf_1_we0 : STD_LOGIC;
    signal dct_read_data_U0_buf_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_read_data_U0_buf_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_read_data_U0_buf_2_ce0 : STD_LOGIC;
    signal dct_read_data_U0_buf_2_we0 : STD_LOGIC;
    signal dct_read_data_U0_buf_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_read_data_U0_buf_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_read_data_U0_buf_3_ce0 : STD_LOGIC;
    signal dct_read_data_U0_buf_3_we0 : STD_LOGIC;
    signal dct_read_data_U0_buf_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_read_data_U0_buf_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_read_data_U0_buf_4_ce0 : STD_LOGIC;
    signal dct_read_data_U0_buf_4_we0 : STD_LOGIC;
    signal dct_read_data_U0_buf_4_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_read_data_U0_buf_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_read_data_U0_buf_5_ce0 : STD_LOGIC;
    signal dct_read_data_U0_buf_5_we0 : STD_LOGIC;
    signal dct_read_data_U0_buf_5_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_read_data_U0_buf_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_read_data_U0_buf_6_ce0 : STD_LOGIC;
    signal dct_read_data_U0_buf_6_we0 : STD_LOGIC;
    signal dct_read_data_U0_buf_6_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_read_data_U0_buf_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_read_data_U0_buf_7_ce0 : STD_LOGIC;
    signal dct_read_data_U0_buf_7_we0 : STD_LOGIC;
    signal dct_read_data_U0_buf_7_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_chn_write_dct_read_data_U0_buf_2d_in_5 : STD_LOGIC;
    signal dct_read_data_U0_buf_5_pipo_status : STD_LOGIC;
    signal ap_reg_ready_dct_read_data_U0_buf_5_pipo_status : STD_LOGIC := '0';
    signal ap_sig_ready_dct_read_data_U0_buf_5_pipo_status : STD_LOGIC;
    signal ap_chn_write_dct_read_data_U0_buf_2d_in_1 : STD_LOGIC;
    signal dct_read_data_U0_buf_1_pipo_status : STD_LOGIC;
    signal ap_reg_ready_dct_read_data_U0_buf_1_pipo_status : STD_LOGIC := '0';
    signal ap_sig_ready_dct_read_data_U0_buf_1_pipo_status : STD_LOGIC;
    signal ap_chn_write_dct_read_data_U0_buf_2d_in_2 : STD_LOGIC;
    signal dct_read_data_U0_buf_2_pipo_status : STD_LOGIC;
    signal ap_reg_ready_dct_read_data_U0_buf_2_pipo_status : STD_LOGIC := '0';
    signal ap_sig_ready_dct_read_data_U0_buf_2_pipo_status : STD_LOGIC;
    signal ap_chn_write_dct_read_data_U0_buf_2d_in_4 : STD_LOGIC;
    signal dct_read_data_U0_buf_4_pipo_status : STD_LOGIC;
    signal ap_reg_ready_dct_read_data_U0_buf_4_pipo_status : STD_LOGIC := '0';
    signal ap_sig_ready_dct_read_data_U0_buf_4_pipo_status : STD_LOGIC;
    signal ap_chn_write_dct_read_data_U0_buf_2d_in_6 : STD_LOGIC;
    signal dct_read_data_U0_buf_6_pipo_status : STD_LOGIC;
    signal ap_reg_ready_dct_read_data_U0_buf_6_pipo_status : STD_LOGIC := '0';
    signal ap_sig_ready_dct_read_data_U0_buf_6_pipo_status : STD_LOGIC;
    signal ap_chn_write_dct_read_data_U0_buf_2d_in_3 : STD_LOGIC;
    signal dct_read_data_U0_buf_3_pipo_status : STD_LOGIC;
    signal ap_reg_ready_dct_read_data_U0_buf_3_pipo_status : STD_LOGIC := '0';
    signal ap_sig_ready_dct_read_data_U0_buf_3_pipo_status : STD_LOGIC;
    signal ap_chn_write_dct_read_data_U0_buf_2d_in_0 : STD_LOGIC;
    signal dct_read_data_U0_buf_0_pipo_status : STD_LOGIC;
    signal ap_reg_ready_dct_read_data_U0_buf_0_pipo_status : STD_LOGIC := '0';
    signal ap_sig_ready_dct_read_data_U0_buf_0_pipo_status : STD_LOGIC;
    signal ap_chn_write_dct_read_data_U0_buf_2d_in_7 : STD_LOGIC;
    signal dct_read_data_U0_buf_7_pipo_status : STD_LOGIC;
    signal ap_reg_ready_dct_read_data_U0_buf_7_pipo_status : STD_LOGIC := '0';
    signal ap_sig_ready_dct_read_data_U0_buf_7_pipo_status : STD_LOGIC;
    signal dct_dct_2d_U0_ap_start : STD_LOGIC;
    signal dct_dct_2d_U0_ap_done : STD_LOGIC;
    signal dct_dct_2d_U0_ap_continue : STD_LOGIC;
    signal dct_dct_2d_U0_ap_idle : STD_LOGIC;
    signal dct_dct_2d_U0_ap_ready : STD_LOGIC;
    signal dct_dct_2d_U0_in_block_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_dct_2d_U0_in_block_0_ce0 : STD_LOGIC;
    signal dct_dct_2d_U0_in_block_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_dct_2d_U0_in_block_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_dct_2d_U0_in_block_1_ce0 : STD_LOGIC;
    signal dct_dct_2d_U0_in_block_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_dct_2d_U0_in_block_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_dct_2d_U0_in_block_2_ce0 : STD_LOGIC;
    signal dct_dct_2d_U0_in_block_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_dct_2d_U0_in_block_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_dct_2d_U0_in_block_3_ce0 : STD_LOGIC;
    signal dct_dct_2d_U0_in_block_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_dct_2d_U0_in_block_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_dct_2d_U0_in_block_4_ce0 : STD_LOGIC;
    signal dct_dct_2d_U0_in_block_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_dct_2d_U0_in_block_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_dct_2d_U0_in_block_5_ce0 : STD_LOGIC;
    signal dct_dct_2d_U0_in_block_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_dct_2d_U0_in_block_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_dct_2d_U0_in_block_6_ce0 : STD_LOGIC;
    signal dct_dct_2d_U0_in_block_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_dct_2d_U0_in_block_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dct_dct_2d_U0_in_block_7_ce0 : STD_LOGIC;
    signal dct_dct_2d_U0_in_block_7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_dct_2d_U0_out_block_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_dct_2d_U0_out_block_ce0 : STD_LOGIC;
    signal dct_dct_2d_U0_out_block_we0 : STD_LOGIC;
    signal dct_dct_2d_U0_out_block_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_chn_write_dct_dct_2d_U0_buf_2d_out : STD_LOGIC;
    signal dct_dct_2d_U0_out_block_pipo_status : STD_LOGIC;
    signal dct_write_data_U0_ap_start : STD_LOGIC;
    signal dct_write_data_U0_ap_done : STD_LOGIC;
    signal dct_write_data_U0_ap_continue : STD_LOGIC;
    signal dct_write_data_U0_ap_idle : STD_LOGIC;
    signal dct_write_data_U0_ap_ready : STD_LOGIC;
    signal dct_write_data_U0_buf_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_write_data_U0_buf_r_ce0 : STD_LOGIC;
    signal dct_write_data_U0_buf_r_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal dct_write_data_U0_output_r_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dct_write_data_U0_output_r_ce0 : STD_LOGIC;
    signal dct_write_data_U0_output_r_we0 : STD_LOGIC;
    signal dct_write_data_U0_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_hs_continue : STD_LOGIC;
    signal buf_2d_in_0_i_full_n : STD_LOGIC;
    signal buf_2d_in_0_i_write : STD_LOGIC;
    signal buf_2d_in_0_t_empty_n : STD_LOGIC;
    signal buf_2d_in_0_t_read : STD_LOGIC;
    signal buf_2d_in_1_i_full_n : STD_LOGIC;
    signal buf_2d_in_1_i_write : STD_LOGIC;
    signal buf_2d_in_1_t_empty_n : STD_LOGIC;
    signal buf_2d_in_1_t_read : STD_LOGIC;
    signal buf_2d_in_2_i_full_n : STD_LOGIC;
    signal buf_2d_in_2_i_write : STD_LOGIC;
    signal buf_2d_in_2_t_empty_n : STD_LOGIC;
    signal buf_2d_in_2_t_read : STD_LOGIC;
    signal buf_2d_in_3_i_full_n : STD_LOGIC;
    signal buf_2d_in_3_i_write : STD_LOGIC;
    signal buf_2d_in_3_t_empty_n : STD_LOGIC;
    signal buf_2d_in_3_t_read : STD_LOGIC;
    signal buf_2d_in_4_i_full_n : STD_LOGIC;
    signal buf_2d_in_4_i_write : STD_LOGIC;
    signal buf_2d_in_4_t_empty_n : STD_LOGIC;
    signal buf_2d_in_4_t_read : STD_LOGIC;
    signal buf_2d_in_5_i_full_n : STD_LOGIC;
    signal buf_2d_in_5_i_write : STD_LOGIC;
    signal buf_2d_in_5_t_empty_n : STD_LOGIC;
    signal buf_2d_in_5_t_read : STD_LOGIC;
    signal buf_2d_in_6_i_full_n : STD_LOGIC;
    signal buf_2d_in_6_i_write : STD_LOGIC;
    signal buf_2d_in_6_t_empty_n : STD_LOGIC;
    signal buf_2d_in_6_t_read : STD_LOGIC;
    signal buf_2d_in_7_i_full_n : STD_LOGIC;
    signal buf_2d_in_7_i_write : STD_LOGIC;
    signal buf_2d_in_7_t_empty_n : STD_LOGIC;
    signal buf_2d_in_7_t_read : STD_LOGIC;
    signal buf_2d_out_i_full_n : STD_LOGIC;
    signal buf_2d_out_i_write : STD_LOGIC;
    signal buf_2d_out_t_empty_n : STD_LOGIC;
    signal buf_2d_out_t_read : STD_LOGIC;
    signal ap_reg_procdone_dct_read_data_U0 : STD_LOGIC := '0';
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_reg_procdone_dct_dct_2d_U0 : STD_LOGIC := '0';
    signal ap_reg_procdone_dct_write_data_U0 : STD_LOGIC := '0';
    signal ap_CS : STD_LOGIC;
    signal ap_sig_top_allready : STD_LOGIC;

    component dct_read_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        buf_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_0_ce0 : OUT STD_LOGIC;
        buf_0_we0 : OUT STD_LOGIC;
        buf_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_1_ce0 : OUT STD_LOGIC;
        buf_1_we0 : OUT STD_LOGIC;
        buf_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_2_ce0 : OUT STD_LOGIC;
        buf_2_we0 : OUT STD_LOGIC;
        buf_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_3_ce0 : OUT STD_LOGIC;
        buf_3_we0 : OUT STD_LOGIC;
        buf_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_4_ce0 : OUT STD_LOGIC;
        buf_4_we0 : OUT STD_LOGIC;
        buf_4_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_5_ce0 : OUT STD_LOGIC;
        buf_5_we0 : OUT STD_LOGIC;
        buf_5_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_6_ce0 : OUT STD_LOGIC;
        buf_6_we0 : OUT STD_LOGIC;
        buf_6_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        buf_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        buf_7_ce0 : OUT STD_LOGIC;
        buf_7_we0 : OUT STD_LOGIC;
        buf_7_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_dct_2d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_block_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_0_ce0 : OUT STD_LOGIC;
        in_block_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_1_ce0 : OUT STD_LOGIC;
        in_block_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_2_ce0 : OUT STD_LOGIC;
        in_block_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_3_ce0 : OUT STD_LOGIC;
        in_block_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_4_ce0 : OUT STD_LOGIC;
        in_block_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_5_ce0 : OUT STD_LOGIC;
        in_block_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_6_ce0 : OUT STD_LOGIC;
        in_block_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        in_block_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        in_block_7_ce0 : OUT STD_LOGIC;
        in_block_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        out_block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        out_block_ce0 : OUT STD_LOGIC;
        out_block_we0 : OUT STD_LOGIC;
        out_block_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_write_data IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        buf_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        buf_r_ce0 : OUT STD_LOGIC;
        buf_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_buf_2d_in_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component dct_buf_2d_out IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;



begin
    buf_2d_in_0_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_in_0_i_address0,
        i_ce0 => buf_2d_in_0_i_ce0,
        i_we0 => buf_2d_in_0_i_we0,
        i_d0 => buf_2d_in_0_i_d0,
        i_q0 => buf_2d_in_0_i_q0,
        t_address0 => buf_2d_in_0_t_address0,
        t_ce0 => buf_2d_in_0_t_ce0,
        t_we0 => buf_2d_in_0_t_we0,
        t_d0 => buf_2d_in_0_t_d0,
        t_q0 => buf_2d_in_0_t_q0,
        i_ce => buf_2d_in_0_U_ap_dummy_ce,
        t_ce => buf_2d_in_0_U_ap_dummy_ce,
        i_full_n => buf_2d_in_0_i_full_n,
        i_write => buf_2d_in_0_i_write,
        t_empty_n => buf_2d_in_0_t_empty_n,
        t_read => buf_2d_in_0_t_read);

    buf_2d_in_1_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_in_1_i_address0,
        i_ce0 => buf_2d_in_1_i_ce0,
        i_we0 => buf_2d_in_1_i_we0,
        i_d0 => buf_2d_in_1_i_d0,
        i_q0 => buf_2d_in_1_i_q0,
        t_address0 => buf_2d_in_1_t_address0,
        t_ce0 => buf_2d_in_1_t_ce0,
        t_we0 => buf_2d_in_1_t_we0,
        t_d0 => buf_2d_in_1_t_d0,
        t_q0 => buf_2d_in_1_t_q0,
        i_ce => buf_2d_in_1_U_ap_dummy_ce,
        t_ce => buf_2d_in_1_U_ap_dummy_ce,
        i_full_n => buf_2d_in_1_i_full_n,
        i_write => buf_2d_in_1_i_write,
        t_empty_n => buf_2d_in_1_t_empty_n,
        t_read => buf_2d_in_1_t_read);

    buf_2d_in_2_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_in_2_i_address0,
        i_ce0 => buf_2d_in_2_i_ce0,
        i_we0 => buf_2d_in_2_i_we0,
        i_d0 => buf_2d_in_2_i_d0,
        i_q0 => buf_2d_in_2_i_q0,
        t_address0 => buf_2d_in_2_t_address0,
        t_ce0 => buf_2d_in_2_t_ce0,
        t_we0 => buf_2d_in_2_t_we0,
        t_d0 => buf_2d_in_2_t_d0,
        t_q0 => buf_2d_in_2_t_q0,
        i_ce => buf_2d_in_2_U_ap_dummy_ce,
        t_ce => buf_2d_in_2_U_ap_dummy_ce,
        i_full_n => buf_2d_in_2_i_full_n,
        i_write => buf_2d_in_2_i_write,
        t_empty_n => buf_2d_in_2_t_empty_n,
        t_read => buf_2d_in_2_t_read);

    buf_2d_in_3_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_in_3_i_address0,
        i_ce0 => buf_2d_in_3_i_ce0,
        i_we0 => buf_2d_in_3_i_we0,
        i_d0 => buf_2d_in_3_i_d0,
        i_q0 => buf_2d_in_3_i_q0,
        t_address0 => buf_2d_in_3_t_address0,
        t_ce0 => buf_2d_in_3_t_ce0,
        t_we0 => buf_2d_in_3_t_we0,
        t_d0 => buf_2d_in_3_t_d0,
        t_q0 => buf_2d_in_3_t_q0,
        i_ce => buf_2d_in_3_U_ap_dummy_ce,
        t_ce => buf_2d_in_3_U_ap_dummy_ce,
        i_full_n => buf_2d_in_3_i_full_n,
        i_write => buf_2d_in_3_i_write,
        t_empty_n => buf_2d_in_3_t_empty_n,
        t_read => buf_2d_in_3_t_read);

    buf_2d_in_4_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_in_4_i_address0,
        i_ce0 => buf_2d_in_4_i_ce0,
        i_we0 => buf_2d_in_4_i_we0,
        i_d0 => buf_2d_in_4_i_d0,
        i_q0 => buf_2d_in_4_i_q0,
        t_address0 => buf_2d_in_4_t_address0,
        t_ce0 => buf_2d_in_4_t_ce0,
        t_we0 => buf_2d_in_4_t_we0,
        t_d0 => buf_2d_in_4_t_d0,
        t_q0 => buf_2d_in_4_t_q0,
        i_ce => buf_2d_in_4_U_ap_dummy_ce,
        t_ce => buf_2d_in_4_U_ap_dummy_ce,
        i_full_n => buf_2d_in_4_i_full_n,
        i_write => buf_2d_in_4_i_write,
        t_empty_n => buf_2d_in_4_t_empty_n,
        t_read => buf_2d_in_4_t_read);

    buf_2d_in_5_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_in_5_i_address0,
        i_ce0 => buf_2d_in_5_i_ce0,
        i_we0 => buf_2d_in_5_i_we0,
        i_d0 => buf_2d_in_5_i_d0,
        i_q0 => buf_2d_in_5_i_q0,
        t_address0 => buf_2d_in_5_t_address0,
        t_ce0 => buf_2d_in_5_t_ce0,
        t_we0 => buf_2d_in_5_t_we0,
        t_d0 => buf_2d_in_5_t_d0,
        t_q0 => buf_2d_in_5_t_q0,
        i_ce => buf_2d_in_5_U_ap_dummy_ce,
        t_ce => buf_2d_in_5_U_ap_dummy_ce,
        i_full_n => buf_2d_in_5_i_full_n,
        i_write => buf_2d_in_5_i_write,
        t_empty_n => buf_2d_in_5_t_empty_n,
        t_read => buf_2d_in_5_t_read);

    buf_2d_in_6_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_in_6_i_address0,
        i_ce0 => buf_2d_in_6_i_ce0,
        i_we0 => buf_2d_in_6_i_we0,
        i_d0 => buf_2d_in_6_i_d0,
        i_q0 => buf_2d_in_6_i_q0,
        t_address0 => buf_2d_in_6_t_address0,
        t_ce0 => buf_2d_in_6_t_ce0,
        t_we0 => buf_2d_in_6_t_we0,
        t_d0 => buf_2d_in_6_t_d0,
        t_q0 => buf_2d_in_6_t_q0,
        i_ce => buf_2d_in_6_U_ap_dummy_ce,
        t_ce => buf_2d_in_6_U_ap_dummy_ce,
        i_full_n => buf_2d_in_6_i_full_n,
        i_write => buf_2d_in_6_i_write,
        t_empty_n => buf_2d_in_6_t_empty_n,
        t_read => buf_2d_in_6_t_read);

    buf_2d_in_7_U : component dct_buf_2d_in_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_in_7_i_address0,
        i_ce0 => buf_2d_in_7_i_ce0,
        i_we0 => buf_2d_in_7_i_we0,
        i_d0 => buf_2d_in_7_i_d0,
        i_q0 => buf_2d_in_7_i_q0,
        t_address0 => buf_2d_in_7_t_address0,
        t_ce0 => buf_2d_in_7_t_ce0,
        t_we0 => buf_2d_in_7_t_we0,
        t_d0 => buf_2d_in_7_t_d0,
        t_q0 => buf_2d_in_7_t_q0,
        i_ce => buf_2d_in_7_U_ap_dummy_ce,
        t_ce => buf_2d_in_7_U_ap_dummy_ce,
        i_full_n => buf_2d_in_7_i_full_n,
        i_write => buf_2d_in_7_i_write,
        t_empty_n => buf_2d_in_7_t_empty_n,
        t_read => buf_2d_in_7_t_read);

    buf_2d_out_U : component dct_buf_2d_out
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => buf_2d_out_i_address0,
        i_ce0 => buf_2d_out_i_ce0,
        i_we0 => buf_2d_out_i_we0,
        i_d0 => buf_2d_out_i_d0,
        i_q0 => buf_2d_out_i_q0,
        t_address0 => buf_2d_out_t_address0,
        t_ce0 => buf_2d_out_t_ce0,
        t_we0 => buf_2d_out_t_we0,
        t_d0 => buf_2d_out_t_d0,
        t_q0 => buf_2d_out_t_q0,
        i_ce => buf_2d_out_U_ap_dummy_ce,
        t_ce => buf_2d_out_U_ap_dummy_ce,
        i_full_n => buf_2d_out_i_full_n,
        i_write => buf_2d_out_i_write,
        t_empty_n => buf_2d_out_t_empty_n,
        t_read => buf_2d_out_t_read);

    dct_read_data_U0 : component dct_read_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dct_read_data_U0_ap_start,
        ap_done => dct_read_data_U0_ap_done,
        ap_continue => dct_read_data_U0_ap_continue,
        ap_idle => dct_read_data_U0_ap_idle,
        ap_ready => dct_read_data_U0_ap_ready,
        input_r_address0 => dct_read_data_U0_input_r_address0,
        input_r_ce0 => dct_read_data_U0_input_r_ce0,
        input_r_q0 => dct_read_data_U0_input_r_q0,
        buf_0_address0 => dct_read_data_U0_buf_0_address0,
        buf_0_ce0 => dct_read_data_U0_buf_0_ce0,
        buf_0_we0 => dct_read_data_U0_buf_0_we0,
        buf_0_d0 => dct_read_data_U0_buf_0_d0,
        buf_1_address0 => dct_read_data_U0_buf_1_address0,
        buf_1_ce0 => dct_read_data_U0_buf_1_ce0,
        buf_1_we0 => dct_read_data_U0_buf_1_we0,
        buf_1_d0 => dct_read_data_U0_buf_1_d0,
        buf_2_address0 => dct_read_data_U0_buf_2_address0,
        buf_2_ce0 => dct_read_data_U0_buf_2_ce0,
        buf_2_we0 => dct_read_data_U0_buf_2_we0,
        buf_2_d0 => dct_read_data_U0_buf_2_d0,
        buf_3_address0 => dct_read_data_U0_buf_3_address0,
        buf_3_ce0 => dct_read_data_U0_buf_3_ce0,
        buf_3_we0 => dct_read_data_U0_buf_3_we0,
        buf_3_d0 => dct_read_data_U0_buf_3_d0,
        buf_4_address0 => dct_read_data_U0_buf_4_address0,
        buf_4_ce0 => dct_read_data_U0_buf_4_ce0,
        buf_4_we0 => dct_read_data_U0_buf_4_we0,
        buf_4_d0 => dct_read_data_U0_buf_4_d0,
        buf_5_address0 => dct_read_data_U0_buf_5_address0,
        buf_5_ce0 => dct_read_data_U0_buf_5_ce0,
        buf_5_we0 => dct_read_data_U0_buf_5_we0,
        buf_5_d0 => dct_read_data_U0_buf_5_d0,
        buf_6_address0 => dct_read_data_U0_buf_6_address0,
        buf_6_ce0 => dct_read_data_U0_buf_6_ce0,
        buf_6_we0 => dct_read_data_U0_buf_6_we0,
        buf_6_d0 => dct_read_data_U0_buf_6_d0,
        buf_7_address0 => dct_read_data_U0_buf_7_address0,
        buf_7_ce0 => dct_read_data_U0_buf_7_ce0,
        buf_7_we0 => dct_read_data_U0_buf_7_we0,
        buf_7_d0 => dct_read_data_U0_buf_7_d0);

    dct_dct_2d_U0 : component dct_dct_2d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dct_dct_2d_U0_ap_start,
        ap_done => dct_dct_2d_U0_ap_done,
        ap_continue => dct_dct_2d_U0_ap_continue,
        ap_idle => dct_dct_2d_U0_ap_idle,
        ap_ready => dct_dct_2d_U0_ap_ready,
        in_block_0_address0 => dct_dct_2d_U0_in_block_0_address0,
        in_block_0_ce0 => dct_dct_2d_U0_in_block_0_ce0,
        in_block_0_q0 => dct_dct_2d_U0_in_block_0_q0,
        in_block_1_address0 => dct_dct_2d_U0_in_block_1_address0,
        in_block_1_ce0 => dct_dct_2d_U0_in_block_1_ce0,
        in_block_1_q0 => dct_dct_2d_U0_in_block_1_q0,
        in_block_2_address0 => dct_dct_2d_U0_in_block_2_address0,
        in_block_2_ce0 => dct_dct_2d_U0_in_block_2_ce0,
        in_block_2_q0 => dct_dct_2d_U0_in_block_2_q0,
        in_block_3_address0 => dct_dct_2d_U0_in_block_3_address0,
        in_block_3_ce0 => dct_dct_2d_U0_in_block_3_ce0,
        in_block_3_q0 => dct_dct_2d_U0_in_block_3_q0,
        in_block_4_address0 => dct_dct_2d_U0_in_block_4_address0,
        in_block_4_ce0 => dct_dct_2d_U0_in_block_4_ce0,
        in_block_4_q0 => dct_dct_2d_U0_in_block_4_q0,
        in_block_5_address0 => dct_dct_2d_U0_in_block_5_address0,
        in_block_5_ce0 => dct_dct_2d_U0_in_block_5_ce0,
        in_block_5_q0 => dct_dct_2d_U0_in_block_5_q0,
        in_block_6_address0 => dct_dct_2d_U0_in_block_6_address0,
        in_block_6_ce0 => dct_dct_2d_U0_in_block_6_ce0,
        in_block_6_q0 => dct_dct_2d_U0_in_block_6_q0,
        in_block_7_address0 => dct_dct_2d_U0_in_block_7_address0,
        in_block_7_ce0 => dct_dct_2d_U0_in_block_7_ce0,
        in_block_7_q0 => dct_dct_2d_U0_in_block_7_q0,
        out_block_address0 => dct_dct_2d_U0_out_block_address0,
        out_block_ce0 => dct_dct_2d_U0_out_block_ce0,
        out_block_we0 => dct_dct_2d_U0_out_block_we0,
        out_block_d0 => dct_dct_2d_U0_out_block_d0);

    dct_write_data_U0 : component dct_write_data
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dct_write_data_U0_ap_start,
        ap_done => dct_write_data_U0_ap_done,
        ap_continue => dct_write_data_U0_ap_continue,
        ap_idle => dct_write_data_U0_ap_idle,
        ap_ready => dct_write_data_U0_ap_ready,
        buf_r_address0 => dct_write_data_U0_buf_r_address0,
        buf_r_ce0 => dct_write_data_U0_buf_r_ce0,
        buf_r_q0 => dct_write_data_U0_buf_r_q0,
        output_r_address0 => dct_write_data_U0_output_r_address0,
        output_r_ce0 => dct_write_data_U0_output_r_ce0,
        output_r_we0 => dct_write_data_U0_output_r_we0,
        output_r_d0 => dct_write_data_U0_output_r_d0);





    -- ap_reg_procdone_dct_dct_2d_U0 assign process. --
    ap_reg_procdone_dct_dct_2d_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_dct_dct_2d_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_dct_dct_2d_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = dct_dct_2d_U0_ap_done)) then 
                    ap_reg_procdone_dct_dct_2d_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_dct_read_data_U0 assign process. --
    ap_reg_procdone_dct_read_data_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_dct_read_data_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_dct_read_data_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = dct_read_data_U0_ap_done)) then 
                    ap_reg_procdone_dct_read_data_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_procdone_dct_write_data_U0 assign process. --
    ap_reg_procdone_dct_write_data_U0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_procdone_dct_write_data_U0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_hs_done)) then 
                    ap_reg_procdone_dct_write_data_U0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = dct_write_data_U0_ap_done)) then 
                    ap_reg_procdone_dct_write_data_U0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dct_read_data_U0_buf_0_pipo_status assign process. --
    ap_reg_ready_dct_read_data_U0_buf_0_pipo_status_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_dct_read_data_U0_buf_0_pipo_status <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_ap_continue))) then 
                    ap_reg_ready_dct_read_data_U0_buf_0_pipo_status <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_buf_0_pipo_status))) then 
                    ap_reg_ready_dct_read_data_U0_buf_0_pipo_status <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dct_read_data_U0_buf_1_pipo_status assign process. --
    ap_reg_ready_dct_read_data_U0_buf_1_pipo_status_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_dct_read_data_U0_buf_1_pipo_status <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_ap_continue))) then 
                    ap_reg_ready_dct_read_data_U0_buf_1_pipo_status <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_buf_1_pipo_status))) then 
                    ap_reg_ready_dct_read_data_U0_buf_1_pipo_status <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dct_read_data_U0_buf_2_pipo_status assign process. --
    ap_reg_ready_dct_read_data_U0_buf_2_pipo_status_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_dct_read_data_U0_buf_2_pipo_status <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_ap_continue))) then 
                    ap_reg_ready_dct_read_data_U0_buf_2_pipo_status <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_buf_2_pipo_status))) then 
                    ap_reg_ready_dct_read_data_U0_buf_2_pipo_status <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dct_read_data_U0_buf_3_pipo_status assign process. --
    ap_reg_ready_dct_read_data_U0_buf_3_pipo_status_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_dct_read_data_U0_buf_3_pipo_status <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_ap_continue))) then 
                    ap_reg_ready_dct_read_data_U0_buf_3_pipo_status <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_buf_3_pipo_status))) then 
                    ap_reg_ready_dct_read_data_U0_buf_3_pipo_status <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dct_read_data_U0_buf_4_pipo_status assign process. --
    ap_reg_ready_dct_read_data_U0_buf_4_pipo_status_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_dct_read_data_U0_buf_4_pipo_status <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_ap_continue))) then 
                    ap_reg_ready_dct_read_data_U0_buf_4_pipo_status <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_buf_4_pipo_status))) then 
                    ap_reg_ready_dct_read_data_U0_buf_4_pipo_status <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dct_read_data_U0_buf_5_pipo_status assign process. --
    ap_reg_ready_dct_read_data_U0_buf_5_pipo_status_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_dct_read_data_U0_buf_5_pipo_status <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_ap_continue))) then 
                    ap_reg_ready_dct_read_data_U0_buf_5_pipo_status <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_buf_5_pipo_status))) then 
                    ap_reg_ready_dct_read_data_U0_buf_5_pipo_status <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dct_read_data_U0_buf_6_pipo_status assign process. --
    ap_reg_ready_dct_read_data_U0_buf_6_pipo_status_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_dct_read_data_U0_buf_6_pipo_status <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_ap_continue))) then 
                    ap_reg_ready_dct_read_data_U0_buf_6_pipo_status <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_buf_6_pipo_status))) then 
                    ap_reg_ready_dct_read_data_U0_buf_6_pipo_status <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ready_dct_read_data_U0_buf_7_pipo_status assign process. --
    ap_reg_ready_dct_read_data_U0_buf_7_pipo_status_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ready_dct_read_data_U0_buf_7_pipo_status <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_ap_continue))) then 
                    ap_reg_ready_dct_read_data_U0_buf_7_pipo_status <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = dct_read_data_U0_ap_done) and (ap_const_logic_1 = dct_read_data_U0_buf_7_pipo_status))) then 
                    ap_reg_ready_dct_read_data_U0_buf_7_pipo_status <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_CS assign process. --
    ap_CS_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_CS <= ap_const_logic_0;
        end if;
    end process;
    ap_chn_write_dct_dct_2d_U0_buf_2d_out <= dct_dct_2d_U0_ap_done;

    -- ap_chn_write_dct_read_data_U0_buf_2d_in_0 assign process. --
    ap_chn_write_dct_read_data_U0_buf_2d_in_0_assign_proc : process(dct_read_data_U0_ap_done, ap_reg_ready_dct_read_data_U0_buf_0_pipo_status)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dct_read_data_U0_buf_0_pipo_status)) then 
            ap_chn_write_dct_read_data_U0_buf_2d_in_0 <= ap_const_logic_0;
        else 
            ap_chn_write_dct_read_data_U0_buf_2d_in_0 <= dct_read_data_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_dct_read_data_U0_buf_2d_in_1 assign process. --
    ap_chn_write_dct_read_data_U0_buf_2d_in_1_assign_proc : process(dct_read_data_U0_ap_done, ap_reg_ready_dct_read_data_U0_buf_1_pipo_status)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dct_read_data_U0_buf_1_pipo_status)) then 
            ap_chn_write_dct_read_data_U0_buf_2d_in_1 <= ap_const_logic_0;
        else 
            ap_chn_write_dct_read_data_U0_buf_2d_in_1 <= dct_read_data_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_dct_read_data_U0_buf_2d_in_2 assign process. --
    ap_chn_write_dct_read_data_U0_buf_2d_in_2_assign_proc : process(dct_read_data_U0_ap_done, ap_reg_ready_dct_read_data_U0_buf_2_pipo_status)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dct_read_data_U0_buf_2_pipo_status)) then 
            ap_chn_write_dct_read_data_U0_buf_2d_in_2 <= ap_const_logic_0;
        else 
            ap_chn_write_dct_read_data_U0_buf_2d_in_2 <= dct_read_data_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_dct_read_data_U0_buf_2d_in_3 assign process. --
    ap_chn_write_dct_read_data_U0_buf_2d_in_3_assign_proc : process(dct_read_data_U0_ap_done, ap_reg_ready_dct_read_data_U0_buf_3_pipo_status)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dct_read_data_U0_buf_3_pipo_status)) then 
            ap_chn_write_dct_read_data_U0_buf_2d_in_3 <= ap_const_logic_0;
        else 
            ap_chn_write_dct_read_data_U0_buf_2d_in_3 <= dct_read_data_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_dct_read_data_U0_buf_2d_in_4 assign process. --
    ap_chn_write_dct_read_data_U0_buf_2d_in_4_assign_proc : process(dct_read_data_U0_ap_done, ap_reg_ready_dct_read_data_U0_buf_4_pipo_status)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dct_read_data_U0_buf_4_pipo_status)) then 
            ap_chn_write_dct_read_data_U0_buf_2d_in_4 <= ap_const_logic_0;
        else 
            ap_chn_write_dct_read_data_U0_buf_2d_in_4 <= dct_read_data_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_dct_read_data_U0_buf_2d_in_5 assign process. --
    ap_chn_write_dct_read_data_U0_buf_2d_in_5_assign_proc : process(dct_read_data_U0_ap_done, ap_reg_ready_dct_read_data_U0_buf_5_pipo_status)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dct_read_data_U0_buf_5_pipo_status)) then 
            ap_chn_write_dct_read_data_U0_buf_2d_in_5 <= ap_const_logic_0;
        else 
            ap_chn_write_dct_read_data_U0_buf_2d_in_5 <= dct_read_data_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_dct_read_data_U0_buf_2d_in_6 assign process. --
    ap_chn_write_dct_read_data_U0_buf_2d_in_6_assign_proc : process(dct_read_data_U0_ap_done, ap_reg_ready_dct_read_data_U0_buf_6_pipo_status)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dct_read_data_U0_buf_6_pipo_status)) then 
            ap_chn_write_dct_read_data_U0_buf_2d_in_6 <= ap_const_logic_0;
        else 
            ap_chn_write_dct_read_data_U0_buf_2d_in_6 <= dct_read_data_U0_ap_done;
        end if; 
    end process;


    -- ap_chn_write_dct_read_data_U0_buf_2d_in_7 assign process. --
    ap_chn_write_dct_read_data_U0_buf_2d_in_7_assign_proc : process(dct_read_data_U0_ap_done, ap_reg_ready_dct_read_data_U0_buf_7_pipo_status)
    begin
        if ((ap_const_logic_1 = ap_reg_ready_dct_read_data_U0_buf_7_pipo_status)) then 
            ap_chn_write_dct_read_data_U0_buf_2d_in_7 <= ap_const_logic_0;
        else 
            ap_chn_write_dct_read_data_U0_buf_2d_in_7 <= dct_read_data_U0_ap_done;
        end if; 
    end process;

    ap_done <= ap_sig_hs_done;

    -- ap_idle assign process. --
    ap_idle_assign_proc : process(dct_read_data_U0_ap_idle, dct_dct_2d_U0_ap_idle, dct_write_data_U0_ap_idle, buf_2d_in_0_t_empty_n, buf_2d_in_1_t_empty_n, buf_2d_in_2_t_empty_n, buf_2d_in_3_t_empty_n, buf_2d_in_4_t_empty_n, buf_2d_in_5_t_empty_n, buf_2d_in_6_t_empty_n, buf_2d_in_7_t_empty_n, buf_2d_out_t_empty_n)
    begin
        if (((ap_const_logic_1 = dct_read_data_U0_ap_idle) and (ap_const_logic_1 = dct_dct_2d_U0_ap_idle) and (ap_const_logic_1 = dct_write_data_U0_ap_idle) and (ap_const_logic_0 = buf_2d_in_0_t_empty_n) and (ap_const_logic_0 = buf_2d_in_1_t_empty_n) and (ap_const_logic_0 = buf_2d_in_2_t_empty_n) and (ap_const_logic_0 = buf_2d_in_3_t_empty_n) and (ap_const_logic_0 = buf_2d_in_4_t_empty_n) and (ap_const_logic_0 = buf_2d_in_5_t_empty_n) and (ap_const_logic_0 = buf_2d_in_6_t_empty_n) and (ap_const_logic_0 = buf_2d_in_7_t_empty_n) and (ap_const_logic_0 = buf_2d_out_t_empty_n))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_sig_top_allready;
    ap_sig_hs_continue <= ap_const_logic_1;

    -- ap_sig_hs_done assign process. --
    ap_sig_hs_done_assign_proc : process(dct_write_data_U0_ap_done)
    begin
        if ((ap_const_logic_1 = dct_write_data_U0_ap_done)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ready_dct_read_data_U0_buf_0_pipo_status assign process. --
    ap_sig_ready_dct_read_data_U0_buf_0_pipo_status_assign_proc : process(dct_read_data_U0_buf_0_pipo_status, ap_reg_ready_dct_read_data_U0_buf_0_pipo_status)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dct_read_data_U0_buf_0_pipo_status)) then 
            ap_sig_ready_dct_read_data_U0_buf_0_pipo_status <= dct_read_data_U0_buf_0_pipo_status;
        else 
            ap_sig_ready_dct_read_data_U0_buf_0_pipo_status <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dct_read_data_U0_buf_1_pipo_status assign process. --
    ap_sig_ready_dct_read_data_U0_buf_1_pipo_status_assign_proc : process(dct_read_data_U0_buf_1_pipo_status, ap_reg_ready_dct_read_data_U0_buf_1_pipo_status)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dct_read_data_U0_buf_1_pipo_status)) then 
            ap_sig_ready_dct_read_data_U0_buf_1_pipo_status <= dct_read_data_U0_buf_1_pipo_status;
        else 
            ap_sig_ready_dct_read_data_U0_buf_1_pipo_status <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dct_read_data_U0_buf_2_pipo_status assign process. --
    ap_sig_ready_dct_read_data_U0_buf_2_pipo_status_assign_proc : process(dct_read_data_U0_buf_2_pipo_status, ap_reg_ready_dct_read_data_U0_buf_2_pipo_status)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dct_read_data_U0_buf_2_pipo_status)) then 
            ap_sig_ready_dct_read_data_U0_buf_2_pipo_status <= dct_read_data_U0_buf_2_pipo_status;
        else 
            ap_sig_ready_dct_read_data_U0_buf_2_pipo_status <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dct_read_data_U0_buf_3_pipo_status assign process. --
    ap_sig_ready_dct_read_data_U0_buf_3_pipo_status_assign_proc : process(dct_read_data_U0_buf_3_pipo_status, ap_reg_ready_dct_read_data_U0_buf_3_pipo_status)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dct_read_data_U0_buf_3_pipo_status)) then 
            ap_sig_ready_dct_read_data_U0_buf_3_pipo_status <= dct_read_data_U0_buf_3_pipo_status;
        else 
            ap_sig_ready_dct_read_data_U0_buf_3_pipo_status <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dct_read_data_U0_buf_4_pipo_status assign process. --
    ap_sig_ready_dct_read_data_U0_buf_4_pipo_status_assign_proc : process(dct_read_data_U0_buf_4_pipo_status, ap_reg_ready_dct_read_data_U0_buf_4_pipo_status)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dct_read_data_U0_buf_4_pipo_status)) then 
            ap_sig_ready_dct_read_data_U0_buf_4_pipo_status <= dct_read_data_U0_buf_4_pipo_status;
        else 
            ap_sig_ready_dct_read_data_U0_buf_4_pipo_status <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dct_read_data_U0_buf_5_pipo_status assign process. --
    ap_sig_ready_dct_read_data_U0_buf_5_pipo_status_assign_proc : process(dct_read_data_U0_buf_5_pipo_status, ap_reg_ready_dct_read_data_U0_buf_5_pipo_status)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dct_read_data_U0_buf_5_pipo_status)) then 
            ap_sig_ready_dct_read_data_U0_buf_5_pipo_status <= dct_read_data_U0_buf_5_pipo_status;
        else 
            ap_sig_ready_dct_read_data_U0_buf_5_pipo_status <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dct_read_data_U0_buf_6_pipo_status assign process. --
    ap_sig_ready_dct_read_data_U0_buf_6_pipo_status_assign_proc : process(dct_read_data_U0_buf_6_pipo_status, ap_reg_ready_dct_read_data_U0_buf_6_pipo_status)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dct_read_data_U0_buf_6_pipo_status)) then 
            ap_sig_ready_dct_read_data_U0_buf_6_pipo_status <= dct_read_data_U0_buf_6_pipo_status;
        else 
            ap_sig_ready_dct_read_data_U0_buf_6_pipo_status <= ap_const_logic_1;
        end if; 
    end process;


    -- ap_sig_ready_dct_read_data_U0_buf_7_pipo_status assign process. --
    ap_sig_ready_dct_read_data_U0_buf_7_pipo_status_assign_proc : process(dct_read_data_U0_buf_7_pipo_status, ap_reg_ready_dct_read_data_U0_buf_7_pipo_status)
    begin
        if ((ap_const_logic_0 = ap_reg_ready_dct_read_data_U0_buf_7_pipo_status)) then 
            ap_sig_ready_dct_read_data_U0_buf_7_pipo_status <= dct_read_data_U0_buf_7_pipo_status;
        else 
            ap_sig_ready_dct_read_data_U0_buf_7_pipo_status <= ap_const_logic_1;
        end if; 
    end process;

    ap_sig_top_allready <= dct_read_data_U0_ap_ready;
    buf_2d_in_0_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_in_0_i_address0 <= dct_read_data_U0_buf_0_address0;
    buf_2d_in_0_i_ce0 <= dct_read_data_U0_buf_0_ce0;
    buf_2d_in_0_i_d0 <= dct_read_data_U0_buf_0_d0;
    buf_2d_in_0_i_we0 <= dct_read_data_U0_buf_0_we0;
    buf_2d_in_0_i_write <= ap_chn_write_dct_read_data_U0_buf_2d_in_0;
    buf_2d_in_0_t_address0 <= dct_dct_2d_U0_in_block_0_address0;
    buf_2d_in_0_t_ce0 <= dct_dct_2d_U0_in_block_0_ce0;
    buf_2d_in_0_t_d0 <= ap_const_lv16_0;
    buf_2d_in_0_t_read <= dct_dct_2d_U0_ap_ready;
    buf_2d_in_0_t_we0 <= ap_const_logic_0;
    buf_2d_in_1_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_in_1_i_address0 <= dct_read_data_U0_buf_1_address0;
    buf_2d_in_1_i_ce0 <= dct_read_data_U0_buf_1_ce0;
    buf_2d_in_1_i_d0 <= dct_read_data_U0_buf_1_d0;
    buf_2d_in_1_i_we0 <= dct_read_data_U0_buf_1_we0;
    buf_2d_in_1_i_write <= ap_chn_write_dct_read_data_U0_buf_2d_in_1;
    buf_2d_in_1_t_address0 <= dct_dct_2d_U0_in_block_1_address0;
    buf_2d_in_1_t_ce0 <= dct_dct_2d_U0_in_block_1_ce0;
    buf_2d_in_1_t_d0 <= ap_const_lv16_0;
    buf_2d_in_1_t_read <= dct_dct_2d_U0_ap_ready;
    buf_2d_in_1_t_we0 <= ap_const_logic_0;
    buf_2d_in_2_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_in_2_i_address0 <= dct_read_data_U0_buf_2_address0;
    buf_2d_in_2_i_ce0 <= dct_read_data_U0_buf_2_ce0;
    buf_2d_in_2_i_d0 <= dct_read_data_U0_buf_2_d0;
    buf_2d_in_2_i_we0 <= dct_read_data_U0_buf_2_we0;
    buf_2d_in_2_i_write <= ap_chn_write_dct_read_data_U0_buf_2d_in_2;
    buf_2d_in_2_t_address0 <= dct_dct_2d_U0_in_block_2_address0;
    buf_2d_in_2_t_ce0 <= dct_dct_2d_U0_in_block_2_ce0;
    buf_2d_in_2_t_d0 <= ap_const_lv16_0;
    buf_2d_in_2_t_read <= dct_dct_2d_U0_ap_ready;
    buf_2d_in_2_t_we0 <= ap_const_logic_0;
    buf_2d_in_3_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_in_3_i_address0 <= dct_read_data_U0_buf_3_address0;
    buf_2d_in_3_i_ce0 <= dct_read_data_U0_buf_3_ce0;
    buf_2d_in_3_i_d0 <= dct_read_data_U0_buf_3_d0;
    buf_2d_in_3_i_we0 <= dct_read_data_U0_buf_3_we0;
    buf_2d_in_3_i_write <= ap_chn_write_dct_read_data_U0_buf_2d_in_3;
    buf_2d_in_3_t_address0 <= dct_dct_2d_U0_in_block_3_address0;
    buf_2d_in_3_t_ce0 <= dct_dct_2d_U0_in_block_3_ce0;
    buf_2d_in_3_t_d0 <= ap_const_lv16_0;
    buf_2d_in_3_t_read <= dct_dct_2d_U0_ap_ready;
    buf_2d_in_3_t_we0 <= ap_const_logic_0;
    buf_2d_in_4_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_in_4_i_address0 <= dct_read_data_U0_buf_4_address0;
    buf_2d_in_4_i_ce0 <= dct_read_data_U0_buf_4_ce0;
    buf_2d_in_4_i_d0 <= dct_read_data_U0_buf_4_d0;
    buf_2d_in_4_i_we0 <= dct_read_data_U0_buf_4_we0;
    buf_2d_in_4_i_write <= ap_chn_write_dct_read_data_U0_buf_2d_in_4;
    buf_2d_in_4_t_address0 <= dct_dct_2d_U0_in_block_4_address0;
    buf_2d_in_4_t_ce0 <= dct_dct_2d_U0_in_block_4_ce0;
    buf_2d_in_4_t_d0 <= ap_const_lv16_0;
    buf_2d_in_4_t_read <= dct_dct_2d_U0_ap_ready;
    buf_2d_in_4_t_we0 <= ap_const_logic_0;
    buf_2d_in_5_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_in_5_i_address0 <= dct_read_data_U0_buf_5_address0;
    buf_2d_in_5_i_ce0 <= dct_read_data_U0_buf_5_ce0;
    buf_2d_in_5_i_d0 <= dct_read_data_U0_buf_5_d0;
    buf_2d_in_5_i_we0 <= dct_read_data_U0_buf_5_we0;
    buf_2d_in_5_i_write <= ap_chn_write_dct_read_data_U0_buf_2d_in_5;
    buf_2d_in_5_t_address0 <= dct_dct_2d_U0_in_block_5_address0;
    buf_2d_in_5_t_ce0 <= dct_dct_2d_U0_in_block_5_ce0;
    buf_2d_in_5_t_d0 <= ap_const_lv16_0;
    buf_2d_in_5_t_read <= dct_dct_2d_U0_ap_ready;
    buf_2d_in_5_t_we0 <= ap_const_logic_0;
    buf_2d_in_6_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_in_6_i_address0 <= dct_read_data_U0_buf_6_address0;
    buf_2d_in_6_i_ce0 <= dct_read_data_U0_buf_6_ce0;
    buf_2d_in_6_i_d0 <= dct_read_data_U0_buf_6_d0;
    buf_2d_in_6_i_we0 <= dct_read_data_U0_buf_6_we0;
    buf_2d_in_6_i_write <= ap_chn_write_dct_read_data_U0_buf_2d_in_6;
    buf_2d_in_6_t_address0 <= dct_dct_2d_U0_in_block_6_address0;
    buf_2d_in_6_t_ce0 <= dct_dct_2d_U0_in_block_6_ce0;
    buf_2d_in_6_t_d0 <= ap_const_lv16_0;
    buf_2d_in_6_t_read <= dct_dct_2d_U0_ap_ready;
    buf_2d_in_6_t_we0 <= ap_const_logic_0;
    buf_2d_in_7_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_in_7_i_address0 <= dct_read_data_U0_buf_7_address0;
    buf_2d_in_7_i_ce0 <= dct_read_data_U0_buf_7_ce0;
    buf_2d_in_7_i_d0 <= dct_read_data_U0_buf_7_d0;
    buf_2d_in_7_i_we0 <= dct_read_data_U0_buf_7_we0;
    buf_2d_in_7_i_write <= ap_chn_write_dct_read_data_U0_buf_2d_in_7;
    buf_2d_in_7_t_address0 <= dct_dct_2d_U0_in_block_7_address0;
    buf_2d_in_7_t_ce0 <= dct_dct_2d_U0_in_block_7_ce0;
    buf_2d_in_7_t_d0 <= ap_const_lv16_0;
    buf_2d_in_7_t_read <= dct_dct_2d_U0_ap_ready;
    buf_2d_in_7_t_we0 <= ap_const_logic_0;
    buf_2d_out_U_ap_dummy_ce <= ap_const_logic_1;
    buf_2d_out_i_address0 <= dct_dct_2d_U0_out_block_address0;
    buf_2d_out_i_ce0 <= dct_dct_2d_U0_out_block_ce0;
    buf_2d_out_i_d0 <= dct_dct_2d_U0_out_block_d0;
    buf_2d_out_i_we0 <= dct_dct_2d_U0_out_block_we0;
    buf_2d_out_i_write <= dct_dct_2d_U0_ap_done;
    buf_2d_out_t_address0 <= dct_write_data_U0_buf_r_address0;
    buf_2d_out_t_ce0 <= dct_write_data_U0_buf_r_ce0;
    buf_2d_out_t_d0 <= ap_const_lv16_0;
    buf_2d_out_t_read <= dct_write_data_U0_ap_ready;
    buf_2d_out_t_we0 <= ap_const_logic_0;
    dct_dct_2d_U0_ap_continue <= dct_dct_2d_U0_out_block_pipo_status;
    dct_dct_2d_U0_ap_start <= (buf_2d_in_0_t_empty_n and buf_2d_in_1_t_empty_n and buf_2d_in_2_t_empty_n and buf_2d_in_3_t_empty_n and buf_2d_in_4_t_empty_n and buf_2d_in_5_t_empty_n and buf_2d_in_6_t_empty_n and buf_2d_in_7_t_empty_n);
    dct_dct_2d_U0_in_block_0_q0 <= buf_2d_in_0_t_q0;
    dct_dct_2d_U0_in_block_1_q0 <= buf_2d_in_1_t_q0;
    dct_dct_2d_U0_in_block_2_q0 <= buf_2d_in_2_t_q0;
    dct_dct_2d_U0_in_block_3_q0 <= buf_2d_in_3_t_q0;
    dct_dct_2d_U0_in_block_4_q0 <= buf_2d_in_4_t_q0;
    dct_dct_2d_U0_in_block_5_q0 <= buf_2d_in_5_t_q0;
    dct_dct_2d_U0_in_block_6_q0 <= buf_2d_in_6_t_q0;
    dct_dct_2d_U0_in_block_7_q0 <= buf_2d_in_7_t_q0;
    dct_dct_2d_U0_out_block_pipo_status <= buf_2d_out_i_full_n;

    -- dct_read_data_U0_ap_continue assign process. --
    dct_read_data_U0_ap_continue_assign_proc : process(ap_sig_ready_dct_read_data_U0_buf_5_pipo_status, ap_sig_ready_dct_read_data_U0_buf_1_pipo_status, ap_sig_ready_dct_read_data_U0_buf_2_pipo_status, ap_sig_ready_dct_read_data_U0_buf_4_pipo_status, ap_sig_ready_dct_read_data_U0_buf_6_pipo_status, ap_sig_ready_dct_read_data_U0_buf_3_pipo_status, ap_sig_ready_dct_read_data_U0_buf_0_pipo_status, ap_sig_ready_dct_read_data_U0_buf_7_pipo_status)
    begin
        if (((ap_const_logic_1 = ap_sig_ready_dct_read_data_U0_buf_5_pipo_status) and (ap_const_logic_1 = ap_sig_ready_dct_read_data_U0_buf_1_pipo_status) and (ap_const_logic_1 = ap_sig_ready_dct_read_data_U0_buf_2_pipo_status) and (ap_const_logic_1 = ap_sig_ready_dct_read_data_U0_buf_4_pipo_status) and (ap_const_logic_1 = ap_sig_ready_dct_read_data_U0_buf_6_pipo_status) and (ap_const_logic_1 = ap_sig_ready_dct_read_data_U0_buf_3_pipo_status) and (ap_const_logic_1 = ap_sig_ready_dct_read_data_U0_buf_0_pipo_status) and (ap_const_logic_1 = ap_sig_ready_dct_read_data_U0_buf_7_pipo_status))) then 
            dct_read_data_U0_ap_continue <= ap_const_logic_1;
        else 
            dct_read_data_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    dct_read_data_U0_ap_start <= ap_start;
    dct_read_data_U0_buf_0_pipo_status <= buf_2d_in_0_i_full_n;
    dct_read_data_U0_buf_1_pipo_status <= buf_2d_in_1_i_full_n;
    dct_read_data_U0_buf_2_pipo_status <= buf_2d_in_2_i_full_n;
    dct_read_data_U0_buf_3_pipo_status <= buf_2d_in_3_i_full_n;
    dct_read_data_U0_buf_4_pipo_status <= buf_2d_in_4_i_full_n;
    dct_read_data_U0_buf_5_pipo_status <= buf_2d_in_5_i_full_n;
    dct_read_data_U0_buf_6_pipo_status <= buf_2d_in_6_i_full_n;
    dct_read_data_U0_buf_7_pipo_status <= buf_2d_in_7_i_full_n;
    dct_read_data_U0_input_r_q0 <= input_r_q0;
    dct_write_data_U0_ap_continue <= ap_sig_hs_continue;
    dct_write_data_U0_ap_start <= buf_2d_out_t_empty_n;
    dct_write_data_U0_buf_r_q0 <= buf_2d_out_t_q0;
    input_r_address0 <= dct_read_data_U0_input_r_address0;
    input_r_address1 <= ap_const_lv6_0;
    input_r_ce0 <= dct_read_data_U0_input_r_ce0;
    input_r_ce1 <= ap_const_logic_0;
    input_r_d0 <= ap_const_lv16_0;
    input_r_d1 <= ap_const_lv16_0;
    input_r_we0 <= ap_const_logic_0;
    input_r_we1 <= ap_const_logic_0;
    output_r_address0 <= dct_write_data_U0_output_r_address0;
    output_r_address1 <= ap_const_lv6_0;
    output_r_ce0 <= dct_write_data_U0_output_r_ce0;
    output_r_ce1 <= ap_const_logic_0;
    output_r_d0 <= dct_write_data_U0_output_r_d0;
    output_r_d1 <= ap_const_lv16_0;
    output_r_we0 <= dct_write_data_U0_output_r_we0;
    output_r_we1 <= ap_const_logic_0;
end behav;
