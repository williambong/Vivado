// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dct,hls_ip_2015_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160tfbg484-1,HLS_INPUT_CLOCK=8.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.790000,HLS_SYN_LAT=1850,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=1,HLS_SYN_FF=249,HLS_SYN_LUT=458}" *)

module dct (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 6'b10;
parameter    ap_ST_st4_fsm_2 = 6'b100;
parameter    ap_ST_st5_fsm_3 = 6'b1000;
parameter    ap_ST_pp1_stg0_fsm_4 = 6'b10000;
parameter    ap_ST_st8_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv7_40 = 7'b1000000;
parameter    ap_const_lv7_1 = 7'b1;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [5:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg output_r_ce0;
reg output_r_we0;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm = 6'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_22;
reg   [6:0] indvar_flatten_reg_118;
reg   [3:0] r_i_reg_129;
reg   [3:0] c_i_reg_140;
reg   [6:0] indvar_flatten1_reg_151;
reg   [3:0] r_i2_reg_162;
reg   [3:0] c_i6_reg_173;
wire   [0:0] exitcond_flatten_fu_192_p2;
reg   [0:0] exitcond_flatten_reg_389;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_61;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [6:0] indvar_flatten_next_fu_198_p2;
wire   [3:0] c_i_mid2_fu_210_p3;
reg   [3:0] c_i_mid2_reg_398;
wire   [3:0] r_i_mid2_fu_224_p3;
reg   [3:0] r_i_mid2_reg_403;
wire   [3:0] c_fu_259_p2;
wire   [0:0] exitcond_flatten1_fu_290_p2;
reg   [0:0] exitcond_flatten1_reg_419;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_4;
reg    ap_sig_bdd_89;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
wire   [6:0] indvar_flatten_next1_fu_296_p2;
wire   [3:0] r_i2_mid2_fu_322_p3;
reg   [3:0] r_i2_mid2_reg_428;
wire   [5:0] tmp_9_i_fu_373_p2;
reg   [5:0] tmp_9_i_reg_438;
wire   [3:0] c_1_fu_379_p2;
reg    ap_sig_cseq_ST_st5_fsm_3;
reg    ap_sig_bdd_120;
wire    grp_dct_dct_2d_fu_184_ap_done;
reg   [5:0] buf_2d_in_address0;
reg    buf_2d_in_ce0;
reg    buf_2d_in_we0;
wire   [15:0] buf_2d_in_d0;
wire   [15:0] buf_2d_in_q0;
reg   [5:0] buf_2d_out_address0;
reg    buf_2d_out_ce0;
reg    buf_2d_out_we0;
wire   [15:0] buf_2d_out_d0;
wire   [15:0] buf_2d_out_q0;
wire    grp_dct_dct_2d_fu_184_ap_start;
wire    grp_dct_dct_2d_fu_184_ap_idle;
wire    grp_dct_dct_2d_fu_184_ap_ready;
wire   [5:0] grp_dct_dct_2d_fu_184_in_block_address0;
wire    grp_dct_dct_2d_fu_184_in_block_ce0;
wire   [15:0] grp_dct_dct_2d_fu_184_in_block_q0;
wire   [5:0] grp_dct_dct_2d_fu_184_out_block_address0;
wire    grp_dct_dct_2d_fu_184_out_block_ce0;
wire    grp_dct_dct_2d_fu_184_out_block_we0;
wire   [15:0] grp_dct_dct_2d_fu_184_out_block_d0;
reg   [3:0] r_i_phi_fu_133_p4;
reg   [3:0] r_i2_phi_fu_166_p4;
reg    grp_dct_dct_2d_fu_184_ap_start_ap_start_reg = 1'b0;
reg    ap_sig_cseq_ST_st4_fsm_2;
reg    ap_sig_bdd_181;
wire   [63:0] tmp_6_i_fu_254_p1;
wire   [63:0] tmp_2_fu_285_p1;
wire   [63:0] tmp_5_fu_368_p1;
wire   [63:0] tmp_3_i_fu_385_p1;
wire   [0:0] exitcond_i_fu_204_p2;
wire   [3:0] r_fu_218_p2;
wire   [2:0] tmp_fu_232_p1;
wire   [5:0] c_i_cast6_fu_244_p1;
wire   [5:0] tmp_i_fu_236_p3;
wire   [5:0] tmp_5_i_fu_248_p2;
wire   [6:0] tmp_1_fu_268_p3;
wire   [7:0] p_addr_cast_fu_275_p1;
wire   [7:0] tmp_7_i_trn_cast_fu_265_p1;
wire   [7:0] p_addr1_fu_279_p2;
wire   [0:0] exitcond_i1_fu_302_p2;
wire   [3:0] r_s_fu_316_p2;
wire   [2:0] tmp_3_fu_330_p1;
wire   [3:0] c_i6_mid2_fu_308_p3;
wire   [6:0] tmp_4_fu_350_p3;
wire   [7:0] p_addr2_cast_fu_358_p1;
wire   [7:0] tmp_8_i_trn_cast_fu_346_p1;
wire   [7:0] p_addr3_fu_362_p2;
wire   [5:0] c_i6_cast2_fu_342_p1;
wire   [5:0] tmp_i5_fu_334_p3;
reg    ap_sig_cseq_ST_st8_fsm_5;
reg    ap_sig_bdd_323;
reg   [5:0] ap_NS_fsm;


dct_dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_2d_in_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buf_2d_in_address0 ),
    .ce0( buf_2d_in_ce0 ),
    .we0( buf_2d_in_we0 ),
    .d0( buf_2d_in_d0 ),
    .q0( buf_2d_in_q0 )
);

dct_dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_2d_out_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buf_2d_out_address0 ),
    .ce0( buf_2d_out_ce0 ),
    .we0( buf_2d_out_we0 ),
    .d0( buf_2d_out_d0 ),
    .q0( buf_2d_out_q0 )
);

dct_dct_2d grp_dct_dct_2d_fu_184(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_dct_dct_2d_fu_184_ap_start ),
    .ap_done( grp_dct_dct_2d_fu_184_ap_done ),
    .ap_idle( grp_dct_dct_2d_fu_184_ap_idle ),
    .ap_ready( grp_dct_dct_2d_fu_184_ap_ready ),
    .in_block_address0( grp_dct_dct_2d_fu_184_in_block_address0 ),
    .in_block_ce0( grp_dct_dct_2d_fu_184_in_block_ce0 ),
    .in_block_q0( grp_dct_dct_2d_fu_184_in_block_q0 ),
    .out_block_address0( grp_dct_dct_2d_fu_184_out_block_address0 ),
    .out_block_ce0( grp_dct_dct_2d_fu_184_out_block_ce0 ),
    .out_block_we0( grp_dct_dct_2d_fu_184_out_block_we0 ),
    .out_block_d0( grp_dct_dct_2d_fu_184_out_block_d0 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_192_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_192_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond_flatten_fu_192_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_const_lv1_0 == exitcond_flatten1_fu_290_p2))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3) & ~(ap_const_logic_0 == grp_dct_dct_2d_fu_184_ap_done))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_flatten1_fu_290_p2))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3) & ~(ap_const_logic_0 == grp_dct_dct_2d_fu_184_ap_done)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_const_lv1_0 == exitcond_flatten1_fu_290_p2)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// grp_dct_dct_2d_fu_184_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_dct_dct_2d_fu_184_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_dct_dct_2d_fu_184_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_2)) begin
            grp_dct_dct_2d_fu_184_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_dct_dct_2d_fu_184_ap_ready)) begin
            grp_dct_dct_2d_fu_184_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_lv1_0 == exitcond_flatten1_fu_290_p2))) begin
        c_i6_reg_173 <= c_1_fu_379_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3) & ~(ap_const_logic_0 == grp_dct_dct_2d_fu_184_ap_done))) begin
        c_i6_reg_173 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_192_p2 == ap_const_lv1_0))) begin
        c_i_reg_140 <= c_fu_259_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        c_i_reg_140 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_lv1_0 == exitcond_flatten1_fu_290_p2))) begin
        indvar_flatten1_reg_151 <= indvar_flatten_next1_fu_296_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3) & ~(ap_const_logic_0 == grp_dct_dct_2d_fu_184_ap_done))) begin
        indvar_flatten1_reg_151 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_192_p2 == ap_const_lv1_0))) begin
        indvar_flatten_reg_118 <= indvar_flatten_next_fu_198_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        indvar_flatten_reg_118 <= ap_const_lv7_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == exitcond_flatten1_reg_419))) begin
        r_i2_reg_162 <= r_i2_mid2_reg_428;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3) & ~(ap_const_logic_0 == grp_dct_dct_2d_fu_184_ap_done))) begin
        r_i2_reg_162 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_389 == ap_const_lv1_0))) begin
        r_i_reg_129 <= r_i_mid2_reg_403;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        r_i_reg_129 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond_flatten_fu_192_p2 == ap_const_lv1_0))) begin
        c_i_mid2_reg_398 <= c_i_mid2_fu_210_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4)) begin
        exitcond_flatten1_reg_419 <= exitcond_flatten1_fu_290_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        exitcond_flatten_reg_389 <= exitcond_flatten_fu_192_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & (ap_const_lv1_0 == exitcond_flatten1_fu_290_p2))) begin
        r_i2_mid2_reg_428 <= r_i2_mid2_fu_322_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond_flatten_fu_192_p2 == ap_const_lv1_0))) begin
        r_i_mid2_reg_403 <= r_i_mid2_fu_224_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_lv1_0 == exitcond_flatten1_fu_290_p2))) begin
        tmp_9_i_reg_438 <= tmp_9_i_fu_373_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_5)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st8_fsm_5)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_5)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_61)
begin
    if (ap_sig_bdd_61) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_4 assign process. ///
always @ (ap_sig_bdd_89)
begin
    if (ap_sig_bdd_89) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_22)
begin
    if (ap_sig_bdd_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_2 assign process. ///
always @ (ap_sig_bdd_181)
begin
    if (ap_sig_bdd_181) begin
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_3 assign process. ///
always @ (ap_sig_bdd_120)
begin
    if (ap_sig_bdd_120) begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_5 assign process. ///
always @ (ap_sig_bdd_323)
begin
    if (ap_sig_bdd_323) begin
        ap_sig_cseq_ST_st8_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_5 = ap_const_logic_0;
    end
end

/// buf_2d_in_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st5_fsm_3 or grp_dct_dct_2d_fu_184_in_block_address0 or tmp_2_fu_285_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        buf_2d_in_address0 = tmp_2_fu_285_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        buf_2d_in_address0 = grp_dct_dct_2d_fu_184_in_block_address0;
    end else begin
        buf_2d_in_address0 = 'bx;
    end
end

/// buf_2d_in_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_st5_fsm_3 or grp_dct_dct_2d_fu_184_in_block_ce0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        buf_2d_in_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        buf_2d_in_ce0 = grp_dct_dct_2d_fu_184_in_block_ce0;
    end else begin
        buf_2d_in_ce0 = ap_const_logic_0;
    end
end

/// buf_2d_in_we0 assign process. ///
always @ (exitcond_flatten_reg_389 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_389 == ap_const_lv1_0))) begin
        buf_2d_in_we0 = ap_const_logic_1;
    end else begin
        buf_2d_in_we0 = ap_const_logic_0;
    end
end

/// buf_2d_out_address0 assign process. ///
always @ (ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_st5_fsm_3 or grp_dct_dct_2d_fu_184_out_block_address0 or tmp_5_fu_368_p1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        buf_2d_out_address0 = tmp_5_fu_368_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        buf_2d_out_address0 = grp_dct_dct_2d_fu_184_out_block_address0;
    end else begin
        buf_2d_out_address0 = 'bx;
    end
end

/// buf_2d_out_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_st5_fsm_3 or grp_dct_dct_2d_fu_184_out_block_ce0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))) begin
        buf_2d_out_ce0 = ap_const_logic_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        buf_2d_out_ce0 = grp_dct_dct_2d_fu_184_out_block_ce0;
    end else begin
        buf_2d_out_ce0 = ap_const_logic_0;
    end
end

/// buf_2d_out_we0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_3 or grp_dct_dct_2d_fu_184_out_block_we0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        buf_2d_out_we0 = grp_dct_dct_2d_fu_184_out_block_we0;
    end else begin
        buf_2d_out_we0 = ap_const_logic_0;
    end
end

/// input_r_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        input_r_ce0 = ap_const_logic_1;
    end else begin
        input_r_ce0 = ap_const_logic_0;
    end
end

/// output_r_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1))) begin
        output_r_ce0 = ap_const_logic_1;
    end else begin
        output_r_ce0 = ap_const_logic_0;
    end
end

/// output_r_we0 assign process. ///
always @ (exitcond_flatten1_reg_419 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == exitcond_flatten1_reg_419))) begin
        output_r_we0 = ap_const_logic_1;
    end else begin
        output_r_we0 = ap_const_logic_0;
    end
end

/// r_i2_phi_fu_166_p4 assign process. ///
always @ (r_i2_reg_162 or exitcond_flatten1_reg_419 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1 or r_i2_mid2_reg_428)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (ap_const_lv1_0 == exitcond_flatten1_reg_419))) begin
        r_i2_phi_fu_166_p4 = r_i2_mid2_reg_428;
    end else begin
        r_i2_phi_fu_166_p4 = r_i2_reg_162;
    end
end

/// r_i_phi_fu_133_p4 assign process. ///
always @ (r_i_reg_129 or exitcond_flatten_reg_389 or ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1 or r_i_mid2_reg_403)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_flatten_reg_389 == ap_const_lv1_0))) begin
        r_i_phi_fu_133_p4 = r_i_mid2_reg_403;
    end else begin
        r_i_phi_fu_133_p4 = r_i_reg_129;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond_flatten_fu_192_p2 or ap_reg_ppiten_pp0_it0 or exitcond_flatten1_fu_290_p2 or ap_reg_ppiten_pp1_it0 or grp_dct_dct_2d_fu_184_ap_done)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond_flatten_fu_192_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_2;
            end
        end
        ap_ST_st4_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_3;
        end
        ap_ST_st5_fsm_3 : 
        begin
            if (~(ap_const_logic_0 == grp_dct_dct_2d_fu_184_ap_done)) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end
        end
        ap_ST_pp1_stg0_fsm_4 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_const_lv1_0 == exitcond_flatten1_fu_290_p2))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_5;
            end
        end
        ap_ST_st8_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_120 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_120 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_181 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_181 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_22 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_22 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_323 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_323 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_61 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_61 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_89 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_89 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end
assign buf_2d_in_d0 = input_r_q0;
assign buf_2d_out_d0 = grp_dct_dct_2d_fu_184_out_block_d0;
assign c_1_fu_379_p2 = (ap_const_lv4_1 + c_i6_mid2_fu_308_p3);
assign c_fu_259_p2 = (ap_const_lv4_1 + c_i_mid2_fu_210_p3);
assign c_i6_cast2_fu_342_p1 = c_i6_mid2_fu_308_p3;
assign c_i6_mid2_fu_308_p3 = ((exitcond_i1_fu_302_p2[0:0]===1'b1)? ap_const_lv4_0: c_i6_reg_173);
assign c_i_cast6_fu_244_p1 = c_i_mid2_fu_210_p3;
assign c_i_mid2_fu_210_p3 = ((exitcond_i_fu_204_p2[0:0]===1'b1)? ap_const_lv4_0: c_i_reg_140);
assign exitcond_flatten1_fu_290_p2 = (indvar_flatten1_reg_151 == ap_const_lv7_40? 1'b1: 1'b0);
assign exitcond_flatten_fu_192_p2 = (indvar_flatten_reg_118 == ap_const_lv7_40? 1'b1: 1'b0);
assign exitcond_i1_fu_302_p2 = (c_i6_reg_173 == ap_const_lv4_8? 1'b1: 1'b0);
assign exitcond_i_fu_204_p2 = (c_i_reg_140 == ap_const_lv4_8? 1'b1: 1'b0);
assign grp_dct_dct_2d_fu_184_ap_start = grp_dct_dct_2d_fu_184_ap_start_ap_start_reg;
assign grp_dct_dct_2d_fu_184_in_block_q0 = buf_2d_in_q0;
assign indvar_flatten_next1_fu_296_p2 = (indvar_flatten1_reg_151 + ap_const_lv7_1);
assign indvar_flatten_next_fu_198_p2 = (indvar_flatten_reg_118 + ap_const_lv7_1);
assign input_r_address0 = tmp_6_i_fu_254_p1;
assign output_r_address0 = tmp_3_i_fu_385_p1;
assign output_r_d0 = buf_2d_out_q0;
assign p_addr1_fu_279_p2 = (p_addr_cast_fu_275_p1 + tmp_7_i_trn_cast_fu_265_p1);
assign p_addr2_cast_fu_358_p1 = tmp_4_fu_350_p3;
assign p_addr3_fu_362_p2 = (p_addr2_cast_fu_358_p1 + tmp_8_i_trn_cast_fu_346_p1);
assign p_addr_cast_fu_275_p1 = tmp_1_fu_268_p3;
assign r_fu_218_p2 = (ap_const_lv4_1 + r_i_phi_fu_133_p4);
assign r_i2_mid2_fu_322_p3 = ((exitcond_i1_fu_302_p2[0:0]===1'b1)? r_s_fu_316_p2: r_i2_phi_fu_166_p4);
assign r_i_mid2_fu_224_p3 = ((exitcond_i_fu_204_p2[0:0]===1'b1)? r_fu_218_p2: r_i_phi_fu_133_p4);
assign r_s_fu_316_p2 = (ap_const_lv4_1 + r_i2_phi_fu_166_p4);
assign tmp_1_fu_268_p3 = {{r_i_mid2_reg_403}, {ap_const_lv3_0}};
assign tmp_2_fu_285_p1 = p_addr1_fu_279_p2;
assign tmp_3_fu_330_p1 = r_i2_mid2_fu_322_p3[2:0];
assign tmp_3_i_fu_385_p1 = tmp_9_i_reg_438;
assign tmp_4_fu_350_p3 = {{r_i2_mid2_fu_322_p3}, {ap_const_lv3_0}};
assign tmp_5_fu_368_p1 = p_addr3_fu_362_p2;
assign tmp_5_i_fu_248_p2 = (c_i_cast6_fu_244_p1 + tmp_i_fu_236_p3);
assign tmp_6_i_fu_254_p1 = tmp_5_i_fu_248_p2;
assign tmp_7_i_trn_cast_fu_265_p1 = c_i_mid2_reg_398;
assign tmp_8_i_trn_cast_fu_346_p1 = c_i6_mid2_fu_308_p3;
assign tmp_9_i_fu_373_p2 = (c_i6_cast2_fu_342_p1 + tmp_i5_fu_334_p3);
assign tmp_fu_232_p1 = r_i_mid2_fu_224_p3[2:0];
assign tmp_i5_fu_334_p3 = {{tmp_3_fu_330_p1}, {ap_const_lv3_0}};
assign tmp_i_fu_236_p3 = {{tmp_fu_232_p1}, {ap_const_lv3_0}};


endmodule //dct

