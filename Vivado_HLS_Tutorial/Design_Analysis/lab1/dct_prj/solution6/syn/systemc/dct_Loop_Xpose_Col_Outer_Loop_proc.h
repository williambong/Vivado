// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _dct_Loop_Xpose_Col_Outer_Loop_proc_HH_
#define _dct_Loop_Xpose_Col_Outer_Loop_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct dct_Loop_Xpose_Col_Outer_Loop_proc : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > col_outbuf_i_address0;
    sc_out< sc_logic > col_outbuf_i_ce0;
    sc_in< sc_lv<16> > col_outbuf_i_q0;
    sc_out< sc_lv<6> > buf_2d_out_address0;
    sc_out< sc_logic > buf_2d_out_ce0;
    sc_out< sc_logic > buf_2d_out_we0;
    sc_out< sc_lv<16> > buf_2d_out_d0;


    // Module declarations
    dct_Loop_Xpose_Col_Outer_Loop_proc(sc_module_name name);
    SC_HAS_PROCESS(dct_Loop_Xpose_Col_Outer_Loop_proc);

    ~dct_Loop_Xpose_Col_Outer_Loop_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_22;
    sc_signal< sc_lv<7> > indvar_flatten_reg_69;
    sc_signal< sc_lv<4> > j_1_i_reg_80;
    sc_signal< sc_lv<4> > i_3_i_reg_91;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_102_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_200;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_1;
    sc_signal< bool > ap_sig_bdd_55;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<7> > indvar_flatten_next_fu_108_p2;
    sc_signal< sc_lv<4> > i_3_i_mid2_fu_120_p3;
    sc_signal< sc_lv<4> > i_3_i_mid2_reg_209;
    sc_signal< sc_lv<4> > j_1_i_mid2_fu_134_p3;
    sc_signal< sc_lv<4> > j_1_i_mid2_reg_214;
    sc_signal< sc_lv<4> > i_fu_169_p2;
    sc_signal< bool > ap_sig_bdd_79;
    sc_signal< sc_lv<4> > j_1_i_phi_fu_84_p4;
    sc_signal< sc_lv<64> > tmp_s_fu_164_p1;
    sc_signal< sc_lv<64> > tmp_2_fu_195_p1;
    sc_signal< sc_lv<1> > exitcond_i8_fu_114_p2;
    sc_signal< sc_lv<4> > j6_fu_128_p2;
    sc_signal< sc_lv<7> > tmp_fu_146_p3;
    sc_signal< sc_lv<8> > tmp_9_trn_cast_fu_142_p1;
    sc_signal< sc_lv<8> > p_addr_cast_fu_154_p1;
    sc_signal< sc_lv<8> > p_addr1_fu_158_p2;
    sc_signal< sc_lv<7> > tmp_1_fu_178_p3;
    sc_signal< sc_lv<8> > tmp_trn_cast_fu_175_p1;
    sc_signal< sc_lv<8> > p_addr4_cast_fu_185_p1;
    sc_signal< sc_lv<8> > p_addr5_fu_189_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_2;
    sc_signal< bool > ap_sig_bdd_164;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_pp0_stg0_fsm_1;
    static const sc_lv<3> ap_ST_st4_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_164();
    void thread_ap_sig_bdd_22();
    void thread_ap_sig_bdd_55();
    void thread_ap_sig_bdd_79();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_1();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st4_fsm_2();
    void thread_buf_2d_out_address0();
    void thread_buf_2d_out_ce0();
    void thread_buf_2d_out_d0();
    void thread_buf_2d_out_we0();
    void thread_col_outbuf_i_address0();
    void thread_col_outbuf_i_ce0();
    void thread_exitcond_flatten_fu_102_p2();
    void thread_exitcond_i8_fu_114_p2();
    void thread_i_3_i_mid2_fu_120_p3();
    void thread_i_fu_169_p2();
    void thread_indvar_flatten_next_fu_108_p2();
    void thread_j6_fu_128_p2();
    void thread_j_1_i_mid2_fu_134_p3();
    void thread_j_1_i_phi_fu_84_p4();
    void thread_p_addr1_fu_158_p2();
    void thread_p_addr4_cast_fu_185_p1();
    void thread_p_addr5_fu_189_p2();
    void thread_p_addr_cast_fu_154_p1();
    void thread_tmp_1_fu_178_p3();
    void thread_tmp_2_fu_195_p1();
    void thread_tmp_9_trn_cast_fu_142_p1();
    void thread_tmp_fu_146_p3();
    void thread_tmp_s_fu_164_p1();
    void thread_tmp_trn_cast_fu_175_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
