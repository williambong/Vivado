// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_dct_1d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_address0,
        src_ce0,
        src_q0,
        src1_address0,
        src1_ce0,
        src1_q0,
        src2_address0,
        src2_ce0,
        src2_q0,
        src3_address0,
        src3_ce0,
        src3_q0,
        src4_address0,
        src4_ce0,
        src4_q0,
        src5_address0,
        src5_ce0,
        src5_q0,
        src6_address0,
        src6_ce0,
        src6_q0,
        src7_address0,
        src7_ce0,
        src7_q0,
        tmp_1,
        dst_address0,
        dst_ce0,
        dst_we0,
        dst_d0,
        tmp_11
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 3'b1;
parameter    ap_ST_pp0_stg0_fsm_1 = 3'b10;
parameter    ap_ST_st7_fsm_2 = 3'b100;
parameter    ap_true = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv4_8 = 4'b1000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv29_1000 = 29'b1000000000000;
parameter    ap_const_lv32_2 = 32'b10;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] src_address0;
output   src_ce0;
input  [15:0] src_q0;
output  [2:0] src1_address0;
output   src1_ce0;
input  [15:0] src1_q0;
output  [2:0] src2_address0;
output   src2_ce0;
input  [15:0] src2_q0;
output  [2:0] src3_address0;
output   src3_ce0;
input  [15:0] src3_q0;
output  [2:0] src4_address0;
output   src4_ce0;
input  [15:0] src4_q0;
output  [2:0] src5_address0;
output   src5_ce0;
input  [15:0] src5_q0;
output  [2:0] src6_address0;
output   src6_ce0;
input  [15:0] src6_q0;
output  [2:0] src7_address0;
output   src7_ce0;
input  [15:0] src7_q0;
input  [3:0] tmp_1;
output  [5:0] dst_address0;
output   dst_ce0;
output   dst_we0;
output  [15:0] dst_d0;
input  [3:0] tmp_11;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_ce0;
reg src1_ce0;
reg src2_ce0;
reg src3_ce0;
reg src4_ce0;
reg src5_ce0;
reg src6_ce0;
reg src7_ce0;
reg dst_ce0;
reg dst_we0;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm = 3'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_21;
wire   [2:0] dct_coeff_table_0_address0;
reg    dct_coeff_table_0_ce0;
wire   [13:0] dct_coeff_table_0_q0;
wire   [2:0] dct_coeff_table_1_address0;
reg    dct_coeff_table_1_ce0;
wire   [14:0] dct_coeff_table_1_q0;
wire   [2:0] dct_coeff_table_2_address0;
reg    dct_coeff_table_2_ce0;
wire   [14:0] dct_coeff_table_2_q0;
wire   [2:0] dct_coeff_table_3_address0;
reg    dct_coeff_table_3_ce0;
wire   [14:0] dct_coeff_table_3_q0;
wire   [2:0] dct_coeff_table_4_address0;
reg    dct_coeff_table_4_ce0;
wire   [14:0] dct_coeff_table_4_q0;
wire   [2:0] dct_coeff_table_5_address0;
reg    dct_coeff_table_5_ce0;
wire   [14:0] dct_coeff_table_5_q0;
wire   [2:0] dct_coeff_table_6_address0;
reg    dct_coeff_table_6_ce0;
wire   [14:0] dct_coeff_table_6_q0;
wire   [2:0] dct_coeff_table_7_address0;
reg    dct_coeff_table_7_ce0;
wire   [14:0] dct_coeff_table_7_q0;
reg   [3:0] k_reg_288;
reg   [2:0] src_addr_reg_490;
reg   [2:0] src1_addr_reg_495;
reg   [2:0] src2_addr_reg_500;
reg   [2:0] src3_addr_reg_505;
reg   [2:0] src4_addr_reg_510;
reg   [2:0] src5_addr_reg_515;
reg   [2:0] src6_addr_reg_520;
reg   [2:0] src7_addr_reg_525;
wire   [7:0] p_addr_cast_fu_319_p1;
reg   [7:0] p_addr_cast_reg_530;
wire   [0:0] exitcond1_fu_323_p2;
reg   [0:0] exitcond1_reg_535;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_1;
reg    ap_sig_bdd_169;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_535_pp0_it1;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_535_pp0_it2;
reg   [0:0] ap_reg_ppstg_exitcond1_reg_535_pp0_it3;
wire   [3:0] k_1_fu_329_p2;
wire   [7:0] p_addr1_fu_351_p2;
reg   [7:0] p_addr1_reg_584;
reg   [7:0] ap_reg_ppstg_p_addr1_reg_584_pp0_it1;
reg   [7:0] ap_reg_ppstg_p_addr1_reg_584_pp0_it2;
reg   [7:0] ap_reg_ppstg_p_addr1_reg_584_pp0_it3;
reg   [13:0] dct_coeff_table_0_load_reg_589;
reg   [13:0] ap_reg_ppstg_dct_coeff_table_0_load_reg_589_pp0_it2;
reg   [14:0] dct_coeff_table_1_load_reg_594;
reg   [15:0] src1_load_reg_599;
reg   [14:0] dct_coeff_table_2_load_reg_604;
reg   [14:0] ap_reg_ppstg_dct_coeff_table_2_load_reg_604_pp0_it2;
reg   [14:0] dct_coeff_table_3_load_reg_609;
reg   [15:0] src3_load_reg_614;
reg   [14:0] dct_coeff_table_4_load_reg_619;
reg   [14:0] ap_reg_ppstg_dct_coeff_table_4_load_reg_619_pp0_it2;
reg   [14:0] dct_coeff_table_5_load_reg_624;
reg   [15:0] src5_load_reg_629;
reg   [14:0] dct_coeff_table_6_load_reg_634;
reg   [15:0] src6_load_reg_639;
reg   [14:0] dct_coeff_table_7_load_reg_644;
reg   [15:0] src7_load_reg_649;
reg   [15:0] src_load_reg_654;
wire  signed [28:0] tmp_8_1_fu_362_p2;
reg  signed [28:0] tmp_8_1_reg_659;
reg   [15:0] src2_load_reg_664;
wire  signed [28:0] tmp_8_3_fu_374_p2;
reg  signed [28:0] tmp_8_3_reg_669;
reg   [15:0] src4_load_reg_674;
wire  signed [28:0] tmp_8_5_fu_386_p2;
reg  signed [28:0] tmp_8_5_reg_679;
wire  signed [28:0] grp_fu_466_p3;
reg  signed [28:0] tmp6_reg_684;
reg   [15:0] tmp_4_reg_689;
wire   [63:0] tmp_1_cast_fu_299_p1;
wire   [63:0] tmp_fu_335_p1;
wire   [63:0] tmp_5_fu_446_p1;
wire   [6:0] tmp_3_fu_311_p3;
wire   [7:0] tmp_trn_cast_fu_347_p1;
wire  signed [15:0] tmp_8_1_fu_362_p0;
wire  signed [14:0] tmp_8_1_fu_362_p1;
wire  signed [15:0] tmp_8_3_fu_374_p0;
wire  signed [14:0] tmp_8_3_fu_374_p1;
wire  signed [15:0] tmp_8_5_fu_386_p0;
wire  signed [14:0] tmp_8_5_fu_386_p1;
wire  signed [28:0] grp_fu_482_p3;
wire  signed [28:0] grp_fu_474_p3;
wire  signed [28:0] grp_fu_450_p3;
(* use_dsp48 = "no" *) wire  signed [28:0] tmp1_fu_422_p2;
(* use_dsp48 = "no" *) wire  signed [28:0] tmp4_fu_426_p2;
wire  signed [28:0] tmp_2_fu_430_p2;
wire  signed [15:0] grp_fu_450_p0;
wire  signed [14:0] grp_fu_450_p1;
wire  signed [28:0] grp_fu_450_p2;
wire  signed [15:0] grp_fu_458_p0;
wire  signed [14:0] grp_fu_458_p1;
wire   [13:0] grp_fu_458_p2;
wire  signed [15:0] grp_fu_466_p0;
wire  signed [14:0] grp_fu_466_p1;
wire  signed [28:0] grp_fu_466_p2;
wire  signed [28:0] grp_fu_458_p3;
wire  signed [15:0] grp_fu_474_p0;
wire  signed [14:0] grp_fu_474_p1;
wire  signed [28:0] grp_fu_474_p2;
wire  signed [15:0] grp_fu_482_p0;
wire   [13:0] grp_fu_482_p1;
wire  signed [28:0] grp_fu_482_p2;
reg    ap_sig_cseq_ST_st7_fsm_2;
reg    ap_sig_bdd_402;
reg   [2:0] ap_NS_fsm;
wire   [28:0] grp_fu_482_p10;


dct_dct_1d_dct_coeff_table_0 #(
    .DataWidth( 14 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_0_address0 ),
    .ce0( dct_coeff_table_0_ce0 ),
    .q0( dct_coeff_table_0_q0 )
);

dct_dct_1d_dct_coeff_table_1 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_1_address0 ),
    .ce0( dct_coeff_table_1_ce0 ),
    .q0( dct_coeff_table_1_q0 )
);

dct_dct_1d_dct_coeff_table_2 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_2_address0 ),
    .ce0( dct_coeff_table_2_ce0 ),
    .q0( dct_coeff_table_2_q0 )
);

dct_dct_1d_dct_coeff_table_3 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_3_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_3_address0 ),
    .ce0( dct_coeff_table_3_ce0 ),
    .q0( dct_coeff_table_3_q0 )
);

dct_dct_1d_dct_coeff_table_4 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_4_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_4_address0 ),
    .ce0( dct_coeff_table_4_ce0 ),
    .q0( dct_coeff_table_4_q0 )
);

dct_dct_1d_dct_coeff_table_5 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_5_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_5_address0 ),
    .ce0( dct_coeff_table_5_ce0 ),
    .q0( dct_coeff_table_5_q0 )
);

dct_dct_1d_dct_coeff_table_6 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_6_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_6_address0 ),
    .ce0( dct_coeff_table_6_ce0 ),
    .q0( dct_coeff_table_6_q0 )
);

dct_dct_1d_dct_coeff_table_7 #(
    .DataWidth( 15 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
dct_coeff_table_7_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( dct_coeff_table_7_address0 ),
    .ce0( dct_coeff_table_7_ce0 ),
    .q0( dct_coeff_table_7_q0 )
);

dct_mac_muladd_16s_15s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16s_15s_29s_29_1_U9(
    .din0( grp_fu_450_p0 ),
    .din1( grp_fu_450_p1 ),
    .din2( grp_fu_450_p2 ),
    .dout( grp_fu_450_p3 )
);

dct_mac_muladd_16s_15s_14ns_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16s_15s_14ns_29_1_U10(
    .din0( grp_fu_458_p0 ),
    .din1( grp_fu_458_p1 ),
    .din2( grp_fu_458_p2 ),
    .dout( grp_fu_458_p3 )
);

dct_mac_muladd_16s_15s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16s_15s_29s_29_1_U11(
    .din0( grp_fu_466_p0 ),
    .din1( grp_fu_466_p1 ),
    .din2( grp_fu_466_p2 ),
    .dout( grp_fu_466_p3 )
);

dct_mac_muladd_16s_15s_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 15 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16s_15s_29s_29_1_U12(
    .din0( grp_fu_474_p0 ),
    .din1( grp_fu_474_p1 ),
    .din2( grp_fu_474_p2 ),
    .dout( grp_fu_474_p3 )
);

dct_mac_muladd_16s_14ns_29s_29_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 29 ),
    .dout_WIDTH( 29 ))
dct_mac_muladd_16s_14ns_29s_29_1_U13(
    .din0( grp_fu_482_p0 ),
    .din1( grp_fu_482_p1 ),
    .din2( grp_fu_482_p2 ),
    .dout( grp_fu_482_p3 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond1_fu_323_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond1_fu_323_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & ~(exitcond1_fu_323_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (exitcond1_fu_323_p2 == ap_const_lv1_0))) begin
        k_reg_288 <= k_1_fu_329_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        k_reg_288 <= ap_const_lv4_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_true == ap_true)) begin
        ap_reg_ppstg_dct_coeff_table_0_load_reg_589_pp0_it2 <= dct_coeff_table_0_load_reg_589;
        ap_reg_ppstg_dct_coeff_table_2_load_reg_604_pp0_it2 <= dct_coeff_table_2_load_reg_604;
        ap_reg_ppstg_dct_coeff_table_4_load_reg_619_pp0_it2 <= dct_coeff_table_4_load_reg_619;
        ap_reg_ppstg_exitcond1_reg_535_pp0_it2 <= ap_reg_ppstg_exitcond1_reg_535_pp0_it1;
        ap_reg_ppstg_exitcond1_reg_535_pp0_it3 <= ap_reg_ppstg_exitcond1_reg_535_pp0_it2;
        ap_reg_ppstg_p_addr1_reg_584_pp0_it2 <= ap_reg_ppstg_p_addr1_reg_584_pp0_it1;
        ap_reg_ppstg_p_addr1_reg_584_pp0_it3 <= ap_reg_ppstg_p_addr1_reg_584_pp0_it2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1)) begin
        ap_reg_ppstg_exitcond1_reg_535_pp0_it1 <= exitcond1_reg_535;
        ap_reg_ppstg_p_addr1_reg_584_pp0_it1 <= p_addr1_reg_584;
        exitcond1_reg_535 <= exitcond1_fu_323_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond1_reg_535 == ap_const_lv1_0))) begin
        dct_coeff_table_0_load_reg_589 <= dct_coeff_table_0_q0;
        dct_coeff_table_1_load_reg_594 <= dct_coeff_table_1_q0;
        dct_coeff_table_2_load_reg_604 <= dct_coeff_table_2_q0;
        dct_coeff_table_3_load_reg_609 <= dct_coeff_table_3_q0;
        dct_coeff_table_4_load_reg_619 <= dct_coeff_table_4_q0;
        dct_coeff_table_5_load_reg_624 <= dct_coeff_table_5_q0;
        dct_coeff_table_6_load_reg_634 <= dct_coeff_table_6_q0;
        dct_coeff_table_7_load_reg_644 <= dct_coeff_table_7_q0;
        src1_load_reg_599 <= src1_q0;
        src3_load_reg_614 <= src3_q0;
        src5_load_reg_629 <= src5_q0;
        src6_load_reg_639 <= src6_q0;
        src7_load_reg_649 <= src7_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (exitcond1_fu_323_p2 == ap_const_lv1_0))) begin
        p_addr1_reg_584 <= p_addr1_fu_351_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        p_addr_cast_reg_530[6 : 3] <= p_addr_cast_fu_319_p1[6 : 3];
        src1_addr_reg_495 <= tmp_1_cast_fu_299_p1;
        src2_addr_reg_500 <= tmp_1_cast_fu_299_p1;
        src3_addr_reg_505 <= tmp_1_cast_fu_299_p1;
        src4_addr_reg_510 <= tmp_1_cast_fu_299_p1;
        src5_addr_reg_515 <= tmp_1_cast_fu_299_p1;
        src6_addr_reg_520 <= tmp_1_cast_fu_299_p1;
        src7_addr_reg_525 <= tmp_1_cast_fu_299_p1;
        src_addr_reg_490 <= tmp_1_cast_fu_299_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond1_reg_535_pp0_it1 == ap_const_lv1_0)) begin
        src2_load_reg_664 <= src2_q0;
        src4_load_reg_674 <= src4_q0;
        src_load_reg_654 <= src_q0;
        tmp6_reg_684 <= grp_fu_466_p3;
        tmp_8_1_reg_659 <= tmp_8_1_fu_362_p2;
        tmp_8_3_reg_669 <= tmp_8_3_fu_374_p2;
        tmp_8_5_reg_679 <= tmp_8_5_fu_386_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_reg_ppstg_exitcond1_reg_535_pp0_it2 == ap_const_lv1_0)) begin
        tmp_4_reg_689 <= {{tmp_2_fu_430_p2[ap_const_lv32_1C : ap_const_lv32_D]}};
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st7_fsm_2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_2))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_2)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_2)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_1 assign process. ///
always @ (ap_sig_bdd_169)
begin
    if (ap_sig_bdd_169) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_21)
begin
    if (ap_sig_bdd_21) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_2 assign process. ///
always @ (ap_sig_bdd_402)
begin
    if (ap_sig_bdd_402) begin
        ap_sig_cseq_ST_st7_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_2 = ap_const_logic_0;
    end
end

/// dct_coeff_table_0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_0_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_0_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_1_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_1_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_2_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_2_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_3_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_3_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_3_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_4_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_4_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_4_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_5_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_5_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_5_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_6_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_6_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_6_ce0 = ap_const_logic_0;
    end
end

/// dct_coeff_table_7_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        dct_coeff_table_7_ce0 = ap_const_logic_1;
    end else begin
        dct_coeff_table_7_ce0 = ap_const_logic_0;
    end
end

/// dst_ce0 assign process. ///
always @ (ap_reg_ppiten_pp0_it4)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it4)) begin
        dst_ce0 = ap_const_logic_1;
    end else begin
        dst_ce0 = ap_const_logic_0;
    end
end

/// dst_we0 assign process. ///
always @ (ap_reg_ppiten_pp0_it4 or ap_reg_ppstg_exitcond1_reg_535_pp0_it3)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it4) & (ap_reg_ppstg_exitcond1_reg_535_pp0_it3 == ap_const_lv1_0))) begin
        dst_we0 = ap_const_logic_1;
    end else begin
        dst_we0 = ap_const_logic_0;
    end
end

/// src1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        src1_ce0 = ap_const_logic_1;
    end else begin
        src1_ce0 = ap_const_logic_0;
    end
end

/// src2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        src2_ce0 = ap_const_logic_1;
    end else begin
        src2_ce0 = ap_const_logic_0;
    end
end

/// src3_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        src3_ce0 = ap_const_logic_1;
    end else begin
        src3_ce0 = ap_const_logic_0;
    end
end

/// src4_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        src4_ce0 = ap_const_logic_1;
    end else begin
        src4_ce0 = ap_const_logic_0;
    end
end

/// src5_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        src5_ce0 = ap_const_logic_1;
    end else begin
        src5_ce0 = ap_const_logic_0;
    end
end

/// src6_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        src6_ce0 = ap_const_logic_1;
    end else begin
        src6_ce0 = ap_const_logic_0;
    end
end

/// src7_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it0)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
        src7_ce0 = ap_const_logic_1;
    end else begin
        src7_ce0 = ap_const_logic_0;
    end
end

/// src_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_1 or ap_reg_ppiten_pp0_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        src_ce0 = ap_const_logic_1;
    end else begin
        src_ce0 = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond1_fu_323_p2 or ap_reg_ppiten_pp0_it0 or ap_reg_ppiten_pp0_it1 or ap_reg_ppiten_pp0_it3 or ap_reg_ppiten_pp0_it4)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_pp0_stg0_fsm_1 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it4) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it3)) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond1_fu_323_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(exitcond1_fu_323_p2 == ap_const_lv1_0) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st7_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_2;
            end
        end
        ap_ST_st7_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_169 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_169 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_21 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_21 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_402 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_402 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end
assign dct_coeff_table_0_address0 = tmp_fu_335_p1;
assign dct_coeff_table_1_address0 = tmp_fu_335_p1;
assign dct_coeff_table_2_address0 = tmp_fu_335_p1;
assign dct_coeff_table_3_address0 = tmp_fu_335_p1;
assign dct_coeff_table_4_address0 = tmp_fu_335_p1;
assign dct_coeff_table_5_address0 = tmp_fu_335_p1;
assign dct_coeff_table_6_address0 = tmp_fu_335_p1;
assign dct_coeff_table_7_address0 = tmp_fu_335_p1;
assign dst_address0 = tmp_5_fu_446_p1;
assign dst_d0 = tmp_4_reg_689;
assign exitcond1_fu_323_p2 = (k_reg_288 == ap_const_lv4_8? 1'b1: 1'b0);
assign grp_fu_450_p0 = src4_load_reg_674;
assign grp_fu_450_p1 = ap_reg_ppstg_dct_coeff_table_4_load_reg_619_pp0_it2;
assign grp_fu_450_p2 = tmp_8_5_reg_679;
assign grp_fu_458_p0 = src7_load_reg_649;
assign grp_fu_458_p1 = dct_coeff_table_7_load_reg_644;
assign grp_fu_458_p2 = ap_const_lv29_1000;
assign grp_fu_466_p0 = src6_load_reg_639;
assign grp_fu_466_p1 = dct_coeff_table_6_load_reg_634;
assign grp_fu_466_p2 = grp_fu_458_p3;
assign grp_fu_474_p0 = src2_load_reg_664;
assign grp_fu_474_p1 = ap_reg_ppstg_dct_coeff_table_2_load_reg_604_pp0_it2;
assign grp_fu_474_p2 = tmp_8_3_reg_669;
assign grp_fu_482_p0 = src_load_reg_654;
assign grp_fu_482_p1 = grp_fu_482_p10;
assign grp_fu_482_p10 = ap_reg_ppstg_dct_coeff_table_0_load_reg_589_pp0_it2;
assign grp_fu_482_p2 = tmp_8_1_reg_659;
assign k_1_fu_329_p2 = (k_reg_288 + ap_const_lv4_1);
assign p_addr1_fu_351_p2 = (p_addr_cast_reg_530 + tmp_trn_cast_fu_347_p1);
assign p_addr_cast_fu_319_p1 = tmp_3_fu_311_p3;
assign src1_address0 = src1_addr_reg_495;
assign src2_address0 = src2_addr_reg_500;
assign src3_address0 = src3_addr_reg_505;
assign src4_address0 = src4_addr_reg_510;
assign src5_address0 = src5_addr_reg_515;
assign src6_address0 = src6_addr_reg_520;
assign src7_address0 = src7_addr_reg_525;
assign src_address0 = src_addr_reg_490;
assign tmp1_fu_422_p2 = ($signed(grp_fu_482_p3) + $signed(grp_fu_474_p3));
assign tmp4_fu_426_p2 = ($signed(grp_fu_450_p3) + $signed(tmp6_reg_684));
assign tmp_1_cast_fu_299_p1 = tmp_1;
assign tmp_2_fu_430_p2 = ($signed(tmp1_fu_422_p2) + $signed(tmp4_fu_426_p2));
assign tmp_3_fu_311_p3 = {{tmp_11}, {ap_const_lv3_0}};
assign tmp_5_fu_446_p1 = ap_reg_ppstg_p_addr1_reg_584_pp0_it3;
assign tmp_8_1_fu_362_p0 = src1_load_reg_599;
assign tmp_8_1_fu_362_p1 = dct_coeff_table_1_load_reg_594;
assign tmp_8_1_fu_362_p2 = ($signed(tmp_8_1_fu_362_p0) * $signed(tmp_8_1_fu_362_p1));
assign tmp_8_3_fu_374_p0 = src3_load_reg_614;
assign tmp_8_3_fu_374_p1 = dct_coeff_table_3_load_reg_609;
assign tmp_8_3_fu_374_p2 = ($signed(tmp_8_3_fu_374_p0) * $signed(tmp_8_3_fu_374_p1));
assign tmp_8_5_fu_386_p0 = src5_load_reg_629;
assign tmp_8_5_fu_386_p1 = dct_coeff_table_5_load_reg_624;
assign tmp_8_5_fu_386_p2 = ($signed(tmp_8_5_fu_386_p0) * $signed(tmp_8_5_fu_386_p1));
assign tmp_fu_335_p1 = k_reg_288;
assign tmp_trn_cast_fu_347_p1 = k_reg_288;
always @ (posedge ap_clk)
begin
    p_addr_cast_reg_530[2:0] <= 3'b000;
    p_addr_cast_reg_530[7] <= 1'b0;
end



endmodule //dct_dct_1d

